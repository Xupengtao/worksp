
	;     .386 t50hzy18.asm+6time clear chan
	NAME    WERM
	CGROUP GROUP CODE
	DGROUP GROUP DATA
	ASSUME CS:CGROUP,DS:DGROUP,SS:STACK
	STACK SEGMENT STACK
		DW 1000 DUP(?)
	STACK_TOP LABEL WORD
	STACK ENDS
	DATA SEGMENT WORD PUBLIC 'DATA'
	DISCM DB 00H
	ANPUN DB 00H
	ANPNC DB 0
	TOASCL DW 0
	TOA3E8 DW 1000D
	TOA05 DW 0
	TOA34 DW 0
	T34 DW 0
	TEMP14 DW 0
	TOAON DW 0
	CHRAN DB 0
	TOAPN DB 0
	NUMB DB 0
	CHNUM DB 0
	TOAAN DB 0
	CHNR DB 0
	CHNRT DW 0
	ACHNR DW 0
	CHT DW 0
	CNDC DW 0
	ANCHA DW 0
	SAILN DB 128 DUP(0)
	COMN DW 0
	SBTI DB 0
	QQPD DB 0
	DAOA DB 0
	DARRY DB 5 DUP(0)
	F2J DB 0AAH
	F3J DB 55H
	TY DB 0
	AG DB 0
	AGB DB 0
	AGF DB 0
	AGW DB 0
	API DB 0
	MEN DB 0
	MEC DB 0
	IWTAB DB 100 DUP(0)
	ANSCD DW 500 DUP(0)
	FANTC DB 20h
	FANTN DB 00,01,02,03,04,05,06,07,08,09,0AH,0BH,0CH,0DH,0EH,0FH
	DB 10H,11H,12H,13H,14H,15H,16H,17H,18H,19H,1AH,1BH,1CH,1DH,1EH,1FH
	DB 68 DUP(0)
	FANTA DW 1000H,1050H,10A0H,10F0H,1140H,1190H,11E0H,1230H,1280H
	DW 12D0H,1320H,1370H,13C0H,1410H,1460H,14B0H,1500H,1550H,15A0H,15F0H
	DW 1640H,1690H,16E0H,1730H,1780H,17D0H,1820H,1870H,18C0H,1910H,1960H,19B0H
	DW 68 DUP(0)
	  BITT DB 0
	  ABU DB 0
	FATON DW 101 DUP(0)
	FANTF DW 101 DUP(0)
	FANTP DW 101 DUP(0)
	FANTW DW 101 DUP(0)
	SANCF DW 256 DUP(0)
	SANCP DW 256 DUP(0)
	SANCT DW 256 DUP(0)
	SANCA DW 256 DUP(0)
	SACTN DW 256 DUP(0)
	SANCC DB 0
	BIN DB 0
	E9 DB 0
	MM DB 20H
	II DB 0
	KK DB 0
	JJ DB 0
	LL DB 0
	TEMP DW 0
	RUSLT DB 704 DUP(0)
	TOAL DW 101 DUP(0)
	NL DB 100 DUP(0)
	PADDT DB 6400 DUP(0)
	TOAIT DB 101D DUP(0)
	SAPN DB 101 DUP(0)
	CFR DW 101 DUP(0)
	CPW DW 101 DUP(0)
	CPA DW 101 DUP(0)
	CTOA DW 101 DUP(0)
	CTON DW 101 DUP(0)
	CADDR DW 33 DUP(0)
	CWI DW 0
	ADDRR DW 0
	INJDN DB 0
	INJDA DB 8 DUP(0)
	INJDT DB 0
	XIPE DW 0
	DOUPN DB 32 DUP(0)
	DOUIT DB 33 DUP(0)
	TOAMX DW 0
	TOAMN DW 0
	FMAX DW 0
	FMIN DW 0
	PADAD DW 0
	INJCP DW 0
	INJCA DB 8 DUP(0)
	DOAPA DW 101 DUP(0)
	DOAMX DW 0
	DOAM DW 0
	DTC DB 0
	DTT DW 0
	PU1 DW 0
	PU2 DW 0
	EPA DB 0
	TXN DW 3 DUP(0)
	SCPA DW 256 DUP(0)
	SCTON DW 256 DUP(0)
	SCTI DB 256 DUP(0)
	SPRIR DW 0
	SCPC DB 0
	DPA DB 18 DUP(0)
	T1 DW 0
	T2 DW 0
	PTON DW  0
	PTON1 DW 0
	DOAC DB 00
	AGACN DW 50 DUP(0)
	INJEA DW 8 DUP(0)
      APE DB 0
	DOP DW 5 DUP(0)
      VAR_PER DD 0FE000000H
      DOAMX1 DW 0
	DOAMX2 DW 0    
	DOAMX3 DB 0
	MNCON DB 9 DUP(0)
	DOAPA1 DW 101 DUP(0)
	PRFP DW 3 DUP(0)
	PRIP DW 0
	PRIBC DW 0
	PWC DW 0
	PWCC DW 0
	EDOA DB 0
	PDOA DW 0
	TDOATB DW 192 DUP(0)
	DOATB DW 344 DUP(0)
	AGP1 DW 0
	PIN DW 0
	PASL DW 3 DUP(0)
	PASR DW 3 DUP(0)
	PASI DW 61 DUP(0)
	BC1 DB 0
	CHK DW 0
	TI DB 0
	DTOA DW 0
	DTON DW 0
	ECOUT DB 0
	ECOUT1 DB 0
	FIXSEC DB 0
	FISCOU DW 0
	BC2 DB 0
	BC3 DB 0
	DATA ENDS
	CODE SEGMENT PUBLIC 'CODE'
START:NOP
NTES:        MOV AL,0A0H   ;07H    ; F8H
      MOV DX,0AA6H
	OUT DX,AL
	MOV AL,0
	OUT DX,AL
	MOV AL,2H   ;0FDH            ;02H
	OUT DX,AL
      MOV DX,0AAEH
      MOV AL,0B1H
      OUT DX,AL
	MOV AL,07FH
      MOV DX,0AA2H
	OUT DX,AL
      MOV DX,0ABEH
	MOV AL,34H  ;0CBH       ;34H
	OUT DX,AL        ;0D6H,AL
	MOV CX,050H
GGS:    NOP
	LOOP GGS
      MOV AL,54H  ;0ABH      ;54H
	OUT DX,AL
	MOV AX,3000H
	MOV DS,AX
	MOV AX,0
	MOV CX,4A00H
	MOV SI,0
Z1:     MOV DS:[SI],AL
	INC SI
	LOOP Z1
	MOV DAOA,55H
	MOV AX,03E8H
	MOV TOA3E8,AX
	MOV PIN,0
	MOV AX,4000H
	MOV ES,AX
	MOV CX,80H
AGL1:   MOV SI,00H
	MOV AX,00H
AGL:    MOV ES:[SI],AX
	ADD SI,02H
      NOP
	CMP SI,010H
	JNZ AGL
	MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	LOOP AGL1
	MOV AX,3600H
	MOV ES,AX
	MOV AX,00H
	MOV CX,5200D   ;2688D
	MOV SI,00H
Z1Z:    MOV ES:WORD PTR[SI],AX
	ADD SI,02H
	LOOP Z1Z
      MOV AX,40A1H
      MOV ES,AX
      MOV CX,127D
Z1ZP:     MOV ES:BYTE PTR[2],01H
      MOV AX,ES
      ADD AX,0A1H
      MOV ES,AX
      LOOP Z1ZP
      MOV AL,34H
;      CALL DISPLAY
      cli
	MOV AX,00H
	MOV ES,AX
	MOV BX,1C8H
      LEA AX,PINT10
	MOV ES:WORD PTR[BX],AX
	MOV ES:WORD PTR[BX+2],CS
      LEA AX,PINT11
       MOV ES:WORD PTR[BX+4],AX
       MOV ES:WORD PTR[BX+6],CS
       LEA AX,PINT12
       MOV ES:WORD PTR[BX+8],AX
       MOV ES:WORD PTR[BX+10],CS
      LEA AX,PINT15
      MOV ES:WORD PTR[BX+20],AX
      MOV ES:WORD PTR[BX+22],CS
      MOV AL,63H ;0F7H
      OUT 0A1H,AL
      MOV AL,0F9H ;0E5H
      OUT 021H,AL
      MOV AL,09H  ;0F6H         ;9H
	MOV DX,0AAEH
	OUT DX,AL
	MOV AL,32H
;       CALL DISPLAY
	STI
	HLT   
	NOP
	NOP
	NOP
	MOV AL,33H
;       CALL DISPLAY
	JMP PCOMN  
PINT10:  CLI
	PUSHF
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
	PUSH DI
	PUSH BP
	PUSH ES
	PUSH DS
	MOV AL,0FFH
	OUT 0A1H,AL
	MOV AL,0FDH
	OUT 21H,AL
;       MOV AL,41H
;       CALL DISPLAY
	MOV AX,3000H
	MOV DS,AX  
	MOV AL,0CH
	MOV DX,260H
	OUT DX,AL
BBT2:   MOV AL,3H  ;0FCH           ;  3H
	MOV DX,0AA6H
	OUT DX,AL
	CMP DISCM,85H
	JNZ p1q
	INC BIN
;       CMP BIN,4
;       JC BIJK
;       MOV AL,0FDH
;       OUT 21H,AL
;       INT 3
;       JMP T090
BIJK: MOV AX,4000H
	MOV ES,AX
	MOV AX,0D000H
	MOV DS,AX
	CMP DS:BYTE PTR[0],0
	JNZ JK9
	CMP DS:WORD PTR[8],0
	JNZ JK99
	JMP T090
JK9:    MOV ES:BYTE PTR[0],64H
JK99:   MOV AX,DS:WORD PTR[8]
	MOV CX,DS:WORD PTR[0AH]
	OR AL,CL  
;       CMP AL,40H
;       JNC GG1
;       CMP AL,11H
;       JZ GG1
;       MOV AL,22H
GG1:    MOV ES:[2],AL
	JMP T090
p1q:    INC APE
	  CMP APE,03H        ;03H 
	  JNC PT1
      MOV QQPD,00H           ;?
	MOV DX,260H
	MOV AL,0CH
	OUT DX,AL
;       MOV CHNR,00H           ;?
	MOV AX,0D000H
	MOV ES,AX
PTL2:   CMP ES:WORD PTR[0+10H],00H
	JNZ PTL1
	MOV AX,ES
	ADD AX,40H
	CMP AX,0E000H
	JNZ P1T
	SUB AX,1000H
	MOV AL,0DH                       ;0DH
	MOV DX,260H
	OUT DX,AL
P1T:    MOV ES,AX
	CMP ES:WORD PTR[0+10H],00H
	JNZ PTL1
	MOV CHNRT,4000H
	JMP TRN0Z
PTL1:   CMP CHNR,128D
	JC PL1A
      JMP TRN0Z
PL1A:      INC CHNR
	CMP CHNR,64D
	JZ PTL2A
	JMP PTL2B
PTL2A: PUSH DX
	MOV DX,260H
	MOV AL,0DH                            ;0DH
	OUT DX,AL
	POP DX
PTL2B:  MOV AX,ES
	ADD AX,40H
	CMP AX,0E000H
	JNZ P2T
	SUB AX,1000H
P2T:    MOV ES,AX
      CMP CHNR,129D   ;
	JC PTL2       ;
	JMP TRN0Z    ; from head to foot read numb
PT1:      CMP APE,0FFH
	  JNZ PT3
	  MOV APE,03H
PT3:  MOV CL,CHNR
	CMP CHNR,128D
	JC PT3T
	JMP PT33
PT3T:   NOP
BBT2Q:      MOV AX,040H
	MUL CL
	ADD AX,0D000H
	CALL PAGER
PTM2:   CMP ES:WORD PTR[0+10H],00H
	JNZ PTM1
	MOV AX,ES
	ADD AX,40H
	CALL PAGER
	CMP ES:WORD PTR[0+10H],00H
	JNZ PTM1
	JMP PT33
PTM1: CMP CHNR,128D
	JC PTM1M
	JMP PT33
PTM1M:  INC CHNR
	MOV MEN,2
	MOV AX,ES
	ADD AX,40H
	CALL PAGER
	CMP CHNR,129D
	JC PTM2
PT33:   MOV CL,CHNR
	MOV AX,0A1H
	MUL CL
	ADD AX,4000H
	MOV CHNRT,AX
	MOV QQPD,0
      MOV AX,0D000H
      MOV DS,AX
	MOV DX,260H
	MOV AL,0CH
	OUT DX,AL 
      MOV AX,4000H
	MOV ES,AX
TRN0:   MOV SI,00H
	MOV DI,00H
	MOV AX,DS:WORD PTR[0]               ;
	CMP AL,02H                          ;预分该通道脉冲数=0?
	JNC TRN00
	JMP TRN1
;PSBT:   CMP ES:BYTE PTR[8],00H              ;等,复分该通道已分选标志置01?
;	JNZ TN1
;	CMP ES:BYTE PTR[0],0
;	JNZ LLU                              ;已置,转TN1
 ;     JMP TRN1                            ;转下一通道,继续取数
;TN1:    
;      CMP ES:BYTE PTR[0DH],01H            ;[0D]位置消失标志01了吗?
;      JZ L1LL
;LLU: ;  CMP ES:BYTE PTR[0EH],0;   INC ES:BYTE PTR[0EH]
;	JNZ TLTL
;	MOV ES:BYTE PTR[0EH],1
;TLTL:	JMP TRN1
;L1LL: MOV ES:BYTE PTR[0EH],0
;	JMP TRN1
TRN00:;MOV ES:BYTE PTR[0EH],00H
	MOV AX,ES:[SI]
;       CMP ES:BYTE PTR[0DH],1
;       JNZ TR18
;       CMP AX,0
;       JNZ TR18
;       PUSH DS
;       MOV AX,3000H
;       MOV DS,AX
;       MOV AX,ES
;       MOV CNDC,AX
;       POP DS
TR18:   CMP AL,0FFH                         ;脉冲数满FF?
	JNZ TRN  
TTR1: NOP
;     MOV ES:BYTE PTR [2],55H             ;
;       MOV DS:WORD PTR[4],5555H            ;否则,置满数不切换标志
	JMP TNR1                            ;转TNR1,方位跟踪取数
TRN:    CMP AL,00H
	JNZ TRN11
	  CMP ES:BYTE PTR[2],1
	  JNZ JXS
	  MOV ES:BYTE PTR[2],0
	  JMP TRN1
JXS:        MOV BX,DS:WORD PTR[DI]
	CMP BX,03H
	JC TRNZ
	CMP BX,65H
	JC  TRN1Z
TRNZ:   JMP TRN1
TRN1Z:  MOV ES:[SI],BL
;	CMP ES:BYTE PTR[0EH],2
;	JC NBVM
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
NBVM:	MOV AX,DS:WORD PTR[DI+2]
	MOV ES:[SI+1],AL
	MOV ES:BYTE PTR[SI+7],01H
	MOV SI,10H
	MOV DI,10H
	MOV CX,BX
	REPNZ MOVSW
	MOV SI,0D8H
	MOV DI,210H
	MOV CX,BX
	REPNZ MOVSW
	MOV SI,1A0H
	MOV DI,410H
	MOV CX,BX
	REPNZ MOVSW
	MOV SI,268H
	MOV DI,610H
	MOV CX,BX
	REPNZ MOVSW
	MOV SI,330H
	MOV DI,810H
	MOV CX,BX
	REPNZ MOVSW
	JMP TRN1
TRN11:  MOV AL,ES:[SI]
	MOV AH,00H
	MOV BL,02H
	MUL BL
	MOV BP,AX
	ADD AX,10H
	MOV DI,AX
	MOV AX,DS:WORD PTR[SI+2]
	MOV AH,00H
	  MOV ES:[SI+1],AL
	MOV BX,DS:WORD PTR[SI]
	CMP BX,00H
	JZ TRNZP
	CMP BX,65H
	  JC  TRN1P
TRNZP:  JMP TRN1
TRN1P:  MOV AL,ES:[SI]
	ADD AL,BL
	JNC TRN12
	SUB BL,AL
	DEC BL
	MOV AL,0FFH
;       MOV ES:BYTE PTR[2],55H
;       MOV DS:WORD PTR[4],5555H
TRN12:  MOV ES:[SI],AL
	  MOV CL,BL
	MOV CH,00H
	MOV SI,10H
	REPNZ MOVSW
	  MOV CL,BL
	MOV SI,0D8H
	MOV DI,BP
	ADD DI,210H
	REPNZ MOVSW
	MOV CL,BL
	MOV SI,1A0H
	MOV DI,BP
	ADD DI,410H
	REPNZ MOVSW
	MOV CL,BL
	MOV SI,268H
	MOV DI,BP
	ADD DI,610H
	REPNZ MOVSW
	MOV CL,BL
	MOV SI,330H
	MOV DI,BP
	ADD DI,810H
	REPNZ MOVSW
	JMP TRN1
TNR1:   MOV AL,ES:BYTE PTR[3]
	  CMP AL,01H
	  JZ TNR2
	  JMP TRN1
TNR2:   MOV AL,ES:BYTE PTR[4]
	  AND AL,10H
	  CMP AL,10H
	  JZ TNR2B
	  JMP TRN1  
TNR2B:  PUSH DS
	  MOV AX,3000H
	  MOV DS,AX
	  CMP MEN,0
	  POP DS
	  JNZ PNT21
;       MOV DS:WORD PTR[6],05555H
	MOV SI,546H
	MOV ES:WORD PTR[SI],00H
	  MOV ES:WORD PTR[SI-2],00H
	  MOV CX,DS:WORD PTR[0]
	  CMP CX,03H
	  JC PNT21
	  CMP CX,065H
	  JC PNT2
PNT21:    JMP TRN1
PNT2:     MOV SI,10H
	  MOV DI,148H
	  REPNZ MOVSW
	 MOV CX,DS:WORD PTR[0]
	  MOV CH,00H
	  MOV SI,0D8H
	  MOV DI,348H
	  REPNZ MOVSW 
	   MOV CX,DS:WORD PTR[0]
	  MOV CH,00H
	  MOV SI,1A0H
	  MOV DI,546H
	  MOV ES:WORD PTR[DI],CX
	  MOV ES:WORD PTR[DI-2],00AAH
	  ADD DI,02H
	  REPNZ MOVSW
	    MOV CX,DS:WORD PTR[0]
	  MOV CH,00H
	  MOV SI,268H
	  MOV DI,748H
	  REPNZ MOVSW   
TRN1:     MOV AX,DS
	  ADD AX,40H
	  CALL PAGED
	    PUSH DS
	    MOV AX,3000H
	    MOV DS,AX
	  MOV AX,ES
	  ADD AX,0A1H
	  MOV ES,AX
	  CMP AX,CHNRT
	    JZ TRN0Z1 
	    CMP CHNRT,4000H
	JZ TRN0Z1
	 POP DS
	JMP TRN0
TRN0Z1:  POP DS  
TRN0Z:  PUSH DS
	  MOV AX,3000H
	  MOV DS,AX
	  CMP MEN,0
	  JZ TRN0ZZ
	  DEC MEN
TRN0ZZ: POP DS
;         MOV AX,3000H
;         MOV DS,AX
;         CMP BITT,0AAH
;         JZ TO90
T090:        
	 MOV AL,02H  ;FDH       ;02H
	 MOV DX,0AA6H
	OUT DX,AL
TO90: NOP
;     MOV AL,42H
;       CALL DISPLAY
	MOV AL,20H
	OUT 0A0H,AL
	MOV AL,63H
	OUT 0A1H,AL
	mov al,20h
	out 20h,al
	mov al,0F9H
	out 21h,al
	sti
	POP DS
	POP ES
	POP BP
	POP DI
	POP SI
	POP DX
	POP CX
	POP BX
	POP AX
	POPF
	IRET
PINT12:
	CLI
	PUSHF
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
	PUSH DI
	PUSH BP
	PUSH ES
	PUSH DS
	MOV AL,0FFH
	OUT 0A1H,AL
	MOV AL,0FDH
	OUT 21H,AL
;         MOV AL,43H
;       CALL DISPLAY
;TES2:   MOV DX,0AA4H 
;        IN AL,DX
;        TEST AL,020H          ;20H
;        JZ IN1
	  MOV SI,00H
	CMP RUSLT[0],0C7H
	  JNZ TES22
	  MOV CX,BP
	JMP TES3
TES22:  MOV CX,2AH
	MOV AL,BYTE PTR RUSLT[0]
	AND AL,0F0H
	CMP AL,40H
	JNZ OU1
	MOV AX,WORD PTR RUSLT[0]
      MOV DX,0AA0H
	OUT DX,AL
PT1A: MOV DX,0AA4H
	IN AL,DX
	TEST AL,08H                     ;08H
	JZ PT1A
	MOV AL,AH
	MOV DX,0AA0H
	OUT DX,AL
	JMP OU2
TES3:   MOV DX,0AA4H 
	IN AL,DX
	TEST AL,08H                  ;08H
	JZ TES3
OU1:    NOP   
	MOV AL,BYTE PTR RUSLT[SI]
	  MOV DX,0AA0H
	OUT DX,AL
	INC SI
	LOOP TES3
OU2:    MOV AL,0CH  ;0F3H                       ;0CH
	  MOV DX,0AA6H
	OUT DX,AL
;       MOV AL,44H
;       CALL DISPLAY
	MOV AL,20H
	OUT 0A0H,AL
      MOV AL,63H
      OUT 0A1H,AL
	MOV AL,20H
	OUT 20H,AL   
	  POP DS
	POP ES
	POP BP
	POP DI
	POP SI
	POP DX
	POP CX
	POP BX
      MOV AL,0F9H      ;0E5H
      OUT 021H,AL
	POP AX
	POPF
	  STI
	IRET
PINT11:        PUSHF
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
	PUSH DI
	PUSH BP
	PUSH ES
	PUSH DS
      CLI
	MOV AL,0FFH
	OUT 0A1H,AL
	MOV AL,0FDH
	OUT 21H,AL
      MOV AL,08H
	  MOV DX,0AAEH
	  OUT DX,AL
	  MOV AX,3000H
	  MOV DS,AX
	  INC DTT
	  CMP DTT,4
	  JC IN1
	  MOV DTT,1
IN1:    MOV DX,0AA8H
        IN AL,DX
	  CMP AL,7EH          ;SOME TN CHANGE NUMBER TO DOA
	  JNZ INZI
	  MOV CX,4
	  MOV DI,0
	  MOV DARRY[DI],AL
	  INC DI 
PT1Q1:	  MOV DX,0AACH
PT1Q:	  IN AL,DX
	  TEST AL,20H   ;08H
	  JZ PT1Q
	  MOV DX,0AA8H
	  IN AL,DX
	  MOV DARRY[DI],AL
	  INC DI
	  LOOP PT1Q1
	  MOV DI,0
	  MOV AX,3600H
	  MOV ES,AX
	  MOV AL,DARRY[1]
INQR:	  CMP ES:BYTE PTR[DI],0
	  JNZ INQW
	  JMP SPOP
INQW:	  CMP ES:BYTE PTR[DI+40],AL
	  JNZ INQE
	  MOV AX,WORD PTR DARRY[3]
	  ADD AX,DTT
	  MOV ES:WORD PTR[DI+4],AX
	  MOV ES:BYTE PTR[DI+43],55H   ;[DI+43]SET 55 HAVE NEW DOA
	  JMP SPOP
INQE:	  ADD DI,34H    ;2CH
	  CMP DI,33CCH
	  JC INQR
	  JMP SPOP 	
INZI:	  CMP AL,94H  ;66H
	  JNZ INZ1
	  CMP SBTI,94H  ;66H
	  JNZ INZ2
	  MOV SBTI,00
	  JMP SPOP
INZ2:     MOV SBTI,AL
	  JMP SPOP
INZ1:     CMP AL,68H;55H
	  JZ DT1
	  CMP AL,64H  ;
	  JNZ DT2
	  MOV DAOA,0
;	  MOV AL,34H
;	  MOV DX,0ABEH
;	  OUT DX,AL    ;0D6H
;	  MOV AL,54H
;	  OUT DX,AL    ;0D6H
        JMP SPOP 
DT1:    NOP  
;        MOV AL,0FFH 
;	  MOV DX,0AB8H
;	  OUT DX,AL   ;0D0H
;	  OUT DX,AL
;	  MOV AL,5DH
;	MOV DX,0ABAH 
;     OUT DX,AL   ;0D2H
	MOV DAOA,55H
	  JMP SPOP
DT2:    CMP AL,55H
	  JNZ INZ22
	  MOV AL,1
	  MOV DX,0AA6H
	  OUT DX,AL
	  JMP SPOP
INZ22:  CMP AL,0AAH
	 JNZ SPI
	MOV AL,0
	MOV DX,0AA6H
	OUT DX,AL
      JMP SPOP
SPI:  NOP
SPII:	   MOV DISCM,AL
SPOP:   MOV AL,09H
	  MOV DX,0AAEH
	  OUT DX,AL
 	MOV AL,20H
	  OUT 0A0H,AL
	MOV AL,063H; 077H
	  OUT 0A1H,AL
	MOV AL,20H
	  OUT 20H,AL  
;      MOV AL,44H
;       CALL DISPLAY
	POP DS
	POP     ES
	POP     BP
	POP     DI
	POP     SI
	POP     DX
	POP     CX
	POP     BX
	  MOV AL,0F9H  ;0E5H
	  OUT 021H,AL
	POP     AX
	POPF
	  STI
	IRET 
PINT15:        PUSHF
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
	PUSH DI
	PUSH BP
	PUSH ES
	PUSH DS
	  CLI
	  MOV AL,0FFH
	  OUT 0A1H,AL
	  MOV AL,0FDH
	  OUT 21H,AL
        MOV AL,48H
	  CALL DISPLAY
	MOV AX,3000H
	MOV DS,AX
;	INC TI
;	CMP TI,12D
;	JC KJHG
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
KJHG:	CMP DISCM,85H
	JZ HHJ
	CMP DAOA,55H
	JZ IUT9
	MOV DISCM,0
	JMP IUT8
IUT9:	MOV DISCM,66H
IUT8:	MOV AX,4000H
	MOV ES,AX
PTN1:;	CMP ES:BYTE PTR[0EH],0
;	JZ PTN2
;	MOV DX,0AACH
;	IN AL,DX
;	CMP AL,04H
;	JZ PTN2N
	INC ES:BYTE PTR[0EH]
;	JMP PTN2
;PTN2N:MOV ES:BYTE PTR[0EH],0
PTN2:	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHNRT
	JC PTN1
	JMP TT1I   ;TT1      
HHJ:       INC TI
	     JMP TT1
TT1I: NOP
TT1: 
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	MOV DI,0
TYQ3:	CMP ES:WORD PTR[DI],0
	JZ TYQ2
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ TYQ1
      MOV DX,0AACH
	IN AL,DX
	CMP AL,04H
	JZ TYD
	INC ES:BYTE PTR[DI+41]
	JMP TYQ1
TYD:	MOV ES:BYTE PTR[DI+41],0
TYQ1:	ADD DI,34H     ;2CH
	CMP DI,33CCH   ;2BD4H
	JC TYQ3   
TYQ2:	POP ES
       MOV AL,20H
       OUT 0A0H,AL
       MOV AL,063H
	 OUT 0A1H,AL
	 MOV AL,20H
	 OUT 20H,AL  
       MOV AL,49H
	 CALL DISPLAY
	 POP DS
	 POP     ES
	 POP     BP
	 POP     DI
	 POP     SI
	 POP     DX
	 POP     CX
	 POP     BX
       MOV AL,0F9H  ;0E5H
       OUT 021H,AL
	 POP     AX
	 POPF
       STI
	 IRET              
              
PCOMN:   MOV AX,4000H
	   MOV DS,AX
	   MOV DS:WORD PTR[0],0
	   MOV DS:WORD PTR[2],0
	 MOV AX,3000H
	   MOV DS,AX
;      MOV DS:DISCM,88H             ;  
	MOV AL,DS:DISCM
	CMP AL,85H
	JNZ PCOM1
      MOV AL,0FFH
      MOV DX,0AB8H
      OUT DX,AL
      OUT DX,AL
      MOV AL,5DH
      MOV DX,0ABAH
      OUT DX,AL        ;0D6H
      MOV AL,0CH
	  MOV DX,260H
	  OUT DX,AL
	  MOV AX,0D000H
	  MOV ES,AX
	  MOV ES:WORD PTR[8],5555H
	CALL DELET
BTT2: MOV AX,3000H
	MOV DS,AX
	CMP TI,1
	JNC BTT1
;       HLT
	CMP BIN,5
	JC BTT2
BTT1:   NOP
	CALL BITEP
	  MOV DS:DISCM,00H
	  MOV AL,02H
	  MOV DX,0AA6H
	  OUT DX,AL
       MOV DX,0ABEH
       MOV AL,034H
       OUT DX,AL
       MOV AL,54H
       OUT DX,AL
	MOV TI,0
	MOV BIN,0
	JMP PCOMN
PCOM1:  CMP AL,88H
	JNZ PCOMN
      MOV AL,0FFH
      MOV DX,0AB8H
      OUT DX,AL
      OUT DX,AL
      MOV AL,5DH
      MOV DX,0ABAH
      OUT DX,AL        ;0D6H
	MOV DS:DISCM,00H
	  MOV AL,0CH
	  MOV DX,260H
	  OUT DX,AL
	  MOV AX,0D000H
	  MOV ES,AX
	  MOV ES:WORD PTR[8],00AAH
	HLT
	MOV DOAC,00H
EBE1:           CMP APE,03H
	JNC BGN
	JMP EBE1
BGN:
;      MOV AL,45H    
 ;      CALL DISPLAY
	CMP CHNRT,4000H
	JZ BGN
	JMP BEGIN1
BEGIN:
;      MOV AL,47H
;       CALL DISPLAY
	  PUSH DS
	MOV AX,3000H
	MOV DS,AX
	MOV AX,ACHNR
	CMP AX,CHNRT
	POP DS
	JNC YT1
	MOV ES,AX
	ADD AX,0A1H
	MOV ACHNR,AX
	JMP BEGN1 
YT1:  NOP
YTR:  CALL DISTROY
	CALL DISNUM
	CALL CLEANSAIL
      CALL RCOM
YT2:  NOP
NP9:      CMP DS:DISCM,66H ;94H
      JZ BEGNB
      JMP BEGN
BEGNB:    
      MOV DS:DISCM,00H
	CALL THRDOC
BEGN:   MOV AX,ACHNR
	CMP AX,CHNRT
	JNC BEGIN1  
	MOV ES,AX
	ADD AX,0A1H
	MOV ACHNR,AX
	JMP BEGN1
BEGIN1:MOV AX,4000H
	MOV ES,AX
BEGN1:  MOV AX,3000H
	MOV DS,AX
BE2:      CMP NUMB,0FFH
	JNZ BEG0
	MOV NUMB,01H
BEG0:   MOV SI,00H
	MOV DI,00H
	MOV AX,ES
	CMP AX,CHNRT
	JZ BGB0
	MOV AL,ES:[SI+7]
	CMP AL,01H
	JNZ BEG2
;       CMP TI,2
;       JC TTT1
;       MOV AL,0FDH
;       OUT 21H,AL
;       INT 3
TTT1:   JMP BEG1
BEG2:   CMP MEC,0
	  JZ BEGA
	  MOV AX,ACHNR
	  CMP AX,CHNRT
	  JNC BEGA
	  MOV ES,AX
	  ADD AX,0A1H
	  MOV ACHNR,AX
	  JMP BEGN1
BEGA:   MOV AX,ES
	  ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHNRT
	JC BEG0
BGB0:   MOV CHT,AX
	  MOV ACHNR,AX
	  PUSH AX
;	  MOV AL,53H
;         CALL DISPLAY
	  POP AX
YT4:      NOP
		CALL AGACS
;       CALL TE
YT5:      NOP
;	MOV AL,54H
;       CALL DISPLAY
	PUSH DS
	MOV AX,3000H
	MOV DS,AX
	MOV AX,ACHNR
	CMP AX,CHNRT
	POP DS
	JNC XPJ2
	MOV ES,AX
	ADD AX,0A1H
	MOV ACHNR,AX
	JMP BEGN1
XPJ2: CALL SCPEA
YT6:      NOP
      CALL CLEANP
;       CALL TE
GEB1:	CALL DOAHL
;       CALL TE
	  PUSH DS
	  MOV AX,3000H
	  MOV DS,AX
	  MOV MEC,1
	  POP DS
YT8:      NOP
	  JMP BEGIN
BEG1:   NOP
YT9: ; CALL TE      
	MOV AL,ES:[SI+3]
	CMP AL,01H
	JNZ BEGG1
	JMP BEG2
BEGG1:CMP ES:BYTE PTR[6],66H
	JNZ BEGGI
	MOV ES:BYTE PTR[3],1
BGNQ:	JMP BEG2
BEGGI:      MOV AL,ES:[SI]
	CMP AL,64H                ; 32D
	JC BGNQ       ;BL1
;	MOV AX,WORD PTR RUSLT[2]
;	MOV AX,ES:WORD PTR[SI+10H]
;	AND AX,0FFFH
;	SUB AX,1650D
;	JNC GGGT
;	NEG AX
;GGGT: CMP AX,3
;	JNC G1T
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3 
G1T:	CMP AL,64H
	JC BEEG2
	MOV AL,64H
	JMP BEEG2
BL1:        CMP AL,20H
	JNC BEEG2
	JMP BEG2
BEEG2:  MOV DS:ANPUN,AL
	MOV DS:ANPNC,AL
	MOV CL,AL
	MOV CH,00H
	MOV SI,10H
	MOV AX,ES:WORD PTR[212H]
	AND AX,0FFFH
	CMP AX,04H
	JNC BBG1
	CMP ES:BYTE PTR[8],0
	JZ POIU
;       CMP ES:BYTE PTR[0DH],1
;       JZ POIU
;       MOV AL,ES:BYTE PTR[4]
;       OR AL,80H
;       MOV ES:BYTE PTR[4],AL
POIU:   MOV ES:WORD PTR[0H],0
	MOV ES:WORD PTR[2],0
	MOV ES:BYTE PTR[4],0
	MOV ES:WORD PTR[6],0
	MOV ES:WORD PTR[0CH],0
	JMP BEG2
BBG1:   PUSH CX
BEG3:   MOV AX,ES:[SI]
	MOV DS:ANSCD[DI],AX
	  MOV DS:FANTF[DI],AX
	ADD SI,02H
	ADD DI,02H
	LOOP BEG3
	POP CX
	PUSH CX
	MOV SI,210H
	MOV DI,200D
BEG4:   MOV AX,ES:[SI]
	MOV DS:ANSCD[DI],AX
	ADD SI,02H
	ADD DI,02H
	LOOP BEG4
	POP CX
	PUSH CX
	MOV SI,410H
	MOV DI,400D
BEG5:   MOV AX,ES:[SI]
	MOV DS:ANSCD[DI],AX
	  MOV DS:FANTP[DI-400D],AX
	ADD SI,02H
	ADD DI,02H
	LOOP BEG5
	POP CX
	PUSH CX
	MOV SI,610H
	MOV DI,600D
BEG6:   MOV AX,ES:[SI]
	MOV DS:ANSCD[DI],AX
	ADD SI,02H
	ADD DI,02H
	LOOP BEG6
	POP CX
	PUSH CX
	MOV DI,800D
	MOV SI,810H
BEG7:   MOV AX,ES:[SI]
	MOV DS:ANSCD[DI],AX
	ADD SI,02H
	ADD DI,02H
	LOOP BEG7
	POP CX
	MOV SI,00H
	MOV DI,00H
BEG8:   MOV DS:IWTAB[SI],01H
	INC SI
	LOOP BEG8
FRAN0:  MOV FANTC,00H
	MOV BX,00H
	MOV BP,00H
	MOV SI,00H
	MOV AX,00H
	MOV CX,20H
ZL2:    MOV TOAIT[SI],AL
	INC SI
	LOOP ZL2
	MOV SI,0
	MOV CX,64H
ZL3:    MOV TOAL[SI],AX
	ADD SI,02H
	LOOP ZL3
	MOV SI,00H
	MOV CX,64H
ZL4:    MOV NL[SI],AL
	INC SI
	LOOP ZL4
	MOV CX,1900H
	MOV SI,00H
ZL5:    MOV PADDT[SI],AL
	INC SI
	LOOP ZL5
	MOV SI,0
	MOV CX,64H
ZL6:    MOV FANTN[SI],AL
	INC SI
	LOOP ZL6
	MOV SI,00H
	MOV CX,65H
ZL7:    MOV FANTA[SI],AX
	MOV FANTF[SI],AX
	MOV FANTP[SI],AX
	MOV FANTW[SI],AX
	MOV FATON[SI],AX
	ADD SI,02
	LOOP ZL7
	MOV CX,64H
	MOV SI,00H
ZL8:    MOV FATON[SI],AX
	ADD SI,02H
	LOOP ZL8
	MOV CX,0C0H
	MOV SI,00H
ZL9:    MOV CFR[SI],AX
	ADD SI,02H
	LOOP ZL9
	MOV CX,0
FF22:   MOV SI,0
FF2:    MOV AX,DS:ANSCD[SI]
	AND AX,8000H
	CMP AX,8000H
      JZ FF1                ;JMP FF1
CONT2:  ADD SI,02H
	MOV CX,SI
	SHR CX,1
	CMP CL,ANPNC
	JB FF2
	JMP GA3
FF1:    SHR SI,01H
	CMP DS:IWTAB[SI],01H
	JZ CONT1
	SHL SI,1
	JMP CONT2
CONT1:  SHL SI,1
	PUSH SI
	MOV AX,ES:[SI+210H]
	AND AX,7FFFH
	MOV ES:[SI+210H],AX
	MOV AX,DS:ANSCD[SI]
	AND AX,1FFFH
	PUSH AX
	MOV DI,0
FF4:    MOV DX,DS:ANSCD[DI]
	AND DX,1FFFH
	SUB AX,DX
	JNC FRAN
	NEG AX
FRAN:
      CMP AX,05   ;3H     ;08H
	JNC FF3
FRAN2:  INC FANTC
	MOV AX,ES:[DI+210H]
	AND AX,0FFFH
	MOV ES:[DI+210H],AX
	MOV CX,DI
	SHR CX,1
	MOV FANTN[BX],CL
	INC BX
	PUSH DI
	MOV DI,CX
	MOV DS:IWTAB[DI],CH
	POP DI
	MOV AX,DS:ANSCD[DI]
	MOV DS:FANTF[BP],AX
	MOV AX,DS:ANSCD[DI+200D]
	MOV DS:FANTW[BP],AX
	MOV AX,DS:ANSCD[DI+400D]
	MOV DS:FANTP[BP],AX
	MOV AX,DS:ANSCD[DI+600D]
	MOV DS:FANTA[BP],AX
	MOV AX,DS:ANSCD[DI+800D]
	MOV DS:FATON[BP],AX
	ADD BP,02H
FF3:    ADD DI,02H
	MOV CX,DI
	SHR CX,1
	CMP CL,ANPNC
	JZ FRAN3
	POP AX
	PUSH AX
	JMP FF4
FRAN3:  POP AX
	POP SI
	MOV AL,ANPUN
	SUB AL,FANTC
	MOV ANPUN,AL
	CMP FANTC,32D   ;05H
	JG FRAN4
	JMP FRAN7
	MOV AL,SANCC
	MOV AH,00
	MOV CL,02H
	MUL CL
	MOV SI,AX
	MOV DI,00
FRAN5:  MOV AL,FANTN[DI]
	MOV AH,00
	MUL CL
	MOV BP,AX
	MOV AX,ANSCD[BP]
	MOV SANCF[SI],AX
	MOV AX,ANSCD[BP+600D]
	MOV SANCT[SI],AX
	MOV AX,ANSCD[BP+800D]
	MOV SACTN[SI],AX
	MOV AX,ANSCD[BP+200D]
	MOV SANCP[SI],AX
	MOV AX,ANSCD[BP+400D]
	MOV SANCA[SI],AX
	INC SANCC
	DEC FANTC
	CMP FANTC,00
	JZ FRAN7
	ADD SI,02H
	INC DI
	JMP FRAN5
FRAN7:  ADD SI,02H
	PUSH SI
	CALL READP
	POP SI
	MOV FANTC,00H
	MOV BX,0
	MOV BP,0
	MOV CX,0
	JMP FF22
FRAN8:  JMP BEG2
FRAN4:
	MOV FIXSEC,0
	PUSH ES
	MOV AX,ES
	MOV ANCHA,AX
      MOV SI,0
	MOV CH,0
	MOV CL,FANTC    ;100D     ;20H
UPS:  MOV DS:TOAIT[SI],0AAH
	INC SI
	LOOP UPS
FRAN42:
	INC FIXSEC
	MOV SI,0
	MOV DI,0
	MOV CX,101D
DDAQ: MOV DOAPA[DI],0
	ADD DI,2
	LOOP DDAQ
	MOV TXN[0],0
	MOV TXN[2],0
	MOV TXN[4],0
	MOV EPA,0
	MOV PASL[0],00
	MOV PASL[2],00
	MOV PASL[4],00
	MOV PASR[0],0
	MOV PASR[2],0
	MOV PASR[4],0
	MOV TOA05,3
	MOV II,0
	MOV SI,0
	MOV AX,FANTA[SI+2]
	SUB AX,FANTA[SI]
	MOV TEMP,AX
	MOV AX,FANTA[SI+4]
	SUB AX,FANTA[SI+2]
	CMP AX,TEMP
	JNC NJJ
	XCHG AX,TEMP
NJJ:	MOV DX,0
	CMP TEMP,0
	JZ DDA
NJF:	DIV TEMP
	CMP DX,3
	JNC NJJ1
NJJ2:	MOV AX,FANTA[SI]
	MOV DTOA,AX
	MOV AX,FATON[SI]
	MOV DTON,AX
	MOV SI,4
	MOV AX,FANTA[SI+2]
	SUB AX,FANTA[SI]
	SUB AX,TEMP
	JNC NJGS
	NEG AX
NJGS:	CMP AX,TOA05
	JNC DDA          ;JC DDA
	MOV AX,FANTA[SI+4]
	SUB AX,FANTA[SI+2]
	SUB AX,TEMP
	JNC NJGS1
	NEG AX
NJGS1:CMP AX,TOA05
	JNC DDA
	JMP NJJ3 
NJJ1:	SUB DX,TEMP
	JNC NJJ4
	NEG DX
NJJ4:	CMP DX,3
	JC NJJ2
DDA:  
	MOV SI,0
	MOV DI,0
	MOV AH,0
	MOV AL,II
	MOV BP,AX
DDA1Q:MOV FISCOU,SI
      MOV CWI,0
	MOV AX,FANTA[SI+BP+2]
      SUB AX,FANTA[SI]
	CMP AX,20H
	JC DD1
	CMP AX,10006D
	JC DD2
	JMP DDA7Q
DD1:  MOV SI,FISCOU
	ADD SI,2
	CMP SI,8   ;16D
	JC DDA1Q
DDA7Q:ADD DI,2
	MOV SI,DI
	CMP DI,8
	JC DDA1Q
	ADD II,2
	CMP II,6
	JC DDA
	JMP DD5
DD2:    MOV TEMP,AX
;	MOV CH,0
;	MOV CL,0FH
;	MUL CX
;	CMP TOA3E8,3E8H
;	JZ DD0
;	MOV TOA3E8,1000D
;DD0:    DIV TOA3E8
;	MOV TOA05,AX
	MOV TOA05,3
	MOV AX,FANTA[DI]
	MOV DTOA,AX
	MOV AX,FATON[DI]
	MOV DTON,AX
DDA2Q:MOV BX,SI
DDA2QQ:ADD SI,2
	CMP SI,16D
	JNC DDA7Q
	PUSH SI
	SUB SI,BX
	CMP SI,8
	POP SI
	JNC DDA7Q
 	MOV AX,FANTA[SI]
	SUB AX,FANTA[BX]
	CMP AX,20H
	JC DDA2QQ
;	CMP AX,10006D
;	JNC DDA1Q         ;?
	SUB AX,TEMP
	JNC DDA4Q
	NEG AX
DDA4Q:CMP AX,TOA05
	JC DDA5Q
;	MOV AX,FANTF[0]
;	AND AX,0FFFH
;	CMP AX,7A0H
;	JC DACX  
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
DACX:	JMP DDA2QQ
DDA5Q:INC CWI
	CMP CWI,3
	JC DDA2Q
NJJ3:	MOV CWI,0
	MOV SI,0
	MOV DI,0
	JMP DD8IU
D9:
   	MOV AX,FANTA[SI]
	MOV DTOA,AX
	MOV AX,FATON[SI]
	MOV DTON,AX
	SHR SI,1
	MOV TOAIT[SI],01H
	SHL SI,1
	MOV BX,FANTF[SI]
	TEST BX,8000H
	JZ DD8IU
	MOV BX,FANTP[SI]
	CMP BX,0FFFFH
	JZ DD8IU
	MOV AX,BX
	AND AX,0FFFH
	CMP AX,0
	JZ DD8IU
	MOV AX,BX
	AND AX,01FF0H
	CMP AX,0FF0H
	JZ DD8IU
GGGFC:	MOV DOAPA[DI],BX
	ADD DI,2
DD8IU:
;	CMP TEMP,100H
;;	JNC FFFG
;;	MOV AL,0FDH
;;	OUT 21H,AL
;;	INT 3
FFFG:	MOV AX,FANTA[SI+2]
	CMP AX,0
	JNZ D91W
	CMP FANTF[SI+2],0
	JNZ D91W
	JMP D911
D91W:	SUB AX,FANTA[SI]
	MOV BX,AX
D92:  SUB AX,TEMP
	JNC D93
	NEG AX
D93:  CMP AX,TOA05
	JNC D94
	INC CWI
	MOV TEMP,BX
      ADD SI,2
	CMP SI,200D
	JC D9
	JMP D911
D94:; 	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
	MOV BX,DTOA
D94I3:MOV AX,FANTA[SI+2]
	MOV DX,0
	SUB AX,BX
	CMP TEMP,0
	JZ D8UUG
	DIV TEMP
	CMP DX,TOA05   ;AX
	JNC D94I
	ADD SI,2
	INC CWI
	JMP D9
D94I:	SUB DX,TEMP
	JNC D94I1
	NEG DX
D94I1:CMP DX,TOA05   ;AX
	JNC D94I2
	INC CWI
D8UUG:	ADD SI,2
	JMP D9
D94I2:
	MOV AX,FATON[SI+2]
	SUB AX,DTON
	CMP AX,65D
	JNC D9PQ
	JMP D94I21
D9PQ:	INC EPA       ;
	JMP D911      ;
	CMP DI,0
	JNZ D9PQ1
	JMP DD7A
D9PQ1:;CMP EPA,1
;	JNC DPJ2
	PUSH BP
	MOV BP,0
	MOV AX,DOAPA[BP]
	AND AX,0E000H
	MOV TXN[0],AX
D9PQ2:ADD BP,2
	CMP BP,DI
	JC DP9Q33
	MOV TXN[2],0FFFFH
	MOV TXN[4],0FFFFH
	JMP DP9Q3
DP9Q33:MOV AX,DOAPA[BP]
	AND AX,0E000H
	CMP AX,TXN[0]
	JZ D9PQ2
	MOV TXN[2],AX
DP9Q4:ADD BP,2
	CMP BP,DI
	JC DP9Q34
	MOV TXN[4],0FFFFH
	JMP DP9Q3
DP9Q34:MOV AX,DOAPA[BP]
	AND AX,0E000H
	CMP AX,TXN[0]
	JZ DP9Q4
	CMP AX,TXN[2]
	JZ DP9Q4
	MOV TXN[4],AX
DP9Q3:POP BP
DPJ2:	ADD SI,2
	CMP SI,200D
	JNC DPJ
	CMP FANTF[SI],0
	JZ DPJ
	MOV BX,FANTF[SI]
	TEST BX,8000H
	JZ DPJ2
	MOV AX,FANTP[SI]
	AND AX,0E000H
	CMP AX,TXN[0]
	JZ DPJ1
	CMP AX,TXN[2]
	JZ DPJ1
	CMP AX,TXN[4]
	JNZ DPJ2
DPJ1:	MOV AX,FANTA[SI]
	MOV DTOA,AX
	SHR SI,1
	MOV TOAIT[SI],01H
	SHL SI,1
	CMP EPA,3
	JNC DPJ1A 
	MOV AL,EPA
	MOV AH,0
	PUSH DI
	MOV DI,AX
	SHL DI,1
	MOV AX,DTON
	MOV PASL[DI],AX
	MOV AX,FATON[SI]
	MOV PASR[DI],AX
	MOV DTON,AX
	POP DI
	INC EPA
	JMP D94           ;D94I21
DPJ1A:MOV AX,FATON[SI]
	MOV DTON,AX
	INC EPA
	JMP D94
DPJ:  JMP D911
D94I21:ADD SI,2
	CMP SI,200D
	JNC D911
	CMP FANTF[SI+2],0
	JZ D911
	JMP D94I3
D911:
;      MOV AX,FANTA[SI]
;	SUB AX,FANTA[0]
;	JNC D94A
;	NEG AX
;D94A:   MOV DX,0
;	MOV CX,TEMP
;	CMP CX,0
;	JNZ DBN1
;	JMP DD7A
;DBN1:   DIV CX
;	MOV CX,4
;	MUL CL
;	MOV DX,0
;	MOV CL,0AH
;	DIV CL
;	MOV AH,0
	CMP CWI,15D  ;25     ;32D   ;AX
	JNC DD90
	CMP FIXSEC,2
	JC DF01
;	MOV ES:BYTE PTR[3],1
	JMP DIGA3 
DF01:	JMP DD7A
DD90:
      MOV AX,CWI
	MOV FISCOU,AX
	MOV CWI,DI
      MOV AX,TEMP
	MOV WORD PTR RUSLT[6],AX
	MOV AX,FANTF[0]
	AND AX,1FFFH
	MOV WORD PTR RUSLT[2],AX
	MOV SI,2
LPO6: MOV CX,0
	MOV DI,SI
	ADD DI,2
	MOV AX,FANTW[SI]
	AND AX,0FFFH
LPO3:   MOV BX,FANTW[DI]
	AND BX,0FFFH
	PUSH AX
	SUB AX,BX
	JNC LPO1
	NEG AX
LPO1:   CMP AX,5
	POP AX
	JNC LPO2
	INC CX
	CMP CX,5
	JNC LPO5
LPO2:   ADD DI,2
	CMP DI,40D
	JC LPO3
LPO4:   CMP CX,5
	JNC LPO5
	ADD SI,2
	CMP SI,0AH
	JC LPO6
LPO5:   MOV WORD PTR RUSLT[10],AX
	MOV SI,0
DFT2:	MOV AX,FANTP[SI]
	CMP AX,0FFF0H
      JC DFT1
	ADD SI,2
	CMP SI,10
	JC DFT2 
DFT1:	AND AX,03FH
DTP8:      MOV BX,FANTP[SI]
	CMP BX,0FFF0H
	JNC DTP9
	AND BX,3FH
	CMP AX,BX
	JNC DTP9
	XCHG AX,BX
DTP9:	ADD SI,2
	CMP SI,32D
	JC DTP8 
DD94:
	MOV RUSLT[12],AL
	MOV DI,CWI
	CALL DK1   ;DOACL  
	CMP AX,170H  ;200H
      JNC DGJ1Q
;	MOV BX,WORD PTR RUSLT[2]
;	SUB BX,1440H
;	JNC GGFDV
;	NEG BX
;GGFDV: CMP BX,10H
;	JNC DGFA
;	MOV BX,WORD PTR RUSLT[6]
;	SUB BX,666D
;	JNC SSDA
;	NEG BX
;SSDA:	CMP BX,20D
;	JNC DGFA
;	CMP AX,60
;	JC DGFA
;;      CMP AX,20D
;;	JNC DGFA
;DGA1:	MOV BX,AX
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
DGFA:	MOV WORD PTR RUSLT[4],AX
	MOV WORD PTR RUSLT[0],011BH
	MOV ES:BYTE PTR[3],01H
	CMP EPA,1
	JNC DGFA1
	MOV AL,1
	JMP DGFA2
DGFA1:	MOV AL,2
DGFA2:
	MOV RUSLT[35],AL
	MOV ES:BYTE PTR[5],AL
	CALL LPRI
	CMP CX,55H
	JNZ JHGK0
	JMP DGJ1Q
JHGK0:  MOV AL,ES:BYTE PTR[4]
	AND AL,80H
	CMP AL,80H
	JNZ DJA1Q
DD95:   CMP ES:BYTE PTR[8],0
	JZ PAD1Q
OIP:    CALL RTRAN
	CMP AX,0AAH
	JZ PAD1Q
	JMP DGJ1Q
DJA1Q:  CMP ES:BYTE PTR[0DH],01
	JNZ PAD1Q
	JMP DD95
PAD1Q:CMP ES:BYTE PTR[8],3
	JNC OIP
	CALL RTRAN   ;COMQ
	CMP AX,0AAH
	JNZ DGJ1Q
;      CALL SCPR
	CALL STRUM
	CALL OUTP
	CALL CNSN
DGJ1Q:  CALL CLEAR
	MOV AL,FANTC
	MOV AH,0
	MOV CL,7
	MUL CL
	MOV CL,10
	DIV CL
	CMP FISCOU,AX
	JC SREC
	JMP SEC3
SREC:

	CMP FIXSEC,2
	JC SEC0
	JMP SEC3
SEC0:	MOV SI,1
	MOV DI,0
SEC1:	CMP TOAIT[SI],0AAH
	JNZ SEC
	MOV TOAIT[SI],2
	SHL SI,1
	MOV AX,DS:ANSCD[SI]
	MOV DS:FANTF[DI],AX
;	MOV DS:ANSCD[DI],AX
	MOV AX,DS:ANSCD[SI+200D]
	MOV DS:FANTW[DI],AX
;	MOV DS:ANSCD[DI+200D],AX
	MOV AX,DS:ANSCD[SI+400D]
	MOV DS:FANTP[DI],AX
;	MOV DS:ANSCD[DI+400D],AX
	MOV AX,DS:ANSCD[SI+600D]
	MOV DS:FANTA[DI],AX
;	MOV DS:ANSCD[DI+600D],AX
	MOV AX,DS:ANSCD[SI+800D]
	MOV DS:FATON[DI],AX
;	MOV DS:ANSCD[DI+800D],AX
	ADD DI,02H
	CMP ANSCD[SI+2],0
	JZ SEC4
	SHR SI,1
SEC:  INC SI
	CMP SI,100D
	JC SEC1
SEC4: CMP DI,32D
	JC SEC3 
	MOV FANTF[DI],0
	MOV FANTW[DI],0
	MOV FANTP[DI],0
	MOV FANTA[DI],0
	MOV FATON[DI],0
;	MOV DS:ANSCD[DI],0
;	MOV DS:ANSCD[DI+200D],0
;	MOV DS:ANSCD[DI+400D],0
;	MOV DS:ANSCD[DI+600D],0
;	MOV DS:ANSCD[DI+800D],0
	ADD DI,2
	CMP DI,202D
	JC SEC4
	JMP FRAN42	
SEC3:	JMP DIGA3
DD5:	
	 MOV SI,0
	  MOV DI,0
DDA1:   MOV CWI,0
	MOV AX,FANTA[SI+2]
	SUB AX,FANTA[SI]
	CMP AX,20H
	JC DD11
	CMP AX,10006D
	JC DD21
DD11: 
	ADD SI,2
	CMP SI,16D     ;8
	JC DDA1
	JMP DD7A
DD21:   MOV TEMP,AX
	MOV DX,0
	MOV CX,300D      ;
	MUL CX
	CMP TOA3E8,3E8H
	JZ DD01
	MOV TOA3E8,1000D
DD01:   DIV TOA3E8
	MOV TOA05,AX
	INC CWI
DD81:   ADD SI,2
	CMP SI,200D
	JNC CMPC
	MOV AX,FANTA[SI+2]
	CMP AX,0
	JNZ DD41
	CMP FANTF[SI+2],0
	JNZ DD41
	JMP CMPC       ;DD7A
DD41:   SUB AX,FANTA[SI]
	JNC DD61
	NEG AX
DD61:   CMP AX,20H
	JC DD81
	SUB AX,TEMP
	JNC DDB1
	NEG AX
DDB1:   CMP AX,TOA05
	JNC DD81     ;DD11
	INC CWI
	CMP CWI,32
	JNC DD7
	JMP DD81     ;DD11
CMPC:	CMP CWI,32   ;8
	JNC DD7
	JMP DD7A 
DD7:
;      MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
      CALL GETDATA       ;CALL DOUAN
	MOV CWI,0
	MOV TOA05,0
	JMP DIGA3       
DD7A: 
      MOV II,01H
	MOV TOAAN,00H
	MOV CH,0
	CMP FANTC,20H
	JBE ZL1
	MOV FANTC,20H
ZL1:    MOV CL,FANTC
	MOV MM,CL
	MOV DI,00H
	MOV AL,0AAH
T01:    MOV TOAIT[DI],AL
	INC DI
	LOOP T01
;       PUSH ES
;         MOV AX,ES
;       MOV ANCHA,AX
DIGA2:  CALL DIJZD
YT10:     NOP
DIJAN: NOP
NP3:          MOV BX,00H
	MOV TOAPN,00H
	MOV AX,FANTA[62]
	MOV CX,FANTA[0]
	CMP AX,CX
	JNC SDI1
	MOV SI,02H
SDI2:   MOV AX,FANTA[SI]
	CMP AX,FANTA[0]
	JC SDI0
	ADD SI,02H
	CMP SI,62D
	JB SDI2
	MOV AX,FANTA[60]
	MOV CX,FANTA[0]
	JMP SDI1
SDI0:   MOV AX,FANTA[SI-2]
	MOV CX,FANTA[0]
SDI1:   SUB AX,CX
	MOV TOAON,AX
DIJAN0: SHL BX,1
	MOV CX,TOAL[BX]
	CMP CX,20H
	JC DIJAN2
	MOV AX,TOAON
	MOV DX,0
	CMP CX,00H
	JZ D01
	DIV CX
D01:    MOV CH,00
	MOV CL,02D
	MUL CL
	MOV CL,100D
	MOV DX,00
	  DIV CX
	SHR BX,1
	CMP NL[BX],AL
	JC DIJAN2
	CALL CWAR
	CMP CWI,4
	JGE DIJAN7
DIJAN2: INC BX
	CMP NL[BX],00
	JNZ DIJAN0
	JMP INJDP
DIJAN7: MOV AX,BX
	MOV NL[BX],00H
	INC CHRAN
	MOV CL,3EH
	MUL CL
	MOV BP,AX
	PUSH BX
	PUSH BP
DIJAN3: MOV AH,00
	MOV AL,DS:PADDT[BP]
	MOV BX,AX
	MOV AL,CHRAN
	CMP TOAIT[BX],AL
	JZ DIJAN4
	CMP TOAIT[BX],0AAH
	JNZ DIJAN4
	MOV TOAIT[BX],AL
	INC TOAPN
DIJAN4: INC BP
	MOV AX,DS:WORD PTR PADDT[BP+1]
	CMP AX,00H
	JNZ DIJAN3
	MOV DI,00H
	POP BP
	MOV AH,00H
DIJAN5: MOV AL,DS:PADDT[BP]
	MOV BX,AX
	MOV AL,FANTN[BX]
	PUSH DI
	MOV CX,DI
	CMP CX,00
	JZ DIJANG
	MOV DI,00H
DIJANC: CMP AL,SAPN[DI]
	JZ DIJANE
	INC DI
	LOOP DIJANC
DIJANG: POP DI
	MOV SAPN[DI],AL
	INC DI
DIJANF: INC BP
	MOV AL,PADDT[BP+1]
	CMP AL,00
	JNZ DIJAN5
	JMP DIJAND
DIJANE: POP DI
	JMP DIJANF
DIJAND: MOV DI,00
	MOV BX,0
DIJAN8: MOV AL,SAPN[DI+1]
	CMP AL,00
	JNZ DIJAN6
	JMP DIJANA
DIJAN6: MOV AH,00
	MOV AL,SAPN[DI]
	MOV CL,02H
	MUL CL
	MOV SI,AX
	ADD AX,600D
	MOV CADDR[BX],AX
	MOV AX,ANSCD[SI]
	MOV CFR[BX],AX
	MOV AX,ANSCD[SI+200D]
	MOV CPW[BX],AX
	MOV AX,ANSCD[SI+400D]
	MOV CPA[BX],AX
	MOV AX,ANSCD[SI+600D]
	MOV CTOA[BX],AX
	MOV AX,ANSCD[SI+800D]
	MOV CTON[BX],AX
	INC DI
	ADD BX,02H
	JMP DIJAN8
DIJANA: MOV CX,BX
	POP BX
	PUSH BX
;        MOV AL,FANTC
;        SUB AL,TOAPN
;        CMP AL,06H
;        JC DAJ1
;        DEC CHRAN
;        JMP DIJANI
DAJ1:   CALL DATVA
	  MOV AX,CFR[0]
	  AND AX,4000H
	  CMP AX,4000H
	  JNZ KV1
	  MOV AL,05H
	  MOV WORD PTR RUSLT[10],0
	  JMP KV2
KV1:      MOV AL,1
KV2:    MOV RUSLT[SI+1],AL
	CALL DOACL
	CMP AX,170H  ;200H
	JNC DGJ1
	  MOV WORD PTR RUSLT[4],AX
	MOV RUSLT[0],1BH
	CALL LPRI
	CMP CX,55H
	JNZ JHGK
	JMP DGJ1
JHGK:   PUSH ES
	MOV AX,ANCHA
	MOV ES,AX
      MOV AL,ES:BYTE PTR[4]
	AND AL,080H
	CMP AL,080H
	JNZ DJA1
DJA1I2:CMP ES:BYTE PTR[8],0
	JZ PAD1
IUY:    CALL RTRAN
	CMP AX,0AAH
	JZ PAD1
	POP ES
	JMP DGJ1
DJA1:   CMP ES:BYTE PTR[0DH],01H
	JNZ PAD1
	JMP DJA1I2
PAD1: CMP ES:BYTE PTR[8],3
	JNC IUY
      POP ES
	CALL RTRAN    ;COMQ
	CMP AX,0AAH
	JNZ DGJ1
	CALL SCPR
	CALL STRUM
	CALL OUTP
	CALL CNSN
DGJ1:        CALL CLEAR
	CALL DAV
YT11:     NOP
	PUSH AX
;	MOV AL,50H
;       CALL DISPLAY
	POP AX
DIJANI: POP BX
	JMP DIJAN2
CWAR:   MOV CWI,0
	MOV CX,3EH
CWAR1:	MOV AX,BX
	MUL CX
	MOV BP,AX
	MOV PADAD,AX
	INC BP
	MOV AL,PADDT[BP]
DIJANB: CMP AL,PADDT[BP+1]
	JNZ DIJAN9
DIJANL: INC CWI
	CMP CWI,04H
	JGE DIJAN1
	INC BP
	INC BP
	CMP WORD PTR PADDT[BP],00H
	JZ DIJANH
	MOV AL,PADDT[BP]
	JMP DIJANB
DIJANH: CMP CWI,04H
	JGE DIJAN1
	MOV AX,PADAD
	MOV CWI,0
	  INC AX
	  INC AX
	MOV PADAD,AX
	MOV BP,AX
	INC BP
	CMP PADDT[BP],00H
	JNZ DIJNA3
	JMP DIJAN1
DIJNA3: MOV AL,PADDT[BP]
	JMP DIJANB
DIJAN9: MOV ADDRR,BP
DIJANK: ADD BP,02H
	CMP WORD PTR PADDT[BP],00H
	JZ DIJANJ
	CMP AL,PADDT[BP+1]
	JNZ DIJANK
	JMP DIJANL
DIJANJ: MOV BP,ADDRR
DIJANM: SUB BP,02H
	JC DIJANH
	CMP BP,PADAD
	JC DIJANH
	CMP AL,PADDT[BP-1]
	JNZ DIJANM
	INC CWI
	CMP CWI,04H
	JC DINJ1
	JMP DIJAN1
DINJ1:  MOV AL,PADDT[BP]
	JMP DIJANB
DIJAN1: RET
INJDP:PUSH AX 
;      MOV AL,4DH
;       CALL DISPLAY
	POP AX
YT12:     NOP
NP4:          MOV BX,00H
	MOV DH,00H
	MOV DL,FANTC
	SUB DL,08H
	MOV INJCP,0
	MOV INJDN,0
	MOV INJDT,0
	MOV AL,TOAAN
	ADD AL,TOAPN
	MOV TOAAN,AL
	CMP AL,DL
	JBE INJDP5
	JMP DIGA3
INJDP5: MOV DI,00H
	MOV CX,04H
	MOV AX,00H
INJDP6: MOV WORD PTR  INJDA[DI],AX
	ADD DI,02H
	LOOP INJDP6
	MOV DI,0
	MOV CX,4
INP8:   MOV  WORD PTR INJCA[DI],AX
	ADD DI,02H
	LOOP INP8
	MOV DI,00H
	MOV AL,NL[BX]
	CMP AL,04H
	JGE INDP
INDP1:  INC BX
	CMP NL[BX],00
	JZ INJDP3
	CMP NL[BX],04H
	JC INDP1
INDP:   NOP
	MOV INJDA[DI],BL
	INC DI
	INC INJDN
	MOV AL,NL[BX]
INJDP2: INC BX
	CMP NL[BX],00H
	JZ INJDP3
	PUSH AX
	SUB AL,NL[BX]
	JNC INJDP1
	NEG AL
INJDP1: CMP AL,02H
	POP AX
	JG INJDP2
	INC INJDN
	MOV INJDA[DI],BL
	INC DI
	  CMP DI,8
	JC INJDP2
INJDP3: CMP INJDN,01H
	JG INJDP4
	NOP
	INC BX
	CMP NL[BX],00H
	JNZ INJDP5
	JMP DIGAD
INJDP4:  NOP  
YT12A:    NOP
	MOV AX,TOAON
	MOV SI,00H
	MOV DI,00H
	MOV BH,00H
INJDPA: MOV BL,INJDA[SI]
	SHL BX,1
	MOV AX,TOAON
	MOV CX,TOAL[BX]
	CMP CX,20H
	JC INJDP7
	  CMP CX,2710H
	  JC INJDP8
INJDP7: INC SI
	CMP INJDA[SI],00H
	JZ INJDP9
	  CMP SI,8
	  JC INJDPA
	JMP INJDP9
INJDP8: SHR BX,1
	INC INJDT
	MOV INJDA[DI],BL
	INC DI
	JMP INJDP7
INJDP9:   NOP
YT12B:    NOP
	CMP DI,SI
	JGE INJD99
	MOV INJDA[DI],0
	INC DI
	JMP INJDP9
INJD99: MOV INJDT,01H
	MOV DI,0
	MOV INJDN,01H
	MOV SI,0
INJD9D: MOV BL,INJDA[SI]
	MOV INJCA[DI],BL
	SHL BX,1
	MOV AX,TOAL[BX]
	INC SI
	CMP INJDA[SI],0
	JZ INJD9C
      CMP SI,8
      JNC INJD9C
	MOV BL,INJDA[SI]
	SHL BX,1
	CMP AX,TOAL[BX]
	JNC INJD9A
	MOV CX,AX
	MOV AX,TOAL[BX]
	JMP INJD9B
INJD9A: MOV CX,TOAL[BX]
INJD9B: SUB AX,CX
	MOV DX,0
	MOV INJCP,AX
	MOV AX,CX
	MOV CX,13H
	MUL CX
	MOV CX,0AH
	DIV CX
	MOV CX,AX
	MOV AX,INJCP
	CMP AX,CX
	JNC INJD9D
	  NOP
	  NOP
	NOP
	INC INJDN
	INC DI
	JMP INJD9D
INJD9C:
	NOP
YT12C:    NOP
	CMP INJDN,01H
	JG INJD9E
	JMP DIGAD
INJD9E: MOV SI,0
	MOV DI,0
	MOV BH,0
	MOV CH,0
	MOV CL,3EH
	MOV AX,0
IN4:    MOV INJDA[SI],AL
	INC SI
	CMP SI,08H
	JNZ IN4
INP33:  MOV INJDT,0
	MOV INJDN,0
	MOV SI,0
	MOV BH,0
	MOV CH,0
	MOV CL,3EH
IDJ1:   MOV BL,INJCA[SI]
	MOV AX,BX
	MUL CX
	SHL SI,1
	MOV INJEA[SI],AX
	SHR SI,1
	INC SI
	  CMP SI,8
	  JNC IDJ1P
	CMP INJCA[SI],0
	JNZ IDJ1
IDJ1P:        NOP
	NOP
	MOV SI,0
IJD1:   MOV INJDA[SI],0
	INC SI
	  CMP SI,8
	  JNC IJD1J
	CMP INJCA[SI],0
	JNZ IJD1
IJD1J:    NOP
YT12D:    NOP
	MOV SI,0
	SHL SI,1
	MOV BP,INJEA[SI]
	SHR SI,1
IDJ31:  PUSH BP
IDJ3:   MOV AL,PADDT[BP+1]
	MOV SI,0
IDJ8:   SHL SI,1
	MOV DI,INJEA[SI]
	SHR SI,1
IDJ4:   CMP AL,PADDT[DI]
	JNZ IDJ2
	INC INJDT
	CMP SI,0
	JNZ IDJ7
	CMP INJDT,03  ;4H
	JNC IJD4
	CMP INJDT,03H
	JZ DDJ1
	JMP IJD2
DDJ1:   CMP INJDN,01H
	JZ IJD4
	INC INJDN
	MOV INJDT,00H
	MOV BP,DI
	JMP IDJ3
IJD4:   JMP IDJ11
IDJ7:   MOV BP,DI
	MOV DL,INJCA[SI]
	OR DL,80H
	MOV INJCA[SI],DL
	JMP IDJ3
IDJ2:   ADD DI,02H
	CMP PADDT[DI],0
	JNZ IDJ4
IJ1:    INC SI
	  CMP SI,8
	  JNC IJD2
	CMP INJCA[SI],0
	JNZ IDJ9
IJD2:   POP BP
	ADD BP,02H
	CMP PADDT[BP],0
	JZ IDJ10
	PUSH SI
	MOV SI,0
IDJJ9:  MOV DL,INJCA[SI]
	AND DL,7FH
	MOV INJCA[SI],DL
	INC SI
	  CMP SI,8
	  JNC IDJ9J
	CMP INJCA[SI],0
	JNZ IDJJ9
IDJ9J:        POP SI
	MOV INJDT,0
	JMP IDJ31
IDJ9:   MOV DL,INJCA[SI]
	AND DL,80H
	CMP DL,80H
	JZ IJ1
	JMP IDJ8
IDJ10:  JMP DIGAD
IDJ11:  NOP
YT12E:    NOP
	POP BP
	MOV DL,INJCA[SI]
	OR DL,80H
	MOV INJCA[SI],DL
	MOV SI,0
	  PUSH CX
	  MOV CX,8
IDJ13:  MOV AL,INJCA[SI]
	AND AL,7FH
	MOV INJDA[SI],AL
	INC SI
	  LOOP IDJ13
	  POP CX
	CMP INJDT,03H
	JNC INP5
	MOV INJDT,00H
	JMP DIGAD
INP5:  MOV XIPE,0
	 MOV SI,0
	MOV DI,0EH
INP7:   MOV BL,INJDA[SI]
	SHL BX,1
	MOV AX,TOAL[BX]
	MOV WORD PTR RUSLT[DI],AX
	ADD AX,XIPE
	MOV XIPE,AX
	INC SI
	ADD DI,02H
	  CMP SI,8
	  JNC INP7P
	CMP INJDA[SI],00H
	JNZ INP7
INP7P:   MOV AX,SI      ;AL,INJDT
	MOV DI,0DH
	MOV RUSLT[DI],AL
	MOV DI,00H
	MOV RUSLT[DI+1],02H
	MOV AX,XIPE
	MOV WORD PTR RUSLT[DI+30],AX
YT12F:    NOP
	NOP
	NOP
	NOP
	NOP
	INC CHRAN
	MOV SI,00H
	MOV BH,00H
INJDD0: MOV BX,WORD PTR INJDA[SI]
	CMP BX,0
	JZ INJDD1
	MOV BH,0
	MOV AX,BX
	MOV CL,3EH
	MUL CL
	MOV BP,AX
INJDD4: MOV AH,00
	MOV AL,PADDT[BP]
	MOV BX,AX
	MOV AL,CHRAN
	CMP TOAIT[BX],AL
	JZ INJDD3
	CMP TOAIT[BX],0AAH
	JNZ INJDD3
	MOV TOAIT[BX],AL
	INC TOAPN
INJDD3: INC BP
	MOV AL,PADDT[BP]
	CMP AL,00H
	JNZ INJDD4
	MOV AL,PADDT[BP+1]
	CMP AL,00H
	JNZ INJDD4
	INC SI
	  CMP SI,8
	  JNC INJDD1
	CMP INJDA[SI],0
	JNZ INJDD0
INJDD1: MOV DI,0
	MOV AL,TOAAN
	ADD AL,TOAPN
	MOV TOAAN,AL
	MOV SI,0
	MOV BH,0
INJDD7: MOV BX,WORD PTR INJDA[SI]
	CMP BX,0
	JZ INJDD6
	MOV BH,0
	MOV AX,BX
	MOV CL,3EH
	MUL CL
	MOV BP,AX
	MOV AH,00
INJDD5: MOV AL,PADDT[BP]
	MOV BX,AX
	MOV AL,FANTN[BX]
	PUSH DI
	MOV CX,DI
	CMP CX,00H
	JZ INJDDG
	MOV DI,0
INJDDC: CMP AL,SAPN[DI]
	JZ INJDDE
	INC DI
	LOOP INJDDC
INJDDG: POP DI
	MOV SAPN[DI],AL
       INC DI
INJDDF:        INC BP
	CMP PADDT[BP],00H
	JZ INDF1
	JMP INJDD5
INDF1:  NOP
YT12G:    NOP
	MOV AL,PADDT[BP+1]
	CMP AL,00
	JNZ INJDD5
	INC SI
	  CMP SI,8
	  JNC INJDD6
	CMP INJDA[SI],0
	JNZ INJDD7
	JMP INJDD6
INJDDE: POP DI
	JMP INJDDF
INJDD6: MOV DI,00H
	MOV BX,0
INJDD8: MOV AL,SAPN[DI+1]
	CMP AL,00H
	JNZ INJDD9
	JMP INJDDA
INJDD9: MOV AH,0
	MOV AL,SAPN[DI]
	MOV CL,02H
	MUL CL
	MOV SI,AX
	ADD AX,600H       ;?
	MOV CADDR[BX],AX
	MOV AX,ANSCD[SI]
	MOV CFR[BX],AX
	MOV AX,ANSCD[SI+200D]
	MOV CPW[BX],AX
	MOV AX,ANSCD[SI+400D]
	MOV CPA[BX],AX
	MOV AX,ANSCD[SI+600D]
	MOV CTOA[BX],AX
	MOV AX,ANSCD[SI+800D]
	MOV CTON[BX],AX
	INC DI
	  CMP DI,32D
	  JNC INJDDA
	ADD BX,02H
	JMP INJDD8
INJDDA: DEC TOAPN
	MOV AL,FANTC
	SUB AL,TOAPN
	CMP AL,07H
	JC INDJ1
	DEC CHRAN
YT13:     NOP
	JMP DIGAD
INDJ1:  CALL DATVA
YT14:     NOP    
	MOV AX,00H
	MOV WORD PTR RUSLT[6],AX
	  CALL DOACL
	CMP AX,170H    ;200H
	JNC SH5
	  MOV WORD PTR RUSLT[4],AX
	MOV RUSLT[0],1BH
;	MOV ES:BYTE PTR[6],66H
      MOV AL,ES:BYTE PTR[4]
	AND AL,080H
	CMP AL,080H
	JNZ DJA1N
DA1I2:CMP ES:BYTE PTR[8],0
	JZ PAD1A
TY1:    CALL RTRAN
	CMP AX,0AAH
	JZ PAD1A
	JMP SH5
DJA1N:  CMP ES:BYTE PTR[0DH],01H
	JNZ PAD1A
	JMP DA1I2
PAD1A:CMP ES:BYTE PTR[08H],3
	JNC TY1  
	CALL RTRAN   ;COMQ
	CMP AX,0AAH
	JNZ SH5
      CALL SCPR
	CALL STRUM
	CALL OUTP
	CALL CNSN
SH5:     CALL CLEAR
	CALL DAV 
	PUSH AX
	MOV AL,50H
;       CALL DISPLAY
	POP AX
DIGAD:PUSH AX
      MOV AL,4EH
;       CALL DISPLAY
	POP AX
NP6:          MOV DH,00H
	MOV DL,FANTC
	SUB DL,04H
	CMP TOAAN,DL
	JBE DID88
	JMP DIGA3
DID88:  CMP CHRAN,00H
	JZ DU24
	JMP DID8
DU24:   MOV SI,00H
	MOV CWI,00H
	MOV AX,TOAL[SI]
DU2:    ADD SI,02H
	CMP TOAL[SI],00H
	JZ DU4
	MOV BX,TOAL[SI]
	CMP AX,BX
	JC DU2
      MOV AX,BX
	JMP DU2  

DU17:   NOP 
      ;  MOV SI,00H
      
	MOV AX,TOAL[SI]
DU3:    ADD SI,02H
	CMP TOAL[SI],00H
	JZ DU4
	MOV BX,TOAL[SI]
	CMP AX,BX
	JNC DU3
	  MOV AX,BX
	  JMP DU3
DU4:    MOV BX,AX
YT15:     NOP
	PUSH BX
	PUSH AX
	MOV DX,0
	MOV CX,01H
	MUL CX
	MOV CX,100D
	DIV CX
	MOV TOA05,AX
	POP AX
	PUSH AX
	MOV BX,AX
	MOV CX,AX
	MOV SI,00H
DU6:    MOV AX,TOAL[SI]
	MOV DX,0
	CMP CX,00H
	  JZ D03
	  DIV CX
D03:    CMP DX,TOA05
	JC DU7
	MOV AX,BX
	SUB AX,DX
	CMP AX,TOA05
	JC DU7
	INC CWI
	CMP CWI,06H
	JNC DU5
DU7:    ADD SI,02H
	CMP TOAL[SI],00H
	JNZ DU6
	CMP CWI,06H
	JNC DU5
	POP AX
	POP BX
	JMP DID8
DU5:    POP AX
	POP BX
	MOV CWI,00H
	ADD AX,BX
	SHR AX,1
	MOV CX,AX
	MOV DX,0
	MOV SI,0
DU55:   MOV AX,TOAL[SI]
	MOV BX,TOAL[SI+2]
	SUB AX,BX
	JNC DU551
	NEG AX
DU551:  MOV DX,100D
	MUL DX
	MOV DX,0
	CMP CX,00H
	JZ DO4
	DIV CX
DO4:    NOP       ; SHR AX,1
	CMP AX,02H
	JC DU552
	CMP AX,25H
	JC DU553
DU552:  INC CWI
DU553:  ADD SI,02H
	CMP TOAL[SI],00H
	JNZ DU55
	CMP CWI,08H
	JC DU554
	JMP DID8
	INC CHRAN
DU554:;  PUSH AX
      ;   MOV AL,42H
      ;  CALL DISPLAY
	;  POP AX
NP7:        CALL DOUAN
NP8:        MOV CWI,0
	MOV TOA05,00H
YT16:     NOP
	JMP DIGA33
DID8:   INC II
	CMP II,02H
	JGE DIGA1
	JMP DIGA2
DIGA1:  MOV DH,00H
	MOV DL,FANTC
	SUB DL,04H
	CMP TOAAN,DL
	JG DIGA3
	CALL READP
YT17:     NOP
	JMP DIGA3
DIGA3:  CMP ANPUN,05H
	JBE DIGA33
	POP ES
	  JMP FRAN0
DIGA33: POP ES
YT18:     NOP
GA3:    MOV CHNUM,00H
;	CMP CHRAN,00H
;	JZ DA0
;	  MOV AL,ES:BYTE PTR[4]
;	  AND AL,07FH
;	  MOV ES:BYTE PTR[4],AL
	MOV ES:BYTE PTR [3],01H
	  MOV ES:BYTE PTR[0DH],00
DA0:    MOV CHRAN,00H
;	MOV AL,ES:[0]
;	CMP AL,0FFH
;	JNZ NEXC1
;	  MOV AL,ES:BYTE PTR[4]
;	  AND AL,0FH
;	  CMP AL,01H
;	  JZ NEXC1
;	  MOV AL,ES:BYTE PTR[4]
;	  OR AL,01H
;	  MOV ES:BYTE PTR[4],AL
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
;	CALL SCPAA
	  CMP DS:DISCM,66H;94H
	  JNZ NEXC1
	  MOV DS:DISCM,00H
	  CALL THRDOC
NEXC1:  MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	NOP
NECX11: JMP     BEG0
	MOV AL,SANCC
	MOV AH,00
	MOV CL,02H
	MUL CL
	MOV SI,AX
	MOV CH,0
	MOV Cl,FANTC
	MOV DI,0
DIGA5:  MOV AL,TOAIT[DI]
	CMP AL,0AAH
	JZ DIGA4
	INC DI
	LOOP DIGA5
	JMP DIGA6
DIGA4:  MOV BX,DI
	PUSH CX
	MOV CL,02H
	MOV AL,FANTN[BX]
	MOV AH,0
	MUL CL
	POP CX
	MOV BP,AX
	MOV AX,ANSCD[BP]
	MOV SANCF[SI],AX
	MOV AX,ANSCD[BP+200D]
	MOV SANCP[SI],AX
	MOV AX,ANSCD[BP+400D]
	MOV SANCA[SI],AX
	MOV AX,ANSCD[BP+600D]
	MOV SANCT[SI],AX
	MOV AX,ANSCD[BP+800D]
	MOV SACTN[SI],AX
	INC SANCC
	INC DI
	DEC CX
	CMP CX,0
	JNZ DIGA5
DIGA6:  NOP
YT19:     NOP
	JMP FRAN7

FRES    DW  111DH,11D4H,11F6H,1217H,1238H,125AH,127BH,129CH
	DW  12BEH,12E0H,1300H,1322H,1343H,1364H,1386H,13A7H
	DW  13C8H,13EAH,140BH,142CH,144EH,146FH,1490H,14B6H
	DW  14D3H,14F4H,1516H,1537H,1558H,157AH,159BH,15BCH
	DW  15DEH,15FFH,1620H,1642H,1663H,1684H,16A6H,16C7H
	DW  16E8H,170AH,172BH,174CH,176EH,178FH,17B0H,17D2H
	DW  17F3H,1814H,1836H,1857H,1878H,189AH,18BBH,18DCH
	DW  18FEH,191FH,1940H,1962H,1983H,19A4H,19C6H,19E7H  
	DW  1A08H,1A2AH,1A4BH,1A6CH,1A8EH,1AAFH,1AD0H,1AF2H
	DW  1B13H,1B34H,1B56H,1B77H,1B98H,1BBAH,1BDBH,1BFCH
	DW  1C1EH,1C3FH,1C60H,1C82H,1CA3H,1CC4H,1CE6H,1D07H
	DW  1D28H,1D4AH,1D6BH,1D8CH,1DAEH,1DCFH,1DF0H,1E12H
	DW  1E33H,1E54H,1E76H,1E97H,1EB8H,1EDAH,1EFBH,1F1CH
	DW  1F3EH,1F5FH,1F80H

XLI DB  9, 12, 10, 12, 10, 9, 10, 10, 8, 10, 10, 10, 12, 11, 9, 11    ;7.5
DB  8, 10, 10, 10, 9, 10, 10, 12, 9, 11, 11, 9, 12, 11, 10, 11    ;7.6
DB  8, 10, 12, 9, 10, 9, 11, 11, 9, 10, 10, 10, 9, 10, 12, 12    ;7.7
DB  8, 11, 11, 9, 8, 9, 9, 10, 9, 8, 9, 8, 8, 10, 9, 10    ;7.8
DB  8, 10, 10, 9, 9, 9, 10, 9, 10, 8, 8, 9, 8, 9, 12, 10    ;7.9
DB  9, 9, 8, 7, 10, 7, 9, 11, 8, 8, 8, 9, 8, 9, 7, 10    ;8
DB  9, 9, 8, 10, 9, 8, 8, 11, 8, 9, 6, 11, 9, 9, 8, 10    ;8.1
DB  8, 8, 9, 11, 8, 9, 9, 10, 8, 8, 8, 8, 11, 9, 9, 9    ;8.2
DB  9, 9, 9, 12, 8, 11, 8, 9, 9, 9, 9, 10, 10, 12, 8, 10    ;8.3
DB  9, 10, 9, 12, 8, 10, 9, 9, 8, 9, 10, 10, 10, 12, 8, 10    ;8.4
DB  8, 8, 9, 10, 8, 9, 11, 10, 8, 10, 9, 9, 8, 10, 8, 9    ;8.5
DB  9, 10, 10, 10, 8, 9, 9, 10, 7, 10, 9, 8, 10, 10, 7, 9    ;8.6
DB  9, 11, 10, 10, 9, 9,10, 10, 10, 10, 8, 11, 9, 11, 9, 9    ;8.7
DB  8, 13, 9, 8, 9, 9, 10, 9, 9, 9, 9, 9, 8, 9, 8, 8    ;8.8
DB  9, 12, 9, 7, 9, 8, 9, 9, 8, 10, 9, 9, 9, 8, 7, 9    ;8.9
DB  7, 9, 10, 9, 9, 9, 9, 11, 11, 9, 8, 9, 9, 9, 8, 9    ;9
DB  8, 8, 11, 11, 9, 9, 9, 9, 10, 9, 8, 10, 10, 10, 8, 10    ;9.1
DB  10, 9, 10, 12, 10, 10, 10, 10, 10, 9, 9, 9, 10, 10, 10, 10    ;9.2
DB  10, 11, 8, 11, 11, 9, 10, 11, 11, 9, 9, 11, 10, 10, 10, 10    ;9.3
DB  11, 10, 8, 9, 12, 10, 11, 11, 11, 10, 10, 12, 10, 11, 10, 11    ;9.4
DB  9, 9, 10, 9, 11, 8, 10, 12, 12, 10, 9, 11, 10, 10, 9, 10    ;9.5
DB  8, 9, 11, 9, 10, 9, 9, 10, 10, 10, 8, 9, 9, 9, 9, 8    ;9.6
DB  8, 9, 10, 10, 9, 8, 9, 9, 9, 9, 9, 9, 10, 9, 8, 9    ;9.7
DB  9, 8, 9, 9, 8, 9, 9, 9, 10, 9, 8, 8, 9, 9, 8, 8    ;9.8
DB  9, 8, 8, 9, 7, 8, 8, 9, 9, 10, 8, 10, 8, 8, 7, 8    ;9.9
DB  8, 8, 8, 8, 9, 8, 8, 8, 9, 8, 7, 10, 9, 7, 7, 8    ;10
DB  9, 8, 8, 9, 9, 7, 8, 8, 8, 8, 8, 8, 8, 9, 8, 9    ;10.1
DB  8, 9, 9, 8, 8, 8, 8, 8, 10, 6, 7, 9, 7, 9, 8, 10    ;10.2
DB  8, 9, 9, 9, 8, 8, 8, 7, 8, 9, 7, 8, 8, 8, 9, 8    ;10.3
DB  9, 10, 8, 8, 8, 8, 8, 9, 9, 9, 7, 8, 8, 8, 8, 9    ;10.4
DB  9, 9, 9, 9, 9, 9, 11, 9, 10, 9, 8, 9, 8, 9, 9, 10    ;10.5
DB  9, 8, 9, 9, 9, 8, 10, 9, 11, 9, 8, 9, 9, 10, 9, 9    ;10.6
DB  9, 7, 9, 9, 8, 9, 11, 8, 10, 8, 8, 9, 8, 9, 7, 7    ;10.7
DB  7, 8, 9, 10, 8, 8, 10, 7, 10, 8, 7, 8, 8, 7, 7, 8    ;10.8
DB  8, 8, 9, 10, 9, 8, 8, 7, 10, 9, 7, 8, 8, 8, 7, 8    ;10.9
DB  9, 9, 9, 9, 10, 8, 9, 8, 9, 9, 7, 9, 8, 9, 7, 9    ;11
DB  9, 9, 9, 9, 9, 8, 8, 9, 9, 9, 8, 8, 8, 8, 8, 8    ;11.1
DB  9, 9, 9, 9, 9, 8, 10, 9, 9, 9, 7, 8, 8, 9, 8, 8    ;11.2
DB  9, 9, 9, 8, 8, 8, 9, 8, 10, 9, 7, 9, 8, 8, 8, 9    ;11.3
DB  8, 8, 8, 7, 8, 8, 9, 9, 10, 9, 7, 9, 8, 10, 7, 9    ;11.4
DB  7, 8, 8, 8, 9, 7, 9, 9, 9, 8, 7, 9, 9, 9, 7, 8    ;11.5
DB  8, 8, 8, 9, 8, 7, 9, 8, 8, 8, 8, 8, 8, 8, 7, 8    ;11.6
DB  8, 8, 8, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 7, 8    ;11.7
DB  7, 8, 7, 9, 9, 8, 8, 8, 8, 8, 7, 9, 7, 7, 7, 9    ;11.8
DB  7, 7, 9, 8, 7, 8, 8, 9, 8, 9, 7, 8, 8, 8, 7, 8    ;11.9
DB  8, 7, 9, 8, 8, 8, 8, 8, 9, 8, 7, 8, 8, 7, 7, 8    ;12
DB  6, 7, 9, 8, 8, 8, 9, 9, 8, 7, 8, 8, 8, 8, 7, 7    ;12.1
DB  7, 8, 9, 8, 8, 8, 9, 9, 7, 7, 8, 8, 8, 9, 7, 8    ;12.2
DB  8, 8, 8, 8, 9, 8, 9, 9, 7, 7, 7, 8, 7, 8, 7, 9    ;12.3
DB  7, 9, 10, 9, 8, 8, 9, 9, 9, 8, 7, 8, 8, 8, 7, 8    ;12.4
DB  8, 9, 8, 8, 8, 7, 9, 9, 9, 8, 8, 8, 8, 8, 7, 7    ;12.5
DB  9, 10, 8, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 7, 10    ;12.6
DB  8, 9, 8, 10, 9, 8, 9, 10, 10, 9, 8, 9, 8, 8, 7, 11    ;12.7
DB  9, 9, 9, 10, 9, 10, 9, 10, 9, 9, 9, 10, 8, 8, 8, 9    ;12.8
DB  9, 8, 8, 8, 9, 9, 9, 10, 9, 9, 8, 8, 9, 8, 8, 9    ;12.9
DB  10, 9, 9, 8, 10, 8, 9, 9, 9, 9, 7, 9, 9, 9, 8, 8    ;13
DB  9, 9, 9, 9, 9, 8, 8, 9, 8, 10, 7, 11, 8, 9, 7, 9    ;13.1
DB  9, 9, 9, 9, 9, 8, 9, 9, 9, 9, 7, 9, 8, 10, 7, 7    ;13.2
DB  10, 9, 9, 9, 10, 8, 8, 10, 9, 7, 8, 10, 9, 8, 8, 8    ;13.3
DB  9, 9, 9, 9, 9, 8, 8, 9, 9, 8, 7, 9, 9, 8, 8, 8    ;13.4
DB  9, 9, 9, 9, 9, 9, 7, 9, 10, 8, 8, 10, 9, 9, 7, 8    ;13.5
DB  9, 9, 9, 9, 10, 9, 8, 9, 10, 8, 10, 9, 9, 9, 7, 8    ;13.6
DB  9, 9, 8, 10, 9, 9, 8, 9, 9, 9, 9, 10, 8, 9, 8, 8    ;13.7
DB  8, 9, 8, 9, 9, 8, 8, 9, 10, 9, 10, 9, 9, 8, 8, 7    ;13.8
DB  8, 9, 7, 9, 8, 9, 7, 9, 11, 9, 9, 9, 9, 8, 8, 9    ;13.9
DB  8, 9, 8, 8, 8, 9, 7, 9, 10, 8, 8, 9, 8, 8, 8, 8    ;14
DB  9, 9, 9, 9, 9, 8, 6, 9, 10, 8, 9, 10, 8, 8, 8, 8    ;14.1
DB  9, 9, 9, 9, 9, 9, 6, 9, 11, 8, 9, 10, 8, 8, 9, 9    ;14.2
DB  9, 9, 9, 8, 9, 8, 7, 9, 12, 8, 8, 10, 8, 8, 9, 8    ;14.3
DB  11, 9, 9, 10, 9, 9, 8, 9, 10, 10, 8, 9, 9, 8, 10, 9    ;14.4
DB  10, 9, 9, 10, 9, 9, 8, 9, 10, 9, 8, 9, 11, 8, 10, 9    ;14.5
DB  9, 9, 10, 10, 10, 8, 9, 10, 11, 8, 9, 10, 9, 8, 10, 10    ;14.6
DB  8, 9, 10, 9, 11, 9, 8, 10, 9, 9, 9, 11, 11, 8, 11, 10    ;14.7
DB  10, 10, 10, 9, 9, 9, 8, 9, 12, 10, 9, 10, 10, 8, 9, 10    ;14.8
DB  10, 10, 8, 9, 8, 9, 8, 9, 11, 9, 9, 10, 9, 9, 8, 8    ;14.9
DB  10, 11, 7, 10, 8, 9, 8, 10, 10, 9, 8, 11, 9, 9, 8, 8    ;15
DB  8, 9, 7, 10, 9, 8, 8, 9, 10, 8, 8, 10, 8, 8, 8, 7    ;15.1
DB  8, 8, 8, 9, 9, 8, 8, 9, 9, 8, 7, 10, 9, 7, 9, 10    ;15.2
DB  9, 8, 9, 8, 9, 9, 7, 10, 9, 8, 8, 10, 8, 7, 9, 7    ;15.3
DB  8, 8, 9, 8, 8, 9, 7, 8, 8, 10, 8, 9, 7, 7, 8, 8    ;15.4
DB  9, 9, 8, 9, 8, 8, 8, 9, 7, 9, 8, 9, 8, 7, 8, 9    ;15.5
DB  9, 8, 8, 8, 10, 8, 7, 10, 9, 8, 8, 9, 9, 8, 8, 8    ;15.6
DB  9, 9, 8, 9, 10, 9, 7, 9, 10, 9, 9, 9, 8, 8, 8, 8    ;15.7
DB  10, 9, 9, 9, 10, 8, 7, 9, 10, 9, 8, 10, 8, 8, 7, 7    ;15.8
DB  9, 9, 9, 9, 11, 9, 10, 10, 10, 8, 8, 10, 9, 8, 9, 7    ;15.9
DB  8, 9, 9, 9, 11, 8, 9, 10, 10, 8, 8, 9, 10, 8, 8, 9    ;16
DB  10, 9, 9, 9, 10, 9, 9, 9, 10, 9, 9, 10, 9, 8, 8, 8    ;16.1
DB  8, 10, 9, 9, 10, 9, 8, 10, 10, 10, 9, 10, 9, 9, 8, 8    ;16.2
DB  12, 11, 9, 9, 10, 9, 8, 9, 10, 10, 9, 8, 8, 9, 9, 8    ;16.3
DB  11, 10, 9, 10, 10, 9, 8, 10, 10, 10, 9, 11, 8, 9, 9, 8    ;16.4
DB  10, 10, 9, 9, 10, 8, 8, 10, 9, 11, 8, 10, 10, 9, 11, 7    ;16.5
DB  11, 10, 9, 9, 10, 9, 9, 10, 10, 10, 8, 11, 9, 8, 11, 8    ;16.6
DB  10, 10, 9, 7, 9, 8, 9, 10, 10, 10, 8, 11, 10, 10, 10, 8    ;16.7
DB  12, 11, 9, 8, 9, 9, 10, 10, 11, 10, 8, 11, 10, 10, 9, 7    ;16.8
DB  11, 11, 10, 8, 9, 9, 10, 10, 12, 9, 9, 11, 9, 10, 8, 7    ;16.9
DB  11, 11, 11, 10, 10, 10, 9, 12, 11, 8, 9, 11, 10, 7, 11, 10    ;17
DB  11, 11, 11, 10, 10, 10, 9, 12, 12, 9, 8, 10, 10, 10, 7, 8    ;17.1
DB  11, 12, 9, 10, 10, 9, 9, 11, 11, 10, 8, 11, 10, 12, 8, 10    ;17.2
DB  11, 11, 9, 11, 11, 10, 8, 12, 11, 12, 10, 12, 10, 12, 10, 10    ;17.3
DB  11, 10, 9, 11, 10, 9, 9, 11, 10, 11, 10, 11, 11, 10, 11, 8    ;17.4
DB  11, 11, 10, 12, 11, 10, 9, 12, 12, 13, 11, 12, 11, 9, 11, 8    ;17.5
DB  13, 11, 10, 12, 12, 11, 10, 12, 12, 12, 10, 12, 12, 10, 10, 8    ;17.6
DB  12, 11, 11, 10, 13, 11, 10, 12, 12, 11, 11, 13, 12, 10, 10, 7    ;17.7
DB  12, 12, 10, 10, 11, 10, 9, 12, 12, 12, 12, 13, 12, 13, 10, 9    ;17.8
DB  13, 12, 13, 10, 13, 11, 11, 13, 13, 11, 9, 12, 13, 13, 9, 9    ;17.9
DB  15, 12, 12, 10, 13, 12, 12, 14, 10, 10, 9, 14, 11, 12, 8, 12    ;18


ZOUDT DW  20, 66, 117, 161, 205, 249, 297, 338    ;7.5
DW  20, 66, 116, 160, 200, 247, 297, 340    ;7.6
DW  21, 73, 117, 162, 199, 247, 294, 341    ;7.7
DW  20, 75, 118, 158, 197, 252, 290, 341    ;7.8
DW  24, 73, 117, 158, 199, 250, 292, 341    ;7.9
DW  24, 72, 117, 157, 203, 249, 295, 338    ;8
DW  27, 68, 115, 156, 203, 243, 294, 339    ;8.1
DW  26, 69, 113, 158, 200, 245, 296, 339    ;8.2
DW  24, 66, 112, 159, 200, 248, 293, 336    ;8.3
DW  24, 66, 113, 158, 198, 249, 290, 338    ;8.4
DW  21, 67, 111, 159, 198, 251, 290, 338    ;8.5
DW  20, 68, 110, 160, 197, 251, 292, 339    ;8.6
DW  18, 68, 110, 158, 202, 248, 292, 339    ;8.7
DW  22, 66, 112, 159, 201, 247, 294, 342    ;8.8
DW  24, 68, 113, 158, 199, 244, 290, 340    ;8.9
DW  24, 70, 111, 159, 202, 245, 292, 341    ;9
DW  26, 69, 111, 160, 200, 249, 293, 341    ;9.1
DW  26, 67, 110, 156, 201, 249, 295, 339    ;9.2
DW  26, 64, 114, 157, 206, 247, 295, 337    ;9.3
DW  24, 66, 114, 157, 205, 246, 296, 338    ;9.4
DW  24, 68, 113, 156, 205, 245, 296, 339    ;9.5
DW  25, 69, 113, 156, 203, 244, 295, 337    ;9.6
DW  24, 68, 113, 158, 203, 248, 295, 338    ;9.7
DW  23, 68, 113, 159, 203, 250, 293, 340    ;9.8
DW  25, 67, 114, 158, 203, 251, 292, 340    ;9.9
DW  24, 63, 113, 157, 201, 248, 291, 343    ;10
DW  25, 64, 111, 156, 204, 248, 293, 342    ;10.1
DW  21, 69, 112, 154, 207, 247, 293, 340    ;10.2
DW  23, 71, 113, 159, 202, 244, 295, 338    ;10.3
DW  22, 71, 110, 160, 203, 244, 296, 337    ;10.4
DW  24, 69, 110, 159, 204, 247, 295, 338    ;10.5
DW  25, 68, 112, 158, 205, 247, 293, 338    ;10.6
DW  26, 68, 111, 158, 205, 248, 295, 342    ;10.7
DW  22, 66, 111, 158, 204, 248, 294, 342    ;10.8
DW  22, 66, 113, 160, 204, 248, 295, 342    ;10.9
DW  22, 67, 114, 160, 203, 248, 295, 339    ;11
DW  22, 67, 114, 159, 204, 247, 295, 339    ;11.1
DW  22, 67, 113, 158, 202, 247, 294, 337    ;11.2
DW  22, 70, 113, 159, 204, 249, 292, 339    ;11.3
DW  22, 69, 112, 158, 203, 248, 292, 340    ;11.4
DW  21, 67, 113, 157, 202, 248, 292, 340    ;11.5
DW  22, 66, 112, 156, 202, 246, 294, 339    ;11.6
DW  22, 67, 113, 156, 203, 246, 296, 339    ;11.7
DW  24, 67, 114, 155, 201, 247, 296, 339    ;11.8
DW  27, 68, 114, 156, 201, 248, 295, 342    ;11.9
DW  27, 69, 112, 156, 201, 247, 293, 342    ;12
DW  24, 68, 112, 158, 204, 247, 292, 341    ;12.1
DW  24, 68, 111, 158, 204, 248, 292, 341    ;12.2
DW  24, 68, 113, 158, 203, 247, 293, 339    ;12.3
DW  24, 69, 113, 157, 201, 246, 293, 339    ;12.4
DW  23, 70, 113, 158, 202, 246, 294, 339    ;12.5
DW  23, 70, 114, 159, 202, 249, 296, 338    ;12.6
DW  22, 68, 113, 158, 202, 247, 296, 338    ;12.7
DW  23, 67, 113, 158, 203, 248, 295, 337    ;12.8
DW  26, 70, 113, 157, 204, 249, 295, 339    ;12.9
DW  25, 69, 115, 158, 205, 246, 293, 338    ;13
DW  25, 69, 114, 156, 203, 247, 293, 339    ;13.1
DW  24, 69, 114, 158, 202, 247, 293, 340    ;13.2
DW  24, 68, 114, 158, 203, 246, 292, 340    ;13.3
DW  24, 68, 114, 158, 202, 247, 292, 340    ;13.4
DW  24, 68, 114, 158, 203, 247, 292, 339    ;13.5
DW  22, 69, 114, 158, 205, 248, 293, 338    ;13.6
DW  24, 68, 114, 157, 204, 247, 292, 339    ;13.7
DW  22, 69, 114, 159, 205, 248, 293, 339    ;13.8
DW  21, 69, 113, 159, 206, 249, 293, 339    ;13.9
DW  22, 69, 112, 160, 206, 250, 296, 340    ;14
DW  22, 68, 112, 160, 206, 248, 295, 338    ;14.1
DW  22, 68, 113, 160, 208, 249, 295, 337    ;14.2
DW  25, 70, 115, 160, 209, 248, 295, 337    ;14.3
DW  25, 69, 113, 157, 204, 247, 293, 338    ;14.4
DW  25, 68, 114, 157, 203, 246, 293, 339    ;14.5
DW  25, 69, 116, 157, 203, 248, 294, 341    ;14.6
DW  25, 69, 115, 158, 204, 248, 293, 339    ;14.7
DW  23, 69, 115, 158, 206, 249, 293, 338    ;14.8
DW  23, 68, 115, 158, 205, 250, 294, 338    ;14.9
DW  23, 67, 115, 159, 204, 249, 295, 337    ;15
DW  22, 66, 115, 159, 203, 247, 295, 337    ;15.1
DW  22, 68, 113, 156, 203, 246, 292, 338    ;15.2
DW  24, 69, 114, 156, 203, 248, 291, 342    ;15.3
DW  24, 69, 114, 154, 203, 249, 290, 342    ;15.4
DW  23, 67, 115, 154, 203, 249, 291, 340    ;15.5
DW  24, 69, 116, 157, 204, 248, 292, 339    ;15.6
DW  24, 68, 115, 158, 205, 247, 293, 339    ;15.7
DW  24, 68, 115, 157, 205, 247, 293, 337    ;15.8
DW  24, 69, 115, 159, 205, 248, 293, 336    ;15.9
DW  24, 68, 115, 157, 204, 249, 293, 338    ;16
DW  23, 69, 115, 159, 205, 248, 294, 339    ;16.1
DW  23, 69, 115, 156, 204, 247, 294, 340    ;16.2
DW  23, 68, 115, 156, 204, 246, 294, 339    ;16.3
DW  23, 68, 115, 157, 203, 247, 294, 339    ;16.4
DW  24, 68, 116, 158, 203, 248, 293, 339    ;16.5
DW  24, 68, 115, 158, 204, 247, 292, 339    ;16.6
DW  24, 69, 115, 158, 204, 248, 293, 339    ;16.7
DW  24, 69, 113, 159, 204, 248, 293, 338    ;16.8
DW  22, 70, 113, 160, 206, 249, 294, 338    ;16.9
DW  22, 69, 114, 158, 205, 249, 293, 338    ;17
DW  22, 69, 115, 156, 204, 248, 293, 338    ;17.1
DW  22, 69, 116, 156, 203, 247, 291, 338    ;17.2
DW  22, 68, 116, 156, 203, 247, 291, 338    ;17.3
DW  23, 66, 116, 157, 204, 248, 292, 339    ;17.4
DW  23, 66, 116, 157, 203, 248, 292, 339    ;17.5
DW  23, 67, 115, 158, 204, 248, 293, 338    ;17.6
DW  23, 68, 116, 158, 205, 247, 293, 338    ;17.7
DW  23, 70, 115, 157, 205, 248, 293, 338    ;17.8
DW  25, 71, 115, 157, 205, 248, 293, 338    ;17.9
DW  25, 71, 115, 157, 203, 246, 294, 338    ;18

DOATT DW  43, 91, 132, 178, 225, 269, 317, 364    ;7.5
DW  44, 91, 136, 181, 224, 269, 318, 364    ;7.6
DW  44, 90, 135, 181, 224, 270, 317, 364    ;7.7
DW  46, 89, 135, 181, 225, 270, 317, 362    ;7.8
DW  46, 89, 134, 180, 226, 270, 317, 362    ;7.9
DW  44, 88, 133, 180, 225, 270, 317, 362    ;8
DW  44, 91, 135, 180, 226, 270, 314, 362    ;8.1
DW  44, 92, 136, 180, 224, 271, 316, 360    ;8.2
DW  45, 92, 138, 179, 225, 270, 318, 362    ;8.3
DW  45, 92, 137, 180, 226, 272, 316, 362    ;8.4
DW  46, 91, 134, 180, 226, 272, 316, 361    ;8.5
DW  46, 91, 134, 180, 226, 269, 317, 363    ;8.6
DW  46, 91, 134, 178, 226, 271, 315, 363    ;8.7
DW  45, 89, 135, 178, 224, 271, 316, 363    ;8.8
DW  43, 90, 134, 178, 225, 270, 316, 363    ;8.9
DW  45, 91, 136, 179, 225, 271, 316, 361    ;9
DW  45, 91, 134, 180, 226, 270, 316, 361    ;9.1
DW  45, 92, 135, 180, 226, 270, 314, 361    ;9.2
DW  46, 90, 134, 178, 224, 271, 316, 362    ;9.3
DW  45, 89, 134, 178, 226, 271, 317, 362    ;9.4
DW  44, 88, 134, 178, 225, 273, 316, 361    ;9.5
DW  45, 89, 135, 178, 227, 270, 315, 361    ;9.6
DW  45, 90, 133, 178, 225, 270, 315, 362    ;9.7
DW  45, 91, 135, 178, 225, 270, 317, 361    ;9.8
DW  45, 90, 136, 178, 225, 271, 317, 361    ;9.9
DW  44, 91, 136, 180, 225, 270, 318, 360    ;10
DW  45, 91, 134, 180, 225, 269, 318, 360    ;10.1
DW  46, 91, 134, 181, 225, 271, 316, 362    ;10.2
DW  46, 90, 134, 178, 226, 270, 314, 362    ;10.3
DW  46, 90, 135, 179, 227, 271, 314, 362    ;10.4
DW  45, 90, 133, 178, 226, 271, 315, 364    ;10.5
DW  44, 90, 134, 177, 225, 271, 316, 363    ;10.6
DW  44, 91, 134, 177, 224, 271, 317, 361    ;10.7
DW  44, 91, 134, 177, 225, 270, 317, 361    ;10.8
DW  44, 91, 135, 177, 225, 271, 316, 361    ;10.9
DW  47, 89, 134, 178, 225, 270, 316, 361    ;11
DW  47, 90, 134, 178, 226, 270, 315, 361    ;11.1
DW  45, 90, 133, 179, 226, 270, 315, 362    ;11.2
DW  45, 90, 134, 177, 226, 271, 316, 362    ;11.3
DW  45, 90, 135, 178, 226, 271, 317, 362    ;11.4
DW  46, 90, 134, 179, 225, 270, 317, 362    ;11.5
DW  45, 90, 134, 179, 225, 271, 315, 361    ;11.6
DW  45, 90, 135, 180, 225, 270, 315, 361    ;11.7
DW  46, 89, 135, 181, 226, 271, 316, 362    ;11.8
DW  43, 90, 135, 181, 226, 269, 317, 360    ;11.9
DW  42, 89, 135, 179, 225, 271, 317, 360    ;12
DW  42, 90, 134, 178, 225, 271, 318, 360    ;12.1
DW  45, 90, 134, 180, 225, 271, 318, 361    ;12.2
DW  46, 90, 134, 180, 225, 271, 316, 362    ;12.3
DW  46, 90, 134, 179, 225, 270, 315, 363    ;12.4
DW  45, 91, 134, 179, 225, 270, 316, 361    ;12.5
DW  47, 90, 136, 179, 226, 270, 315, 361    ;12.6
DW  46, 91, 137, 179, 226, 271, 315, 362    ;12.7
DW  45, 91, 137, 178, 225, 271, 315, 361    ;12.8
DW  45, 90, 138, 178, 226, 269, 315, 360    ;12.9
DW  46, 89, 134, 177, 226, 271, 314, 360    ;13
DW  46, 90, 137, 180, 227, 273, 315, 361    ;13.1
DW  45, 90, 138, 178, 226, 271, 315, 359    ;13.2
DW  46, 89, 138, 179, 225, 271, 314, 359    ;13.3
DW  46, 90, 138, 177, 227, 271, 314, 360    ;13.4
DW  47, 90, 139, 178, 226, 271, 314, 360    ;13.5
DW  46, 88, 139, 177, 224, 270, 314, 362    ;13.6
DW  45, 91, 140, 178, 225, 272, 314, 361    ;13.7
DW  46, 90, 138, 176, 224, 271, 315, 363    ;13.8
DW  47, 90, 139, 176, 225, 271, 315, 361    ;13.9
DW  46, 90, 138, 176, 225, 271, 315, 363    ;14
DW  45, 90, 139, 176, 225, 273, 315, 362    ;14.1
DW  45, 90, 139, 175, 224, 272, 315, 363    ;14.2
DW  45, 90, 137, 173, 224, 272, 314, 362    ;14.3
DW  46, 91, 138, 175, 226, 271, 314, 362    ;14.4
DW  46, 91, 139, 176, 225, 271, 314, 360    ;14.5
DW  45, 90, 138, 178, 224, 271, 315, 360    ;14.6
DW  46, 88, 138, 178, 225, 271, 314, 362    ;14.7
DW  46, 90, 138, 176, 226, 271, 314, 360    ;14.8
DW  47, 89, 138, 176, 226, 271, 315, 361    ;14.9
DW  47, 91, 138, 178, 226, 271, 315, 360    ;15
DW  47, 91, 138, 178, 226, 271, 315, 360    ;15.1
DW  46, 91, 139, 178, 227, 271, 314, 361    ;15.2
DW  45, 88, 138, 179, 226, 272, 314, 358    ;15.3
DW  46, 90, 139, 180, 226, 272, 314, 361    ;15.4
DW  47, 90, 139, 181, 226, 271, 314, 360    ;15.5
DW  46, 88, 138, 178, 225, 271, 315, 360    ;15.6
DW  46, 89, 139, 177, 225, 271, 315, 360    ;15.7
DW  46, 88, 138, 178, 226, 272, 316, 360    ;15.8
DW  46, 88, 138, 176, 226, 271, 315, 360    ;15.9
DW  45, 88, 136, 178, 227, 268, 315, 361    ;16
DW  45, 89, 138, 177, 226, 271, 315, 360    ;16.1
DW  45, 89, 138, 180, 225, 269, 315, 360    ;16.2
DW  46, 90, 137, 178, 225, 270, 315, 362    ;16.3
DW  46, 90, 138, 178, 226, 271, 315, 364    ;16.4
DW  47, 90, 138, 178, 226, 270, 314, 359    ;16.5
DW  46, 89, 138, 178, 226, 272, 314, 359    ;16.6
DW  46, 91, 137, 178, 226, 272, 315, 360    ;16.7
DW  47, 91, 137, 177, 226, 271, 315, 359    ;16.8
DW  45, 91, 137, 175, 226, 271, 315, 363    ;16.9
DW  44, 90, 135, 177, 225, 271, 316, 362    ;17
DW  45, 91, 139, 176, 226, 271, 316, 362    ;17.1
DW  47, 91, 138, 176, 226, 271, 316, 363    ;17.2
DW  47, 91, 139, 176, 226, 271, 315, 362    ;17.3
DW  46, 91, 137, 178, 226, 271, 315, 361    ;17.4
DW  45, 90, 137, 178, 227, 271, 315, 360    ;17.5
DW  45, 91, 137, 178, 226, 271, 315, 362    ;17.6
DW  44, 90, 137, 177, 225, 270, 315, 363    ;17.7
DW  46, 91, 137, 178, 226, 271, 316, 361    ;17.8
DW  47, 90, 136, 177, 227, 270, 317, 360    ;17.9
DW  42, 90, 138, 180, 224, 272, 318, 363    ;18

DOACL PROC
DLH1:   MOV DI,00H
	MOV CX,65H
	MOV AX,00H
DOLA0:  MOV WORD PTR DOAPA[DI],AX
	MOV WORD PTR DOAPA1[DI],AX
	MOV FATON[DI],AX
	ADD DI,02H
	LOOP DOLA0
	MOV DOAMX,AX
	MOV CX,03H
	MOV SI,00H
DOLOA:  MOV WORD PTR TXN[SI],AX
	ADD SI,02H
	LOOP DOLOA
	MOV SI,00H
	MOV DI,00H
DOLA2:  MOV AX,FANTF[SI]
	AND AH,80H
	CMP AH,00H
	JZ DOLA1
ED1:    MOV AX,FANTP[SI]
	CMP AX,0FFFFH
	JZ DOLA1
	MOV BX,AX
	AND BX,0FFFH
	CMP BX,0
	JZ DOLA1
	MOV DOAPA1[DI],AX
	MOV AX,FANTA[SI]
	MOV FATON[DI],AX
	ADD DI,02H
DOLA1:  ADD SI,02H
	CMP SI,200D
	JNC DK1K
	CMP FANTF[SI],00H
	JNZ DOLA2
DK1K:
      MOV DI,2
	MOV AX,DOAPA1[0]
	AND AX,3FH
DK12K:MOV BX,DOAPA1[DI]
	CMP BX,0
	JZ DK13K
	AND BX,3FH
	CMP AX,BX
	JNC DK11K
	XCHG AX,BX
DK11K:ADD DI,2
	CMP DI,200D
	JC DK12K
DK13K:MOV RUSLT[12],AL
	MOV SI,0
	MOV DI,0
DK16K:
	MOV BX,DOAPA1[SI]
	CMP BX,0
	JZ DK1
	CMP BX,0FFFFH
	JZ DK15K
	PUSH BX
	PUSH AX
	AND BX,3FH
	SUB AX,BX
	JNC DK14K
	NEG AX
DK14K:CMP AX,20
	POP AX
	POP BX
	JNC DK15K
;	CMP DI,0
;	JNZ DKQ1
;	MOV DX,FATON[SI]
;DKQ3: MOV FANTA[0],DX
	MOV DOAPA[DI],BX
	JMP DKQ4
;DKQ1:	MOV CX,FANTA[0]
;	MOV DX,FATON[SI]
;	SUB CX,DX
;	JNC DKQ2
;	NEG CX
;DKQ2:	CMP CX,32D
;	JNC DKQ3
;	JMP DK15K
DKQ4:	ADD DI,2
DK15K:ADD SI,2
	CMP SI,200D
	JC DK16K
DK1: 
      CMP DI,26D   ;4
	JNC DKJQ
;      CMP WORD PTR RUSLT[2],17A1H
;	JNZ NJLQ1
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
NJLQ1:	MOV AX,200H
	RET
DKJQ:       MOV DOAMX1,0
	  MOV DOAMX3,0
	  CMP ES:BYTE PTR[5],01H
	  JNZ BAD1
	  MOV DOAMX2,04H
	  JMP DOLAB
BAD1:     MOV DOAMX2,02H
DOLAB:  MOV BP,00H
	  MOV SI,00H
	  MOV AX,WORD PTR RUSLT[2]
	  CMP AX,WORD PTR FRES[SI]
	  JNC FES1
	  JMP FES
FES1:     CMP AX,CS:WORD PTR FRES[SI+2]
	  JNC FES2
	  JMP FES
FES2:     ADD SI,02H
	  CMP SI,0D2H ; 0A2H
	  JNC FES
	  INC BP
	  JMP FES1
FES:      NOP
DAB0:     MOV SI,00H
	MOV DI,00H
	MOV DOAMX1,00H
	MOV DOAMX3,00H
	MOV CX,65H
DAB1:   MOV DOAPA1[DI],00H
	ADD DI,02H
	LOOP DAB1
	MOV DI,00H
	MOV BX,00H
E2:     MOV AX,DOAPA[DI]
	TEST AX,1000H
	JZ E1
E11:    ADD DI,02H
	ADD BX,02H
	CMP DI,200D
	JNC DK2
	CMP DOAPA[DI],00H
	JNZ E2
DK2:  JMP E3
;     CMP BX,DI
;	JNZ E3
;	JMP E33
E1:     MOV DOAPA1[SI],AX
	ADD SI,02H
      ADD DI,02H
	CMP DI,200D
	JNC E3
	CMP DOAPA[DI],00H
	JNZ E2
E3:     CMP SI,8    ;02H
	JNC E4
	JMP E33
E4:
     CALL ARRY
	CALL ARANG
E5:     MOV CX,DOAPA1[SI]
	JMP E8
E33:    MOV DI,0
	MOV SI,0
B01:    MOV AX,DOAPA[DI]
	TEST AX,1000H
	JZ B0
	MOV DOAPA1[SI],AX
	ADD SI,02H
B0:     ADD DI,02H
	CMP DI,200D
	JNC E45
	CMP DOAPA[DI],00H
	JNZ B01
E45:    CMP SI,8  ;4
	JC E88
	JMP E4
E88:  MOV AX,200H
	RET
E8: 
     MOV DOAMX,CX
	MOV AX,CX
	AND AX,0E000H
	MOV TXN[0],AX
GGGF:	MOV CX,04H
	RCL AX,CL
	AND AX,07H
	MOV DX,AX
	CMP AX,7;05H
	JNZ DAL3
	MOV AX,00H
	JMP DAL4
DAL3:   INC AX
	RCR AX,CL
	AND AX,0E000H
DAL4:   MOV TXN[2],AX  ;R
	MOV AX,DX
	CMP AX,00H
	JNZ DAL1
	MOV AX,0E000H;A000H
	JMP DAL2
DAL1:   DEC AX
	RCR AX,CL
	AND AX,0E000H
DAL2:   MOV TXN[4],AX  ;L
	CALL FINA
	CMP SI,04H
	JNC B5
	MOV TXN[4],0AAH
	JMP DOLA7
B5:     CALL FINB
	MOV TXN[4],CX
DOLA7:  MOV AX,TXN[2]
	CALL FINA
	CMP SI,04H
	JNC H5
	MOV TXN[2],0AAH
	CMP TXN[4],0AAH
	JNZ L2
; CMP WORD PTR RUSLT[2],17A1H
;	JNZ NJLQ2
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
NJLQ2:	MOV AX,200H   ;ONLY ONE
	RET
	JMP DOLAC
L2:     MOV DX,TXN[4]
	AND DX,1FC0H
	JMP DOLAE
H5:   
      CALL FINB
K8:     MOV TXN[2],CX
	CMP TXN[4],0AAH
	JNZ DOLAA
	MOV DX,TXN[2]
	AND DX,1FC0H
	JMP DOLAD
DOLAA:  MOV AX,TXN[4]
	AND AX,1FC0H
	MOV DX,TXN[2]
	AND DX,1FC0H
	TEST AX,1000H
	JNZ C1
	TEST DX,1000H
	JNZ DE1
	CMP AX,DX
	JG CC1
	JB CC2
	JMP DOLAC
CC1:    JMP DE1
CC2:    JMP DOLAD
C1:     TEST DX,1000H
	JNZ C2
	JMP DOLAD
C2:     CMP AX,DX
	JG DE1
	JE YY1
	JMP DOLAD
YY1:    JMP DOLAC
DE1:    MOV DX,AX
DOLAE:
      MOV AX,DOAMX     ;L
MMM1:	AND AX,1FC0H
	MOV CX,06H
	SHR AX,CL
	TEST AX,40H
	JZ DOE1
	AND AX,3FH
	MOV AH,AL
	MOV AL,40H
	SUB AL,AH
	MOV AH,0
	MOV DOAMX3,55H
DOE1:        SHR DX,CL
	TEST DX,40H
	JZ C3
	AND DX,3FH
	PUSH AX
	MOV AL,40H
	SUB AL,DL
	MOV DL,AL
	POP AX
	  CMP DOAMX3,55H
	  JNZ K2
	SUB AX,DX
	JNC C4
	NEG AX
	JMP C4
K2:        ADD AX,DX
	JMP C4
C3:     SUB AX,DX
	JNC C4
	NEG AX
C4:       PUSH BX
	  PUSH AX
	  MOV AX,DOAMX
	  AND AX,0E000H
	  MOV CL,04H
	  RCL AX,CL
	  AND AX,07H
	  SHL AX,1
	  MOV DI,AX
	  MOV AX,BP
	  MOV CL,10H;0CH
	  MUL CL
	  MOV BX,AX
	  MOV CL,BYTE PTR XLI[BX+DI]
	  POP AX
	  MUL CL
	  MOV DX,00H
	  MOV CX,0AH
	  DIV CX
	  MOV DX,AX
C40:      MOV AX,DI
	  SHR AX,1
	  CMP AX,7 ;05H
	  JNZ ZLL1
	  MOV AX,WORD PTR DOATT[BX+DI-2]
	  JMP ZLL2
ZLL1:     CMP AX,00H
	  JNZ ZLLB
	  MOV AX,WORD PTR DOATT[BX+0EH] ;0AH
	  JMP ZLL2
ZLLB:     MOV AX, WORD PTR DOATT[BX+DI-2]
ZLL2:     ADD AX,DX
	  CMP AX,360D
	  JC ZDL
	  SUB AX,360D
ZDL:      CMP AX,353D
	  JNC NVM
	  CMP DI,0
	JZ NVM
	CMP DI,0EH
	JZ NVM
	  CMP AX,ZOUDT[DI+BX]
	  JC NVM
	  MOV AX,ZOUDT[DI+BX]
NVM:    POP BX
;	MOV BX,AX     ;
;	SUB AX,248D   ;
;	JNC VVVX  ;
;	NEG AX;
;VVVX: CMP AX,160D;  10D;
;	JNC VVVX1;
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
VVVX1:	  RET     
	
DOLAD:	
	MOV AX,DOAMX    ;R
	  MOV DOAMX3,00H
	AND AX,1FC0H
	MOV CX,06H
	SHR AX,CL
	TEST AX,40H
	JZ DOD1
	AND AX,3FH
	MOV AH,AL
	MOV AL,40H
	SUB AL,AH
	MOV AH,00
	MOV DOAMX3,55H
DOD1:        SHR DX,CL
	TEST DX,40H
	JZ C5
	AND DX,3FH
	PUSH AX
	MOV AL,40H
	SUB AL,DL
	MOV DL,AL
	POP AX
	CMP DOAMX3,55H
	JNZ H1
	SUB AX,DX
	JNC C6
	NEG AX
	JMP C6
H1:        ADD AX,DX
	JMP C6
C5:     SUB AX,DX
	JNC C6
	NEG AX
C6:       PUSH BX
	  PUSH AX
	  MOV AX,DOAMX
	  AND AX,0E000H
	  MOV CL,04H
	  RCL AX,CL
	  AND AX,07H
	  SHL AX,01H
	  MOV DI,AX
	  INC DI
	  MOV AX,BP
	  MOV CL,10H;0CH
	  MUL CL
	  MOV BX,AX
	  MOV CL,BYTE PTR XLI[BX+DI]
	  POP AX
	  MUL CL
	  MOV DX,00H
	  MOV CX,0AH
	  DIV CX
	  MOV DX,AX
C60:      MOV AX,DI
	  DEC AX
	  SHR AX,1
	  CMP AX,7 ;05H
	  JNZ ZLL3
	  DEC DI
	  MOV AX,WORD PTR DOATT[BX+DI]
	  JMP ZLL4
ZLL3:     DEC DI
	  MOV AX,WORD PTR DOATT[BX+DI]
ZLL4:     SUB AX,DX
	  JNC ZLLA
	  NEG AX
;         MOV CX,AX
;         MOV AX,360D
;         SUB AX,CX
ZLLA:     CMP AX,360D
	  JC ZLS
	  SUB AX,360D
	  JMP LVC
ZLS:  CMP DI,0
	JZ LVC
	CMP DI,0EH
	JZ LVC
	CMP AX,ZOUDT[DI+BX]
	  JNC LVC
	  MOV AX,ZOUDT[DI+BX]
LVC:    POP BX
;	MOV BX,AX;
;	SUB AX,248D
;	JNC YVVX
;	NEG AX
;YVVX: CMP AX,160D  ;10D
;	JNC YVVX1
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
;YVVX1:	  RET     
	  RET
DOLAC:
      MOV AX,DOAMX    ;E
	AND AX,0E000H
	MOV CL,04H
	RCL AX,CL
	AND AX,07H
;         CMP AX,07H ;5
;         JNZ ZLL5
;         MOV AX,337D
;         RET
ZLL5:     MOV DI,AX
	  SHL DI,1
	  MOV AX,BP
	  MOV CL,10H ;0CH
	  MUL CL
	  PUSH BX
	  MOV BX,AX
	  MOV AX,WORD PTR ZOUDT[BX+DI]
;         MOV CX,22D
;         SUB AX,CX
;         CMP AX,360D
;         JC ZSL
;         SUB AX,360D
ZSL:        POP BX
;	MOV BX,AX;
;	SUB AX,248D
;	JNC UVVX
;	NEG AX
;UVVX: CMP AX,160D    ;10D
;	JNC UVVX1
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
;UVVX1:	  RET     
		  RET
DOACL ENDP

BITEP PROC
	CALL DELET
	CALL DELET
	CALL DELET
	CALL DELET 
	  MOV DX,260H
	  MOV AL,0CH
	  OUT DX,AL
BIY1:        MOV AX,4000H
	MOV ES,AX
	MOV AL,ES:[0]
	CMP AL,00H
	JNZ BIT1Q    ;BIT1
	MOV AL,81H
	JMP BIT1P
BIT1Q:  MOV AL,82H;41H
BIT1P:  MOV RUSLT[0],AL
	  MOV AX,04000H;D000H
	  MOV ES,AX
;         MOV AX,ES:WORD PTR[08H]
;         MOV BX,ES:WORD PTR[0AH]
;         OR AL,BL
	MOV AL,ES:BYTE PTR[2]
	MOV RUSLT[1],AL
	CALL OUTP
	  CALL CLEAR
	RET
BIT1:   MOV CX,00H
	MOV SI,612H
	MOV BX,ES:WORD PTR[SI]
BITP2:  ADD SI,02H
	CMP SI,6D8H
	JGE BITP1
	MOV AX,ES:WORD PTR[SI]
	CMP AX,BX
	JC BITP1
	INC CX
	MOV BX,AX
	  JMP BITP2
BITP1:  MOV AX,ES:WORD PTR[SI-2]
	MOV BX,ES:WORD PTR[612H]
	  SUB AX,BX
	  MOV DX,00H
BITP3:  CMP CX,00H
	  JZ AG6
	  DIV CX
AG6:    SUB AX,140H
	JNC BIT3
	NEG AX
BIT3:   CMP AX,20H
	JBE BIT4
	MOV AL,82H;44H
	MOV RUSLT[0],AL
	  MOV AX,4000H;0D000H
	  MOV ES,AX
;         MOV AX,ES:WORD PTR[08H]
;         MOV BX,ES:WORD PTR[0AH]
;        OR AL,BL
	MOV AL,ES:BYTE PTR[2]
	  MOV RUSLT[1],AL
	CALL OUTP
	  CALL CLEAR
	RET
BIT4:   MOV CX,64H
	MOV DI,00H
	MOV BP,00H
	MOV SI,12H
BIT6:   MOV AX,ES:[SI]
	AND AX,8000H
	CMP AX,8000H
	JZ BIT5
BIT7:   ADD SI,02H
	LOOP BIT6
	JMP BIT8
BIT5:   MOV BX,ES:[SI+400H]
	AND BX,0E000H
	CMP BX,8000H
	JNC BIT9
	CMP DI,02H
	JGE BIT7
	MOV AX,SI
	MOV BYTE PTR T1[DI],AL
	INC DI
	CMP DI,02H
	JNZ BIT7
	  CMP BP,02H
	  JNZ BIT7
	JMP BIT8
BIT9:   CMP BP,02H
	JGE BIT7
	MOV AX,SI
	MOV BYTE PTR T2[BP],AL
	INC BP
	CMP BP,02H
	JNZ BIT7
	CMP DI,02H
	JNZ BIT7
BIT8:   MOV AH,00H
	MOV AL,BYTE PTR T1[0]
	MOV SI,AX
	MOV BX,ES:[SI+600H]
	MOV AL,BYTE PTR T1[1]
	MOV SI,AX
	MOV AX,ES:[SI+600H]
	SUB AX,BX
	PUSH AX
	MOV AH,00
	MOV AL,BYTE PTR T2[0]
	MOV SI,AX
	MOV BX,ES:[SI+600H]
	MOV AL,BYTE PTR T2[1]
	MOV SI,AX
	MOV AX,ES:[SI+600H]
	SUB AX,BX
	MOV BX,AX
	POP AX
	SUB AX,BX
	  JNC BT1
	  NEG AX
BT1:      CMP AX,05H
	JC BIT91
	  MOV AL,82H;45H
	MOV RUSLT[0],AL
	  MOV AX,4000H;0D000H
	  MOV ES,AX
;         MOV AX,ES:WORD PTR[08H]
;         MOV BX,ES:WORD PTR[0AH]
;         OR AL,BL
	MOV AL,ES:BYTE PTR[2]
	  MOV RUSLT[1],AL
	CALL OUTP
	  CALL CLEAR
	RET
BIT91:  MOV AL,82H;42H
	MOV RUSLT[0],AL
	  MOV AX,4000H;0D000H
	  MOV ES,AX
;         MOV AX,ES:WORD PTR[08H]
;         MOV BX,ES:WORD PTR[0AH]
;         OR AL,BL
	MOV AL,ES:BYTE PTR[2]
	  MOV RUSLT[1],AL
	CALL OUTP
	  CALL CLEAR
	RET
BITEP ENDP

CHTRN PROC
	PUSH DS
	MOV AX,ES
	MOV DX,00H
	SUB AX,4000H
	MOV CX,0A1H
	DIV CX
	MOV CX,40H
	MUL CX
	ADD AX,0A080H             ;?
	  CALL PAGED
;       MOV DS:WORD PTR[6],0  ;05555H
	POP DS
	RET
CHTRN ENDP
DIJZD PROC
	MOV BP,00H
	MOV KK,00H
DID1:   MOV AL,II
	ADD AL,KK
	CMP AL,MM
	JB DDI1
	JMP DID7
DDI1:   MOV JJ,AL
	MOV AH,0
	MOV AL,JJ
	MOV SI,AX
	SHL SI,1
	MOV AH,0
	MOV AL,KK
	MOV DI,AX
	SHL DI,1
	MOV AX,FANTA[SI]
	SUB AX,FANTA[DI]
	MOV TEMP,AX
	MOV LL,00H
DID2:   MOV BL,LL
	MOV BH,0
	SHL BX,1
	MOV AX,TOAL[BX]
	CMP AX,00
	JNZ DID3
	MOV AX,TEMP
	MOV TOAL[BX],AX
	SHR BX,1
	MOV NL[BX],01H
	MOV AX,BX
	MOV CL,3EH
	MUL CL
	MOV BP,AX
	MOV AH,00
	MOV AL,NL[BX]
	MOV CL,02H
	MUL CL
	ADD BP,AX
	MOV AL,KK
	MOV AH,JJ
	MOV DS:PADDT[BP-2],AL
	MOV DS:PADDT[BP-1],AH
	JMP DID4
DID3:   MOV AX,TEMP
	SUB AX,TOAL[BX]
	JNC DID5
	NEG AX
DID5:   MOV TOASCL,AX
	MOV DX,0
	MOV AX,TOAL[BX]
	MOV CL,0AH      ;0FH
	MUL CX
	CMP TOA3E8,00H
	  JZ D05
	  DIV TOA3E8
	CMP AX,0
	JNZ D05
	INC AX
D05:    MOV TOA05,1   ;AX
	MOV AX,TOASCL
	CMP AX,TOA05
	JBE DID6
	INC LL
	CMP LL,64D
	JGE DID4
	JMP DID2
DID6:   SHR BX,1
	INC NL[BX]
	SHL BX,1
	MOV AX,TOAL[BX]
	MOV CX,02H
	MOV DX,0
	NOP
	MOV TOAL[BX],AX
	SHR BX,1
	MOV AX,BX
	MOV CL,3EH
	MUL CL
	MOV BP,AX
	MOV AH,00H
	MOV AL,NL[BX]
	MOV CL,02H
	MUL CL
	ADD BP,AX
	MOV AL,KK
	MOV AH,JJ
	MOV DS:PADDT[BP-2],AL
	MOV DS:PADDT[BP-1],AH
DID4:   INC KK
	JMP DID1
DID7:   RET
DIJZD ENDP
DAV PROC
	MOV CX,23H
	MOV AX,0
	MOV SI,0
DAV1: MOV CFR[SI],AX
	MOV CPW[SI],AX
	MOV CPA[SI],AX
	MOV CTOA[SI],AX
	MOV CTON[SI],AX
	MOV CADDR[SI],AX
	ADD SI,2
	LOOP DAV1
	RET
DAV ENDP
DATVA PROC
       MOV CX,0                  ;
         MOV SI,0                ;
DAV3:     CMP CFR[SI],0          ;
         JZ DAV2                 ;
         INC CX                  ;
         ADD SI,2                ;
         CMP SI,64D              ;
         JC DAV3                 ;
DAV2:  CMP CX,3
	 JNC DAVT
	 MOV AX,0FFFFH
	 RET
DAVT:	 PUSH CX                  ;
       DEC CX                  ;
       MOV DI,00H                ;
       MOV DX,0                  ;
       PUSH BX                   ;
       MOV AX,CFR[DI]            ; 
       AND AX,0FFFH              ; 
DATAV1: ADD DI,02H               ; 
       MOV BX,CFR[DI]            ; 
       AND BX,0FFFH              ;
       ADD AX,BX                 ;
       JNC DATAV                 ;
       INC DX                    ; 
DATAV:  LOOP DATAV1              ;    
       POP BX                    ;
       POP CX                    ;   
       PUSH CX                   ;
       CMP CX,00H                ;  
         JZ D06                  ;
         DIV CX                  ;
D06:    PUSH AX                  ;
       MOV AX,CFR[0]             ; 
       AND AX,1000H              ;
       CMP AX,1000H              ;
       JNZ D067                  ;
       POP AX                    ;
       OR AX,1000H               ;
       JMP D077                  ;
D067:   POP AX                   ;   
D077:   MOV SI,0              
	MOV AX,CFR[0]
	AND AX,1FFFH
	MOV WORD PTR RUSLT[SI+2],AX
	SHL BX,1
	MOV AX,TOAL[BX]
	MOV WORD PTR RUSLT[SI+6],AX
       MOV DX,00H                 ;     
       POP CX                     ; 
       PUSH CX                    ;
	MOV DI,00H       
DUT1:   MOV AX,CPW[DI]
	AND AX,0FFFH
       MOV CPW[DI],AX             ;
       ADD DI,02H                 ;
       LOOP DUT1                  ; 
       POP CX                     ;
       PUSH CX                    ; 
       MOV DI,00H                 ;  
       MOV AX,00H                 ;
DATAV3: ADD AX,CPW[DI]            ;  
       JNC DATAV2                 ;
       INC DX                     ;
DATAV2: ADD DI,02H                ;
       LOOP DATAV3                ;
       POP CX                     ;  
       PUSH CX                    ;   
       CMP CX,00H                 ;     
         JZ D07                   ;  
         DIV CX                   ;
D07:    MOV WORD PTR RUSLT[SI+10],AX
       MOV DX,00H                 ;
       POP CX                     ;
       PUSH CX                    ;
       MOV DI,00H                 ; 
      MOV AL,BYTE PTR CPA[DI]     ;
       MOV AH,3FH                 ;
       AND AL,AH                  ; 
       MOV AH,00H                 ;
DATAV5: ADD DI,02H                ;
       MOV DL,BYTE PTR CPA[DI]    ;
       MOV DH,3FH                 ;
       AND DL,DH                  ;
       ADD AL,DL                  ;
       JNC DATAV4                 ;
       INC AH                     ;
DATAV4: LOOP DATAV5               ; 
       POP CX                     ;
       MOV DX,0                   ;  
       CMP CX,00H                 ; 
         JZ D08                   ;
         DIV CX                   ;
D08:    MOV RUSLT[SI+12],AL       ;
	RET
DATVA ENDP
GETDATA PROC
   	  MOV AX,0
	  MOV SI,0
	  MOV CX,33D
GDUI:      MOV DOUIT[SI],AL
	  INC SI
	  LOOP GDUI
	MOV SI,0
GDODU:   MOV TOAL[SI],AX
	ADD SI,02H
	CMP SI,0C8H
	JNZ GDODU
	CMP FANTC,20H
	JBE GDU1
	MOV FANTC,20H
GDU1: MOV CH,0
	MOV CL,FANTC
	MOV SI,0
	MOV CL,20H
	MOV DI,0
GDOUD1:  MOV AL,FANTN[DI]
	MOV DOUPN[SI],AL
	INC SI
GDOUD0:  INC DI
	CMP DI,CX
	JB GDOUD1
	PUSH CX
	MOV SI,0
	MOV AH,0
	MOV DI,0
GDOUD2:  MOV AL,DOUPN[DI]
	MOV BL,02H
	MUL BL
	MOV BX,AX
	MOV AX,FANTF[BX]
	MOV CFR[SI],AX
	MOV AX,FANTW[BX]
	MOV CPW[SI],AX
	MOV AX,FANTP[BX]
	MOV CPA[SI],AX
	MOV AX,FANTA[BX]
	MOV CTOA[SI],AX
	MOV AX,FATON[BX]
	MOV CTON[SI],AX
	INC DI
	ADD SI,02H
	LOOP GDOUD2
	POP CX
	MOV AL,0AAH
	MOV DI,00H
GDOUD3:  MOV DOUIT[DI],AL
	INC DI
	LOOP GDOUD3
	  MOV DOUIT[32],00
	MOV BL,55H
	MOV SI,0
	MOV DI,0
	CALL DUO1
	RET
GETDATA ENDP
DOUAN PROC
   	  MOV AX,0
	  MOV SI,0
	  MOV CX,33D
DUI:      MOV DOUIT[SI],AL
	  INC SI
	  LOOP DUI
	MOV SI,0
DODU:   MOV TOAL[SI],AX
	ADD SI,02H
	CMP SI,0C8H
	JNZ DODU
	CMP FANTC,20H
	JBE DU1
	MOV FANTC,20H
DU1: MOV CH,0
	MOV CL,FANTC
	MOV SI,0
	MOV CL,20H
	MOV DI,0
DOUD1:  MOV AL,FANTN[DI]
	MOV DOUPN[SI],AL
	INC SI
DOUD0:  INC DI
	CMP DI,CX
	JB DOUD1
	PUSH CX
	MOV SI,0
	MOV AH,0
	MOV DI,0
DOUD2:  MOV AL,DOUPN[DI]
	MOV BL,02H
	MUL BL
	MOV BX,AX
	MOV AX,ANSCD[BX]
	MOV CFR[SI],AX
	MOV AX,ANSCD[BX+200D]
	MOV CPW[SI],AX
	MOV AX,ANSCD[BX+400D]
	MOV CPA[SI],AX
	MOV AX,ANSCD[BX+600D]
	MOV CTOA[SI],AX
	MOV AX,ANSCD[BX+800D]
	MOV CTON[SI],AX
	INC DI
	ADD SI,02H
	LOOP DOUD2
	POP CX
	MOV AL,0AAH
	MOV DI,00H
DOUD3:  MOV DOUIT[DI],AL
	INC DI
	LOOP DOUD3
	  MOV DOUIT[32],00
	MOV BL,55H
	MOV SI,0
	MOV DI,0
DUO1:   MOV AX,CPW[SI]
	AND AX,0FFFH
	MOV CPW[SI],AX
	ADD SI,02H
	CMP CPW[SI],00H
	JNZ DUO1
	MOV SI,02H
DOUDA:  MOV AX,CPW[SI]
	PUSH SI
	PUSH AX
	MOV DOUIT[DI],BL
	INC CX
	INC DI
DOUD5:  SUB AX,CPW[SI+2]
	JNC DOUD4
	NEG AX
DOUD4:  CMP AX,05H
;        JG DOUD6
	INC CX
	MOV DOUIT[DI],BL
DOUD6:  INC DI
	ADD SI,02H
	POP AX
	PUSH AX
	CMP DOUIT[DI],00
	JNZ DOUD5
	POP AX
	POP SI
	CMP CX,03H
	JG DOUD7
	MOV BH,0AAH
	MOV DI,00H
DOUD9:  CMP DOUIT[DI],BH
	JZ DOUD8
	MOV DOUIT[DI],BH
DOUD8:  INC DI
	CMP DOUIT[DI],0
	JNZ DOUD9
	MOV CX,0
	ADD SI,02H
	  CMP SI,64D
	  JC DUI1
	  RET
DUI1:        MOV DI,SI
	  SHR DI,1
	JMP DOUDA
DOUD7:  MOV SI,0
	MOV BX,0
	MOV AH,0
DOUDZ:  MOV  SAPN[BX],AH
	INC BX
	CMP BX,33D
	JNZ DOUDZ
	MOV BX,0
DOUDC:CMP DOUIT[SI],55H
	JZ DOUDB
	INC SI
DOUDE:  CMP DOUIT[SI],00H
	JNZ DOUDC
	JMP DOUDD
DOUDB:  MOV AL,DOUPN[SI]
	MOV SAPN[BX],AL
	INC SI
	INC BX
	JMP DOUDE
DOUDD:  MOV BX,0
	MOV AX,0
	MOV DX,0
	MOV SI,0
DOUDF:  MOV BL,SAPN[SI]
	MOV BH,00H
	SHL BX,01H
	MOV DI,BX
	MOV BX,CFR[DI]
	AND BX,0FFFH
	ADD AX,BX
	JNC DOUDG
	INC DX
DOUDG:  INC SI
	CMP SAPN[SI],00
	JNZ DOUDF
	CMP CX,00H
	  JZ DG1
	  DIV CX
DG1:   PUSH AX
	MOV AX,CFR[0]
	AND AX,1000H
	CMP AX,1000H
	JNZ DG1G
	POP AX
	OR AX,1000H
	JMP DG2G
DG1G:   POP AX
DG2G:   MOV AX,CFR[0]
	  AND AX,1FFFH
	MOV DI,0        
	MOV WORD PTR RUSLT[DI+2],AX
	MOV DX,0
	MOV SI,0
	MOV AX,0
	MOV BX,0
DOUDI:  ADD AX,CPW[BX]
	  JNC DOUDH
	  INC DX
DOUDH:  ADD BX,02H
	  CMP CPW[BX],00H
	  JNZ DOUDI
	CMP CX,00H
	  JZ DG2
	  DIV CX
DG2:    MOV AX,CPW[0]
	  AND AX,0FFFH
	MOV WORD PTR RUSLT[DI+10],AX
	MOV DX,0
	MOV BX,0
	MOV SI,0
	MOV BL,SAPN[0]
	MOV AL,BYTE PTR CPA[BX]
	AND AL,3FH
DOUDK:  MOV BL,SAPN[SI]
	SHL BX,01H
	MOV AH,BYTE PTR CPA[BX]
	AND AH,3FH
	CMP AL,AH
	JNC DOUDJ
	XCHG AL,AH
DOUDJ:  INC SI
	CMP SAPN[SI],0
	JNZ DOUDK
	MOV AX,DX
	CMP CL,00H
	JZ DG3
	MOV CH,00
	  MOV DX,00H  
	  DIV CX
DG3:    MOV RUSLT[DI+12],AL
	MOV AL,03H
	MOV RUSLT[DI+1],AL
	MOV BX,0
	MOV AX,0
	MOV DX,0
;        PUSH CX
;        MOV CX,00H
;        MOV SI,02H
;        MOV BX,CTOA[SI]
;EL2:    ADD SI,02H
;        CMP SI,40H
;        JGE EL3
;        MOV AX,CTOA[SI]
;        CMP AX,BX
;        JC EL1
;        INC CX
;        MOV BX,AX
;          JMP EL2
;EL1:    MOV AX,CTOA[SI-2]
;        MOV BX,CTOA[2]
;          SUB AX,BX
;EL3:    CMP CX,00H
;          JZ DG4
;          DIV CX
;DG4:    POP CX
;        MOV WORD PTR RUSLT[6],AX
	MOV DI,0
	MOV CX,0
	MOV SI,0
DOUDL:  MOV BL,SAPN[SI+1]
	CMP BL,0
	JZ DOUDM
	MOV BH,0
	SHL BX,01H
	MOV AX,CTOA[BX]
	MOV BL,SAPN[SI]
	MOV BH,0
	SHL BX,01H
	SUB AX,CTOA[BX]
	MOV TOAL[DI],AX
	INC CX
	ADD DI,02H
	INC SI
	JMP DOUDL
DOUDM:  CALL DOUQP          ;EVERY TOAL FROM SMALL TO LARGE ARRYANG
	CMP WORD PTR RUSLT[6],10000D
	JNC DOM2        
      MOV DX,TOAMN      ;CALCULT PRI MIDELL VALUE AND TIL% 
	MOV AX,TOAMX
	CMP AX,DX
	  JNZ DM1
	  CALL READP
	CALL CLEAR
	  RET
DM1:      SUB AX,DX
	MOV DX,0
	MOV CX,64H
	MUL CX
	CMP WORD PTR RUSLT[6],00H
	  JZ DG5
	  DIV WORD PTR RUSLT[6]
DG5:    MOV RUSLT[32],AL
	CMP AL,04H
	JNC OOO1
	MOV RUSLT[32],4
	JMP DG5P
OOO1:   CMP AL,20H
	JC DG5P
	MOV RUSLT[32],1FH
DG5P:   MOV RUSLT[0],1BH
	CMP ES:BYTE PTR[12],01H
	JNZ DOM1
DOM2:     CALL READP
	CALL CLEAR
      MOV ES:BYTE PTR[0DH],00H
	PUSH AX
	MOV AL,49H
;       CALL DISPLAY
	POP AX    
	RET
DOM1:     CMP ANPUN,0AH
	  JNC DOM2
      CALL DOACL
	MOV BX,AX
	CMP AX,170H   ;200H
      JNC CD2
;	CMP AX,0
;	JNZ CD2Q
;	MOV AX,0FDH
;	OUT 21H,AL
;	INT 3
CD2Q:	  MOV WORD PTR RUSLT[4],AX
	CALL LPRI
	CMP CX,55H
	JNZ JHG1
	JMP CD2
JHG1:       MOV AL,ES:BYTE PTR[4]
	AND AL,080H
	CMP AL,080H
	JNZ DJAB1
DJ1I2:CMP ES:BYTE PTR[8],0
	JZ PADT1
TY2:    CALL RTRAN
	CMP AX,0AAH
	JZ PADT1
	JMP CD2
DJAB1:  CMP ES:BYTE PTR[0DH],01H
	JNZ PADT1
	JMP DJ1I2
PADT1:CMP ES:BYTE PTR[8],3
	JNC TY2
	CALL RTRAN    ;COMQ
	CMP AX,0AAH
	JNZ CD2
      CALL SCPR
JT2:        CALL STRUM
	  CALL OUTP
	  CALL CNSN
CD2:          CALL CLEAR
	  INC CHRAN
	  MOV ES:BYTE PTR[3],01H
;       MOV ES:BYTE PTR[6],66H
      MOV ES:BYTE PTR[0DH],00H    
	MOV CX,00
	  MOV DI,00
DOUDT:    MOV AL,DOUIT[DI]
	  CMP AL,0AAH
	  JNZ DOUDS
	  INC CX
DOUDS:  INC DI
	CMP DOUIT[DI],00H
	JNZ DOUDT
	CMP CX,04H
	MOV CX,21H
	MOV DI,00H
EGI2:   MOV CFR[DI],00H
	MOV CPW[DI],00H
	MOV CPA[DI],00H
	MOV CTOA[DI],00H
	MOV CTON[DI],00H
	ADD DI,02H
	LOOP EGI2
	NOP
	  PUSH AX
	  MOV AL,46H
;         CALL DISPLAY
	  POP AX
	RET
DOUDU:  MOV AL,SANCC
	MOV AH,00
	MOV BL,02H
	MUL BL
	MOV SI,AX
	MOV DI,00H
DOUDX:  MOV AL,DOUIT[DI]
	CMP AL,0AAH
	JZ DOUDW
	JMP DOUDY
	INC DI
	CMP DOUIT[DI],00
	JNZ DOUDX
	  PUSH AX
	  MOV AL,41H
;         CALL DISPLAY
	  POP AX
	RET
DOUDW:  MOV BX,DI
	SHL BX,01H
	MOV AX,CFR[BX]
	MOV SANCF[SI],AX
	MOV AX,CPW[BX]
	MOV SANCP[SI],AX
	MOV AX,CPA[BX]
	MOV SANCA[SI],AX
	MOV AX,CTOA[BX]
	MOV SANCT[SI],AX
	MOV AX,CTON[BX]
	MOV SACTN[SI],AX
	INC SANCC
DOUDY:  INC DI
	  CMP DI,32D
	  JNC D1D
	CMP DOUIT[DI],00H
	JNZ DOUDX
D1D:     NOP
	NOP
	NOP
	NOP
;         PUSH AX
;         MOV AL,42H
;         CALL DISPLAY
;         POP AX
	RET
DOUAN ENDP
AGIAN PROC
	MOV AH,00H
	MOV CX,0
AGIL1:  MOV AL,SANCC
	MOV SI,AX
	DEC SI
AGI3:   MOV DX,SI
	MOV DI,SI
AGI2:   MOV DX,DI
	SHL DI,01H
	MOV AX,SACTN[DI]
	MOV BX,SACTN[DI-2]
	CMP AX,BX
	JG AGI1
	JB AGI2G
	MOV AX,SANCT[DI]
	MOV BX,SANCT[DI-2]
	CMP AX,BX
	JNC AGI1
AGI2G:  MOV AX,SANCT[DI]
	XCHG AX,SANCT[DI-2]
	MOV SANCT[DI],AX
	MOV AX,SANCF[DI]
	XCHG AX,SANCF[DI-2]
	MOV SANCF[DI],AX
	MOV AX,SANCP[DI]
	XCHG AX,SANCP[DI-2]
	MOV SANCP[DI],AX
	MOV AX,SANCA[DI]
	XCHG AX,SANCA[DI-2]
	MOV SANCA[DI],AX
	MOV AX,SACTN[DI]
	XCHG AX,SACTN[DI-2]
	MOV SACTN[DI],AX
AGI1:   MOV DI,DX
	DEC DI
	CMP DI,CX
	JG AGI2
	CMP DX,SI
	JZ AGI4
	INC CX
	JMP AGI3
AGI4:   MOV CH,00H
	  MOV CL,SANCC
	  CMP CL,64H
	  JBE FAP1
	  MOV CL,64H
FAP1:     MOV SI,00H
FAP2:     MOV AX,SANCF[SI]
	  MOV FANTF[SI],AX
	  MOV AX,SANCA[SI]
	  MOV FANTP[SI],AX
	MOV AX,SANCT[SI]
	MOV FANTA[SI],AX
	  ADD SI,02H
	  LOOP FAP2
	  MOV AL,SANCC
	CMP SANCC,20H
	JBE AG41
	MOV AL,20H
	MOV SANCC,20H
AG41:   MOV FANTC,AL
	MOV CX,50D
	MOV SI,0
	MOV AX,0
ZER1:   MOV WORD PTR NL[SI],AX
	ADD SI,02H
	LOOP ZER1
	MOV CX,100D
	MOV SI,00H
ZER2:   MOV TOAL[SI],AX
	ADD SI,02H
	LOOP ZER2
	MOV CX,1984D
	MOV SI,0
ZER3:   MOV WORD PTR PADDT[SI],AX
	ADD SI,02H
	LOOP ZER3
	MOV CX,16D
	MOV SI,0
ZER4:   MOV WORD PTR SAPN[SI],AX
	ADD SI,02H
	LOOP ZER4
	MOV TOAPN,0
	MOV CHRAN,0
	MOV CX,50D
	MOV SI,0
	MOV AX,0
AGI5:   MOV WORD PTR FANTN[SI],AX
	ADD SI,02H
	LOOP AGI5
	MOV SI,0
	MOV CX,10H
AGI5A:  MOV WORD PTR TOAIT[SI],AX
	ADD SI,02H
	LOOP AGI5A
	MOV SI,0
	MOV CX,100D
AGI6:   MOV FANTA[SI],AX
	ADD SI,02H
	LOOP AGI6
	MOV CX,0
	  MOV CL,SANCC
	  MOV AL,0AAH
	MOV DI,0
AGI7:   MOV TOAIT[DI],AL
	INC DI
	LOOP AGI7
	MOV CH,00H
	MOV CL,SANCC
	MOV DI,0
	MOV SI,0
AGI88:  MOV AX,SANCT[DI]
	MOV FANTA[SI],AX
	MOV AX,SACTN[DI]
	MOV FATON[SI],AX
	ADD DI,02H
	ADD SI,02H
	LOOP AGI88
	MOV II,01
	MOV  AL,SANCC
	MOV MM,AL
AGI26:  CALL DIJZD
	MOV BX,0
	MOV AH,0
	MOV AL,SANCC
	MOV SI,AX
	DEC SI
	SHL SI,01H
	MOV AX,FANTA[SI]
	MOV CX,FANTA[0]
	CMP AX,CX
	JNC AGLL1

	MOV SI,02H
AGLL3:  MOV AX,FANTA[SI]
	CMP  AX,CX
	JC AGLL2
	ADD SI,02H
	CMP SI,62D
	JNZ AGLL3
	MOV AX,FANTA[60]
	JMP AGLL1
AGLL2:  MOV AX,FANTA[SI-2]
AGLL1:        SUB AX,CX
	MOV TOAON,AX
AGI10:  SHL BX,1
	MOV CX,TOAL[BX]
	SHR BX,1
	CMP CX,20H
	JC AGI8
	MOV AX,TOAON
	MOV DX,0
	DIV CX
	MOV CH,0
	MOV CL,00D
	MUL CL
	MOV CL,100D
	MOV CH,00
	  MOV DX,00
	  DIV CX
	CMP NL[BX],AL
	JGE AGI9
AGI8:   INC BX
	CMP NL[BX],00H
	JNZ AGI10
	JMP AGI23
AGI9:   MOV CWI,0
	MOV CX,3EH
	MOV AX,BX
	MUL CX
	MOV BP,AX
	MOV PADAD,AX
	INC BP
	MOV AL,PADDT[BP]
DJANB:  CMP AL,PADDT[BP+1]
	JNZ DJAN9
DJANL:  INC CWI
	CMP CWI,04H
	JB JAN1
	JMP AGI99
JAN1:   ADD BP,02H
	CMP WORD PTR PADDT[BP],00H
	JZ DJANH
	MOV AL,PADDT[BP]
	JMP DJANB
DJANH:  CMP CWI,04H
	JGE AGI99
	MOV AX,PADAD
	MOV CWI,0
	ADD AX,02H
	MOV PADAD,AX
	MOV BP,AX
	INC BP
	CMP PADDT[BP],00H
	JNZ DJNA3
	JMP AGI8
DJNA3:  MOV AL,PADDT[BP]
	JMP DJANB
DJAN9:  MOV ADDRR,BP
DJANK:  ADD BP,02H
	CMP WORD PTR PADDT[BP],00H
	JZ DJANJ
	CMP AL,PADDT[BP+1]
	JNZ DJANK
	JMP DJANL
DJANJ: MOV BP,ADDRR
DJANM: SUB BP,02H
	JC DJANH
	CMP BP,PADAD
	JC DJANH
	CMP AL,PADDT[BP-1]
	JNZ DJANM
	INC CWI
	CMP CWI,04H
	JC DNJ1
	JMP AGI99
DNJ1:   MOV AL,PADDT[BP]
	JMP DJANB
AGI99:  MOV AX,BX
	MOV NL[BX],00H
	INC CHRAN
	MOV CL,3EH
	MUL CL
	MOV BP,AX
	PUSH BX
	PUSH BP
	MOV DI,00H
	MOV CX,00H
DJAN3: MOV AH,00
	MOV AL,DS:PADDT[BP]
	MOV BX,AX
	MOV AL,CHRAN
	CMP TOAIT[BX],AL
	JZ AGI11
	CMP TOAIT[BX],0AAH
	JNZ AGI11
	MOV TOAIT[BX],AL
	MOV SAPN[DI],BL
	INC DI
	INC CX
	INC TOAPN
AGI11:  INC BP
	MOV AL,PADDT[BP]
	CMP AL,0
	JNZ DJAN3
	CMP PADDT[BP+1],0
	JNZ DJAN3
	POP BP
	POP BX
	PUSH BX
	SHL BX,1
	MOV AX,TOAL[BX]
	SHR BX,1
AI6:    MOV WORD PTR RUSLT[6],AX
AI6P:   MOV AX,0
	MOV CX,00H
	MOV SI,0
	MOV DI,0
	MOV DX,0
	MOV BH,0
AGI13:  MOV BX,SANCF[DI]
	AND BX,0FFFH
	CMP BX,00H
	JZ ABL1
	ADD AX,BX
	JNC BL3
	INC DX
BL3:    INC CX
	ADD DI,02H
	JMP AGI13
ABL1:   NOP
	NOP
	NOP
	PUSH CX
	CMP CX,00H
	  JZ DG6
	  DIV CX
DG6:   PUSH AX
	MOV AX,SANCF[0]
	AND AX,1000H
	CMP AX,1000H
	JNZ DG66
	POP AX
	OR AX,1000H
	JMP DG67
DG66:   POP AX
DG67:   MOV WORD PTR RUSLT[2],AX
	MOV DI,0
	MOV AX,SANCF[DI]
	AND AX,0FFFH
FL2:    ADD DI,02H
	MOV DX,SANCF[DI]
	AND DX,0FFFH
	CMP DX,00H
	JZ AGI15
	CMP AX,DX
	JNC FL2
	MOV AX,DX
	JMP FL2
AGI15:  MOV FMAX,AX
	MOV DI,00
	MOV AX,SANCF[DI]
	AND AX,0FFFH
FL3:    ADD DI,02H
	MOV DX,SANCF[DI]
	AND DX,0FFFH
	CMP DX,00H
	JZ AGI17
	CMP AX,DX
	JC FL3
	MOV AX,DX
	JMP FL3
AGI17:  MOV FMIN,AX
	MOV AX,FMAX
	SUB AX,FMIN
	  CMP AX,167D
	  JC NPAG
	  MOV AX,160D
NPAG:     PUSH BX
	  MOV BX,SANCF[0]
	  AND BX,1000H
	  CMP BX,1000H
	  JNZ NPA
	  OR AX,1000H
NPA:      POP BX
	MOV WORD PTR RUSLT[8],AX
	CMP T34,0505H
	JNZ XCB5
	MOV RUSLT[1],6
	JMP XCB6
XCB5:   MOV RUSLT[1],04H
XCB6:   POP CX
	MOV AX,0
	PUSH CX
	MOV DI,0
	MOV DX,0
AIG1:   MOV AX,SANCP[DI]
	AND AX,0FFFH
	MOV SANCP[DI],AX
	ADD DI,02H
	CMP DI,0C8H
	JNZ AIG1
	MOV DI,0
	MOV AX,0
AGI19:  MOV BL,SAPN[DI]
	MOV BH,00H
	SHL BX,1
	ADD AX,SANCP[BX]
	JNC AGI20
	INC DX
AGI20:  INC DI
	LOOP AGI19
	POP CX
	PUSH CX
	CMP CX,00H
	JZ DG7
	DIV CX
DG7:    MOV WORD PTR RUSLT[10],AX
	MOV DI,0
	MOV BL,SAPN[DI]
	MOV BH,0
	SHL BX,1
	MOV AL,BYTE PTR SANCA[BX]
	MOV AH,3FH
	AND AL,AH
	MOV AH,0
AGI22:  INC DI
	MOV BL,SAPN[DI]
	SHL BL,1
	MOV DL,BYTE PTR SANCA[BX]
	MOV DH,3FH
	AND DL,DH
	ADD AL,DL
	JNC AGI21
	INC AH
AGI21:  LOOP AGI22
	POP CX
	MOV DX,0
	CMP CX,00H
	JZ DG8
	DIV CX
DG8:    MOV INJDT,0AAH
	  MOV RUSLT[12],AL
	CALL DOACL
	CMP AX,170H   ;200H
	JC FDSO
	JMP C1L 
FDSO:	MOV WORD PTR RUSLT[4],AX
	MOV RUSLT[0],1BH
	 MOV AX,AGACN[0]
	 MOV ES,AX
       MOV AL,ES:BYTE PTR[4]
	AND AL,080H
	CMP AL,080H
	JNZ JJD1N
JDAI2:CMP ES:BYTE PTR[8],0
	JZ JPAD1A
TY3:    CALL RTRAN
	CMP AX,0AAH
	JZ JPAD1A
	JMP C1L
JJD1N:  CMP ES:BYTE PTR[0DH],01H
	JNZ JPAD1A
	JMP JDAI2
JPAD1A:CMP ES:BYTE PTR[8],3
	JNC TY3
	CALL RTRAN    ;COMQ
	CMP AX,0AAH
	JZ BBGK
	JMP C1L
BBGK:	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	MOV DI,0
NETX2:CMP ES:BYTE PTR[DI+1],04H
	JNC C3C4
	JMP NETXPP  ;3                 ;JNZ NETX
C3C4:	MOV AX,WORD PTR RUSLT[2]
	SUB AX,ES:WORD PTR[DI+2]
	JNC GA1
	NEG AX
GA1:    CMP AX,167D
	JC C3C5
	JMP NETXPP
C3C5: CMP RUSLT[1],4
	JC C3C5Q
	POP ES
	JMP C1L
;	JMP NETXPP   
C3C5Q:     CMP ES:BYTE PTR[DI+1],6H
	JZ GASQ
	MOV CX,15D
	JMP GASQ1
GASQ:	MOV CX,250D
GASQ1:	MOV AX,ES:WORD PTR[DI+6]
	MOV DX,0
	MUL CX
	MOV CX,3E8H
	DIV CX
	MOV PRIBC,AX
	CMP PRIBC,0
	JNZ GASQ2
	INC PRIBC
GASQ2:MOV AX,WORD PTR RUSLT[6]
	MOV BX,ES:WORD PTR[DI+6]
	MOV DX,0
	CMP AX,BX
	JNC GASQ3
	XCHG AX,BX
GASQ3:	PUSH AX
	CMP BX,0
	JZ GASQ5
	DIV BX
	CMP AX,0
	JZ GASQ5
	CMP AX,2
	JC GASQ5
	MOV CX,PRIBC
	MUL CX
	MOV PRIBC,AX
GASQ5:POP AX
	CMP DX,PRIBC
	JBE GASQ6
	SUB BX,DX
	CMP BX,PRIBC
	JG NETXPP
GASQ6:CMP ES:BYTE PTR[DI+42],1DH
	JZ C3L3
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ C3L3
	POP ES
	JMP C1L
C3L3:
	MOV AL,ES:BYTE PTR[DI+40]
	MOV RUSLT[40],AL
	MOV ES:WORD PTR[41],0
	MOV AL,ES:BYTE PTR[DI+35]
	MOV RUSLT[35],AL
	POP ES
	CALL OUTP
	JMP C1L
NETXPP:	  ADD DI,34H  ;2CH
	CMP ES:WORD PTR[DI],0
	JZ NETX3
	CMP DI,1130H
	JNC NETX3
	JMP NETX2
NETX3:POP ES
	CMP WORD PTR RUSLT[6],2500D
	JNC C1L
      CALL SCPR
	  CMP RUSLT[0],00
	  JNZ C2L
	  MOV INJDT,0BBH
	  JMP C1L
C2L:    CALL STRUM
 	CALL OUTP
	  CALL CNSN
C1L:    CALL CLEAR
	MOV SI,00H
CL2:    MOV AX,AGACN[SI]
	CMP AX,00H
	JZ CL1
	MOV ES,AX
	MOV ES:BYTE PTR[3],01H
	  MOV ES:BYTE PTR[0DH],00H
	ADD SI,02H
	JMP CL2
CL1:    CMP TOA34,0505H
	JZ SLK1
	POP BX
SLK1:   NOP
	NOP
	NOP
	NOP
	RET
AGI23:  MOV AL,FANTC
	SUB AL,TOAPN
	CMP AL,0BH
	JNC AGI24
	JMP AGI25
	CMP CHRAN,00H
	JNZ AGI244
	JMP AGI24
AGI244: JMP AGI241
AGI24:  MOV SI,00H
	MOV CWI,00
AI22:   MOV AX,TOAL[SI]
	  CMP AX,20H
	  JNC AI2
	  ADD SI,02H
	  CMP TOAL[SI],00H
	  JNZ AI22
	  RET
AI2:    ADD SI ,02H
	CMP TOAL[SI],00H
	JZ AI1
	MOV BX,TOAL[SI]
	CMP BX,20H
	  JC AI2
	  CMP AX,BX
	JBE AI2
	MOV AX,BX
	JMP AI2
	NOP
	NOP
	NOP
	NOP
AI1:    PUSH AX
	MOV DX,00H
	MOV CL,01    ;16H
	MOV CH,00H
	MUL CX
	MOV CX,100D
	DIV CX
	MOV TOA05,AX
	POP AX
	MOV BX,AX
	MOV CX,AX
	MOV SI,00H
AI4:    MOV AX,TOAL[SI]
	MOV DX,0
	CMP CX,00H
	JZ AG1
	DIV CX
AG1:    CMP DX,TOA05
	JBE AI3
	MOV AX,BX
	SUB AX,DX
	CMP AX,TOA05
	JBE AI3
	INC CWI
	CMP CWI,02H
	JBE AI3
	JMP AGI241
AI3:    ADD SI,02H
	CMP TOAL[SI],00H
	JZ AI5
	JMP AI4
AI5:    MOV AX,BX
	INC CHRAN
	MOV TOA34,0505H
	JMP AI6
AGI241: INC II
	CMP II,02H
	JGE AGI52
	JMP AGI26
AGI52:MOV T34,0
	MOV DX,0
	MOV AX,BX
	MOV CX,35D
	MUL CX
	MOV CX,100D
	DIV CX
	MOV TOA05,AX
	MOV CX,BX
	MOV CWI,0
	MOV SI,0
XABC4:  MOV AX,TOAL[SI]
	MOV DX,0
	CMP CX,0
	JZ XABC
	DIV CX
XABC:   CMP DX,TOA05
	JBE XABCX
	MOV AX,BX
	SUB AX,DX
	CMP AX,TOA05
	JBE XABCD
	INC CWI
	JMP XABCD
XABCX:  ADD DX,CX
;       CMP CWI,4
;       JBE XABCD
;       RET
XABCD:MOV TOAL[SI],DX
	ADD SI,2
	CMP TOAL[SI],0
	JNZ XABC4
	CMP CWI,4
	JC XABC5
	RET
XABC5:MOV T34,0505H
	MOV TOA34,0505H
	MOV SI,0
	MOV DI,0
	MOV CX,1FH
XBC1:   MOV AX,FANTA[SI+2]
	SUB AX,FANTA[SI]
	MOV TOAL[DI],AX
	ADD DI,02H
	ADD SI,02H
	LOOP XBC1
	CALL DOUQP
	MOV DX,TOAMN
	MOV AX,TOAMX
	CMP AX,DX
	JNZ XCB8
	MOV T34,0
	MOV TOA34,0
	RET
XCB8:   SUB AX,DX
	MOV DX,0
	MOV CX,64H
	MUL CX
	CMP WORD PTR RUSLT[6],0
	JZ XCB2
	DIV WORD PTR RUSLT[6]
XCB2:   CMP AL,4
	JNC XCB3
	MOV AL,04H
	JMP XCB4
XCB3:   CMP AL,25H
	JC XCB4
	MOV AL,1FH
XCB4:   MOV RUSLT[32],AL
	CMP AL,0
	JNZ GGGFS
	MOV RUSLT[1],4
	JMP AI6P
GGGFS:	MOV RUSLT[1],06H
	JMP AI6P
;      CMP CHRAN,01H
;       NOP
	NOP
	NOP
	NOP
	RET
SLK2:   MOV SI,00H
L2Z:    CMP TOAIT[SI],0AAH
	JZ LZ1
LZ2:    INC SI
	CMP SI,21H
	JNZ L2Z
	RET
LZ1:    PUSH SI
	SHL SI,1
	MOV BX,SANCF[SI]
LZ0:    MOV AX,4000H
	MOV ES,AX
LZ5:    MOV SI,10H
	MOV AX,ES:WORD PTR[SI]
	AND AX,1FFFH
	SUB AX,BX
	JGE LZ3
	NEG AX
LZ3:    CMP AX,10H
	JBE LZ4
L3Z:    MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHNRT
	JB LZ5
	POP SI
	JMP LZ2
LZ4:    MOV SI,00H
LZ7:    MOV AX,ES:WORD PTR[SI+10H]
	AND AX,1FFFH
	SUB AX,BX
	JNC LZ80
	NEG AX
LZ80:   CMP AX,04H
	JC LZ6
LZ8:    ADD SI,02H
	CMP SI,0C8H
	JZ LZ9
	JMP LZ7
LZ6:    MOV AX,ES:WORD PTR[SI+210H]
	OR AX, 8000H
	MOV ES:[SI+210H],AX
	JMP LZ8
LZ9:    MOV ES:BYTE PTR[12],01
	JMP L3Z
AGI25:  RET
	CMP SANCF[0C8H],00H
	JNZ LB1

	NOP
	NOP
	NOP
	NOP
	RET
LB1:    MOV BX,WORD PTR RUSLT[6]
	MOV AX,BX
	MOV DX,0
	MOV CX,064H
	DIV CX
	MOV DX,AX
	MOV SI,00H
	MOV AX,WORD PTR SANCT[SI]
LB4:    ADD AX,BX
	PUSH AX
	SUB AX,WORD PTR SANCT[SI+2]
	JGE LB2
	NEG AX
LB2:    CMP AX,DX
	JG LB3
	POP AX
	ADD SI,02H
	CMP SI,400D
	JNZ LB4
	NOP
	NOP
	NOP
	NOP
	RET
LB3:    POP AX
	MOV BX,WORD PTR SANCF[SI+2]
	JMP LZ0
AGIAN ENDP
AGACS PROC
	MOV TOA05,00H
	MOV TOA34,00H
	MOV SI,00H
	MOV CX,51D
L5251:    CMP AGACN[SI],00
	  JZ L525
	  MOV AGACN[SI],0
	  ADD SI,02H
	  LOOP L5251
L525:     MOV CX,101D
	  MOV DI,0
AS4:    MOV SANCF[DI],0
	MOV SANCP[DI],0
	MOV SANCA[DI],0
	MOV SANCT[DI],0
	MOV SACTN[DI],0
	ADD DI,02H
	LOOP AS4
	  MOV CX,64H
	  MOV DI,00H
AS5:      MOV FANTF[DI],00H
	  MOV FANTP[DI],00H
	  ADD DI,02H
	  LOOP AS5
	MOV AX,4000H
	MOV ES,AX
P4:     MOV SI,00H
	MOV AL,ES:BYTE PTR[1]
	CMP AL,0AAH
	JZ P1
	JMP P2
P1:     CMP ES:BYTE PTR[0],00H
        JNZ P11
	  JMP P2
P11:;      CMP ES:BYTE PTR[3],00H          
;	JZ P3
;	JMP P3 ;;
	CMP ES:BYTE PTR[12],01H
	JZ P3
P2:     MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHT
	JC P4
	NOP
	NOP
	NOP
	NOP
	RET
P3:     MOV INJDT,00H
	  CMP ES:BYTE PTR[9],00H
	  JZ CACU1
	MOV AL,ES:BYTE PTR[9]
	MOV AH,00H
	CALL CACULATE
	CMP AX,0AAH
	JNZ P2  
CACU1:    PUSH ES
	MOV AX,ES
	MOV AGACN[SI],AX
	ADD SI,02H
;         CMP SI,100D
;         JC JJ1D
;         JMP APN51
JJ1D:    MOV ES:BYTE PTR[12],00H
	  MOV ES:BYTE PTR[3],01H
	MOV ES:BYTE PTR[6],66H
	CMP ES:BYTE PTR[0],00H
	  JZ APN5
;        JNZ JJ2
 ;       JMP APN5
JJ2:        MOV BX,ES:WORD PTR[10H]
	  AND BX,1FFFH
	  MOV DX,ES:WORD PTR[210H]
	  AND DX,0FFFH
	MOV AX,4000H
	MOV ES,AX
APN33:  CMP ES:BYTE PTR[0],00H
	JZ APN5
;	CMP ES:BYTE PTR[3],00H
;	JZ P5
	CMP ES:BYTE PTR[12],01H
	JNZ APN5
P5:     MOV AX,ES:WORD PTR[10H]
	AND AX,1FFFH
	SUB AX,BX
	JNC APN3
	NEG AX
APN3:   CMP AX,200D     ;167D
	JG APN5
	MOV AX,ES:WORD PTR[210H]
	  AND AX,0FFFH
	  SUB AX,DX
	  JNC TP1
	  NEG AX
TP1:      CMP AX,05H
	  JG APN5
	  CMP ES:BYTE PTR[9],00H
	    JZ CACU2
	    MOV AL,ES:BYTE PTR[9]
	    MOV AH,00H
	    CALL CACULATE
	    CMP AX,0AAH
	    JNZ APN5    
CACU2:    MOV AX,ES
	  MOV AGACN[SI],AX
	  MOV ES:BYTE PTR[12],00H
	  MOV ES:BYTE PTR[3],01H
	  ADD SI,02H
;           CMP SI,100D
;           JNC APN51
APN5:   MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHT
	JC APN33
APN51:  SHR SI,1
	MOV CX,SI
	CMP CX,01
	  JZ TP2
	  JMP TP3
TP2:    MOV AX,AGACN[0]
	MOV ES,AX
	MOV SI,0H
	MOV CH,00
	MOV CL,ES:BYTE PTR[0]
	MOV BP,00
TP6:    MOV AX,ES:WORD PTR[10H]
	AND AX,1FFFH
	  MOV BX,ES:WORD PTR[SI+10H]
	AND BX,1FFFH
	  SUB AX,BX
	JNC TP4
	NEG AX
TP4:    CMP AX,20D
	JC TP5
	INC BP
	CMP BP,15D
	JC TP5
	MOV AH,00
	MOV AL,ES:BYTE PTR[0]
	MOV CX,01
	JMP AG2
TP5:    ADD SI,02H
	LOOP TP6
	JMP IDT3
TP3:      MOV AX,100D
	MOV DX,0
	CMP CX,00H
	  JZ AG2
	  DIV CX
AG2:    MOV DX,AX
	MOV DI,0
	MOV SI,0
GL5:    MOV BP,0
	MOV BX,0
	MOV AX,AGACN[SI]
	CMP AX,0000H
	JNZ GL1
	JMP PN1
GL1:    MOV ES,AX
	MOV CH,00
	MOV CL,ES:[0]
GL4:    MOV AX,ES:WORD PTR[BP+210H]
	AND AX,8000H
	CMP AX,8000H
	JNZ GL2
	MOV AX,WORD PTR ES:[BP+10H]
;         AND AX,1FFFH
	MOV SANCF[DI],AX
AS1:      MOV AX,WORD PTR ES:[BP+210H]
	AND AX,0FFFH
	MOV SANCP[DI],AX
	MOV WORD PTR ES:[BP+210H],AX
	MOV AX,WORD PTR ES:[BP+410H]
	MOV SANCA[DI],AX
AS2:      MOV AX,WORD PTR ES:[BP+610H]
	MOV SANCT[DI],AX
	MOV AX,WORD PTR ES:[BP+810H]
	MOV SACTN[DI],AX
	ADD DI,02H
	INC SANCC
	INC BX
	CMP BX,DX
	JZ GL3
GL2:    ADD BP,02H
	LOOP GL4
GL3:    ADD SI,02H
	JMP GL5
PN1:    CMP SANCC,05H
	JNC NPN1
	JMP NPN5
NPN1:  PUSH AX 
;       MOV AL,33H
;        CALL DISPLAY
	 POP AX
NPN1P: CALL AGIAN
NPN1Q:  PUSH AX
	 MOV AL,34H
;        CALL DISPLAY
	 POP AX
	  CALL CLEAR
NPN5:   CMP INJDT,0AAH
	  JNZ IDT3
	POP ES
	  MOV ES:BYTE PTR[3],01H

	MOV ES:BYTE PTR[12],00H
	  MOV ES:BYTE PTR[0DH],00H
	JMP IDT1
IDT3:   CMP INJDT,0BBH
	  JZ IDT11
	  MOV SI,00
IDT2:   CMP AGACN[SI],00H
	JZ IDT11
	MOV AX,AGACN[SI]
	MOV ES,AX
	MOV ES:BYTE PTR[3],00H
	  MOV ES:BYTE PTR[12],01H
	ADD SI,02H
	JMP IDT2
IDT11:POP ES
IDT1:     MOV AX,00H
	MOV SI,00H
NPN12:  CMP AGACN[SI],00H
	JZ NPN11
	MOV AGACN[SI],AX
	ADD SI,02H
	  JMP NPN12
NPN11:  MOV CX,100D
	MOV SANCC,00
	MOV CHRAN,00
	MOV TOA34,00H
	MOV TOA05,00H
	MOV INJDT,00H
	  MOV DI,0
PPN:    MOV SANCF[DI],0
	MOV SANCP[DI],0
	MOV SANCA[DI],0
	MOV SANCT[DI],0
	MOV SACTN[DI],0
	ADD DI,02H
	LOOP PPN
	  MOV CX,64H
	  MOV DI,00H
AS3:      MOV FANTF[DI],00H
	  MOV FANTP[DI],00H
	  ADD DI,02H
	  LOOP AS3
	  MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	JMP P4
AGACS ENDP
LPRI PROC
	MOV AL,30H
	CALL DISPLAY

	MOV CX,0
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP WORD PTR RUSLT[6],0
	JNZ KJJ0
	JMP KETXPP
KJJ0:	MOV DI,0
KETX2:	CMP ES:BYTE PTR[DI+41],0AAH
	JNZ KJBV
	JMP KETXPP
KJBV:	CMP ES:BYTE PTR[DI+1],04H
	JNC K3C4
	JMP KETXPP                   ;JNZ NETX
K3C4:	MOV AX,WORD PTR RUSLT[2]
	SUB AX,ES:WORD PTR[DI+2]
	JNC KA1
	NEG AX
KA1:    CMP AX,167D
	JC K3C5
	JMP KETXPP
K3C5: NOP
K3C5Q:     CMP ES:BYTE PTR[DI+1],6H
	JZ KASQ
	MOV CX,15D
	JMP KASQ1
KASQ:	MOV CX,15    ;150D
KASQ1:	MOV AX,ES:WORD PTR[DI+6]
	MOV DX,0
	MUL CX
	MOV CX,3E8H
	DIV CX
	MOV PRIBC,AX
	CMP PRIBC,0
	JNZ KASQ2
	INC PRIBC
KASQ2:MOV AX,WORD PTR RUSLT[6]
	MOV BX,ES:WORD PTR[DI+6]
	MOV DX,0
	CMP AX,BX
	JNC KASQ3
	XCHG AX,BX
KASQ3:	PUSH AX
	CMP BX,0
	JZ KASQ5
	DIV BX
	CMP AX,0
	JZ KASQ5
	CMP AX,2
	JC KASQ5
	MOV CX,PRIBC
	MUL CX
	MOV PRIBC,AX
KASQ5:POP AX
	CMP DX,PRIBC
	JBE KASQ6
	SUB BX,DX
	CMP BX,PRIBC
	JG KETXPP
KASQ6:POP ES
	MOV CX,55H
	RET
KETXPP:	  ADD DI,34H  ;2CH
	CMP ES:WORD PTR[DI],0
	JZ KETX3
	CMP DI,3400H
	JNC KETX3
	JMP KETX2
KETX3:POP ES
	RET
LPRI ENDP
READP PROC
	NOP
	NOP
	NOP
	NOP
	MOV ES:BYTE PTR[12],01H
	CMP CHRAN,00H
	NOP
	NOP
	JMP REDB1
REDB0:  MOV CX,0
	MOV SI,00H
	MOV AH,00H
	MOV AL,FANTN[SI]
	MOV DI,AX
	SHL DI,1
	MOV BX,ANSCD[DI]
	AND BX,0FFFH
	INC SI
RED6:   MOV AH,00H
	MOV AL,FANTN[SI]
	MOV DI,CX
	SHL DI,1
	MOV AX,ANSCD[DI]
	AND AX,0FFFH
	CMP AX,BX
	JNZ RED0
RED5:   INC CX
	INC SI
	CMP SI,20H
	JNZ RED6
	CMP CX,1FH
	JB RED00
	JMP RED7
RED00:  MOV SI,00H
RED0:   CMP TOAIT[SI],0AAH
	JZ RED1
	INC SI
	CMP SI,20H
	JNZ RED0
	DEC SI
RED1:   MOV BH,00H
	MOV BL,FANTN[SI]
	SHL BX,1
	MOV AX,WORD PTR ANSCD[BX]
	AND AX,0FFFH
	MOV BX,AX
	MOV DI,00H
RED3:   MOV AX,ES: WORD PTR[DI+10H]
	AND AX,0FFFH
	CMP AX,BX
	JZ RED2
RED4:   ADD DI,02H
	CMP DI,0C8H
	JNZ RED3
	RET
RED2:   MOV AX,ES:WORD PTR[DI+210H]
	OR AX,8000H
	MOV ES:WORD PTR[DI+210H],AX
	JMP RED4
RED7:   MOV AX,WORD PTR RUSLT[6]
	MOV BX,AX
	MOV DX,00H
	MOV CX,64H
	DIV CX
	MOV DX,AX
	MOV SI,00H
REDA4:  CMP TOAIT[SI],0AAH
	JNZ REDA3
	INC SI
	CMP SI,21H
	JNZ REDA4
	RET
REDA3:  SHL SI,1
REDA1:  MOV AX,ES:WORD PTR[SI+610H]
RED88:  ADD AX,BX
REDA2:  PUSH AX
	SUB AX,ES:WORD PTR[SI+612H]
	JGE RED8
	NEG AX
RED8:   CMP AX,DX
	JG RED9
	POP AX
	ADD SI,02H
	CMP SI,0C8H
	JNZ REDA1
	RET
RED9:   MOV CX,ES:WORD PTR[SI+212H]
	OR CX,8000H
	MOV ES:WORD PTR[SI+212H],CX
	POP AX
	ADD SI,02H
	CMP SI,0C8H
	JNZ REDA22
	RET
REDA22: CMP ES:WORD PTR[SI+610H],AX
	JC REDA2
	JMP RED88
REDB1:  MOV SI,00H
	MOV AH,00H
	MOV AL,FANTN[SI]
	MOV DI,AX
	SHL DI,1
	MOV BX,ANSCD[DI]
	AND BX,0FFFH
REDB3:  MOV AX,ES:WORD PTR[SI+10H]
	AND AX,0FFFH
	SUB AX,BX
	JNC DL1
	NEG AX
DL1:    CMP AX,04H
	JC REDB2
REDB4:  ADD SI,02H
	CMP SI,0C8H
	JNZ REDB3
	NOP
	NOP
	NOP
	NOP
	RET
REDB2:  MOV AX,ES:WORD PTR[SI+210H]
	OR AX,8000H
	MOV ES:WORD PTR[SI+210H],AX
	JMP REDB4
READP ENDP
STRUM PROC
	INC NUMB
OLOP:   MOV AL,NUMB
STRUM1: MOV AH,00H
	MOV WORD PTR RUSLT[40],AX
;	CMP WORD PTR RUSLT[4],0
;	JNZ KKKL
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
KKKL:	DEC AL
	MOV CL,34H   ;2CH     ;2AH
	MUL CL
	MOV DI,AX
	MOV CL,2AH
	LEA AX,RUSLT[0]
	MOV SI,AX
	MOV CH,00H
	  PUSH ES
	MOV AX,3600H
	MOV ES,AX
	REPNZ MOVSB
	POP ES
	RET
STRUM ENDP

SRUM1: MOV AH,00H
	MOV WORD PTR RUSLT[40],AX
	MOV AL,E9       ;DEC AL
	MOV CL,34H      ;2CH     ;2AH
	MUL CL
	MOV DI,AX
	MOV CL,2AH
	LEA AX,RUSLT[0]
	MOV SI,AX
	MOV CH,00H
      PUSH ES
	MOV AX,9000H
	MOV ES,AX
	REPNZ MOVSB
	POP ES
	INC E9
	CMP E9,10D
	JNZ E99
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
E99:    RET
CNSN PROC
	MOV AL,ES:BYTE PTR[8]
	MOV CHNUM,AL
	INC CHNUM
	MOV AL,CHNUM
II78:   MOV ES:BYTE PTR[8],AL
	  MOV AL,NUMB
	CMP ES:BYTE PTR [9],00H
	JNZ DJ1
	MOV ES:BYTE PTR [9],AL
	JMP DJ3
DJ1:    CMP ES:BYTE PTR[10],00H
	JNZ DJZ
	MOV ES:BYTE PTR[10],AL
	JMP DJ3
DJZ:    CMP ES:BYTE PTR[11],00H
	JNZ DJ3
	MOV ES:BYTE PTR[11],AL
DJ3:  NOP
	RET
CNSN ENDP
CNSN1 PROC
	MOV AL,01H
	CMP ES:BYTE PTR[10],00H
	JZ CNSN2
	INC AL
	CMP ES:BYTE PTR[11],00H
	JZ CNSN2
	INC AL
CNSN2:MOV ES:BYTE PTR[8],AL
	RET
CNSN1 ENDP
SCPR PROC
	NOP
	MOV EPA,00H
	MOV SI,00H
SPC4:   MOV AX,CPA[SI]
	AND AX,03FH
	  ADD SI,2
SPC1:   MOV BX,CPA[SI]
	AND BX,03FH
	  CMP BX,0
	  JNZ SPC1X
	  JMP SPC5
SPC1X:    PUSH AX
	SUB AX,BX
	JNC SPC2
	NEG AX
SPC2:   CMP AX,03H
	JNC SPC3
	INC EPA
SPC3:   ADD SI,02
	  POP AX  
	JMP SPC1
SPC5:   SHR SI,01H
	MOV CL,50H
	MOV AX,SI
	MUL CL
	MOV CX,64H
	MOV DX,0
	DIV CX
	CMP EPA,AL
	JBE SPC6
	MOV AL,01H
	MOV RUSLT[35],AL
	MOV ES:BYTE PTR[5],AL
	RET
SPC6:   MOV AL,02H
	MOV RUSLT[35],AL
	  MOV ES:BYTE PTR[5],AL
	RET
SCPR ENDP
OUTP PROC
;	RET
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
	 MOV AL,43H
	 CALL DISPLAY
       PUSH DS
       MOV AX,3000H
       MOV DS,AX
       CMP DS:RUSLT[0],1BH
       JZ IPO01
	 JMP IPO0
IPO01:       CMP DS:BYTE PTR RUSLT[1],6H
       JNZ IPO0
	CMP WORD PTR RUSLT[6],2500D
	JC IPOG
	POP DS
	RET
IPOG: CMP WORD PTR RUSLT[2],0
	JNZ GGGT1
    	MOV AL,0FDH
	OUT 21H,AL
	INT 3
GGGT1:   CMP DS:BYTE PTR RUSLT[32],0D
       JNZ IPO0
	MOV DS:BYTE PTR RUSLT[1],4
IPO0: CMP DS:RUSLT[0],1CH
	JNZ IPO09
	CMP RUSLT[35],4
	JNZ IPOU7
	CMP WORD PTR RUSLT[33],100D
	JC IPO09
	MOV WORD PTR RUSLT[33],100D
	MOV WORD PTR RUSLT[36],600D
	JMP IPO09   ;8
IPOU7:CMP RUSLT[35],6
	JNZ IPO09
	CMP WORD PTR RUSLT[33],3000D
	JC IPO09
IPO08:	MOV RUSLT[35],1
	MOV WORD PTR RUSLT[33],0
	MOV WORD PTR RUSLT[36],0
IPO09:
	   POP DS    
	MOV DX,0AA6H
	  MOV AL,0DH  ;F2H                 ; 0DH
	  OUT DX,AL
	HLT
	NOP
	NOP
	NOP
	NOP
	NOP
 
OUT1:   MOV AL,0CH  ;F3H                           ;0CH
	  MOV DX,0AA6H
	OUT DX,AL
;		CMP DS:RUSLT[0],0C7H
;	JNZ IPO0
;       MOV AL,0FDH
;       OUT 21H,AL
;       INT 3
	 MOV AL,44H
	 CALL DISPLAY
	RET
OUTP ENDP
AA11:   INT 3


ARRY PROC
	CMP SI,4H
	JNC AR1
	RET
AR1:    SHR SI,01H
	MOV DOAMX1,SI
	MOV AH,0
	MOV CX,0
DA01: MOV AX,DOAMX1
	MOV SI,AX
	DEC SI
DA03:   MOV DX,SI
	MOV DI,SI
DA02:   MOV DX,DI
	SHL DI,01H
	MOV AX,DOAPA1[DI]
	PUSH AX
	AND AX,1FC0H
	MOV BX,DOAPA1[DI-2]
	PUSH BX
	AND BX,1FC0H
	CMP AX,BX
	POP BX
	POP AX
	JNC DA04
	XCHG AX,DOAPA1[DI-2]
	MOV DOAPA1[DI],BX
DA04: MOV DI,DX
	DEC DI
	CMP DI,CX
	JG DA02
	CMP DX,SI
	JZ DA05
	INC CX
	JMP DA03
DA05:   RET
ARRY ENDP
ARANG PROC
	MOV WORD PTR MNCON[0],0
	MOV WORD PTR MNCON[2],0
	MOV WORD PTR MNCON[4],0
	MOV CX,0
	MOV DI,0
	MOV SI,DOAMX1
	DEC SI
	SHL SI,1
;	CMP SI,2
;	JNZ LY4
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
LY4:	MOV WORD PTR MNCON[DI],SI
	MOV AX,DOAPA1[SI]
	AND AX,0FFC0H      ;0E000H   ;0FC0H
	MOV CL,1
	MOV MNCON[DI+2],CL
LY1:	SUB SI,2
	CMP SI,2
	JC LY2
	MOV DX,DOAPA1[SI]
	AND DX,0FFC0H      ;0E000H   ;0FC0H
	PUSH AX
	SUB AX,DX                   ;CMP AX,DX
	CMP AX,01C0H                   ;JZ LY35
	POP AX
	JC LY35
LY33:	MOV DOAMX1,SI
LY34:	SUB SI,2
	CMP SI,2
	JC LY3
	MOV DX,DOAPA1[SI]
	AND DX,0FFC0H      ;0E000H
	PUSH AX
	SUB AX,DX          ;CMP AX,DX
	CMP AX,01C0H       ;JNZ LY34
	POP AX
	JNC LY34
LY35:	INC CX
	CMP CX,2 ;4
	JC LY1             ;LY34
	MOV MNCON[DI+2],CL
	JMP LY2
LY3:	MOV MNCON[DI+2],CL
	ADD DI,3
	CMP DI,6
	JNC LY2
	MOV SI,DOAMX1
	JMP LY4
LY2:	MOV MNCON[DI+2],CL
	CMP MNCON[2],2   ;4
	JNC LY6
	CMP MNCON[5],2  ;4
	JNC LY5
	MOV AL,MNCON[2]
	CMP AL,MNCON[5]
	JNC LY6
LY5:	MOV SI,WORD PTR MNCON[3]
	JMP LY7
LY6: 
	MOV SI,WORD PTR MNCON[0]
LY7:	RET
ARANG ENDP 
FINA PROC
;       RET
	MOV DI,00H
	MOV CX,65H
B1Q:    MOV SANCP[DI],00H
	MOV DOAPA1[DI],00H
	ADD DI,02H
	LOOP B1Q
	MOV SI,00H
	MOV DI,00H
B2:     MOV DX,DOAPA[DI]
	AND DX,0E000H
	CMP AX,DX
	JZ B1
	ADD DI,02H
	CMP DI,200D
	JNC B4
	CMP DOAPA[DI],00H
	JNZ B2
	JMP B4
B1:     MOV BX,DOAPA[DI]
	MOV SANCP[SI],BX
	ADD SI,02H
	ADD DI,02H
	CMP DI,200D
	JNC B4
	CMP DOAPA[DI],00H
	JNZ B2
B4:     RET
FINA ENDP
FINB PROC
;       RET
	MOV SI,0
	MOV DI,0
	MOV BX,0
F2:     MOV AX,SANCP[DI]
	TEST AX,1000H
	JZ F1
F11:    ADD DI,02H
	ADD BX,02H
	CMP DI,200D
	JNC DL3
	CMP SANCP[DI],00H
	JNZ F2
DL3:    CMP BX,DI
	JNZ F3
	JMP F33
F1:     MOV DOAPA1[SI],AX
	ADD SI,02H
	ADD DI,02H
	CMP DI,200D
	JNC F3
	CMP SANCP[DI],00H
	JNZ F2
F3:     CMP SI,04   ;4H
	JNC F4
	JMP F33
F4:  
      CALL ARRY
	CALL ARANG
F5:     MOV CX,DOAPA1[SI]
	JMP F8
F33:    MOV DI,0
	MOV SI,0
F3B:    MOV AX,SANCP[DI]
	TEST AX,1000H
	JZ F3A
	MOV DOAPA1[SI],AX
	ADD SI,02H
F3A:    ADD DI,02H
	CMP DI,200D
	JNC F44
	CMP SANCP[DI],00H
	JNZ F3B
F44:    CMP SI,4
	JC F8
	JMP F4
F8:      RET
FINB ENDP
CNP PROC
;       RET
	MOV AX,4000H
	MOV ES,AX
	MOV BP,0
CPPN8:  MOV SI,0
	MOV AX,WORD PTR ES:[SI+10H]
	MOV CX,63H
	MOV PTON1,0
CPP2:   ADD SI,02H
	MOV BX,WORD PTR ES:[SI+10H]
	CMP AX,BX
	JZ CPP1
	MOV PTON1,BX
	OR BX,8000H
	MOV WORD PTR ES:[SI+10H],BX
	JMP CPN8
CPP1:   LOOP CPP2
CPN8:   MOV SI,0
	MOV AX,WORD PTR ES:[SI+10H]
	PUSH AX
	OR AX,8000H
	MOV WORD PTR ES:[SI+10H],AX
	MOV CX,63H
	POP AX
CP2:    ADD SI,02H
	MOV BX,WORD PTR ES:[SI+10H]
	CMP AX,BX
	JZ CP1
	CMP BX,0
	JZ CP1
	CMP BX,PTON1
	JZ CP1
	OR BX,8000H
	MOV WORD PTR ES:[SI+10H],BX
	JMP CP3
CP1:    LOOP CP2
CP3:    INC BP
	CMP BP,80H
	JBE CPN1
	RET
CPN1:   MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	JMP CPPN8
CNP ENDP
FFGN PROC
;       RET
FRGN0:  MOV FANTC,00H
	MOV BX,00H
	MOV SI,00H
	MOV AX,BP
	MOV ANPNC,AL
	MOV AX,00H
	MOV BP,0
	MOV CX,00H
FFG2:   MOV AX,DS:ANSCD[SI]
	AND AX,8000H
	CMP AX,8000H
	JZ FFG1
	ADD SI,02H
	MOV CX,SI
	SHR CX,1
	CMP CL,ANPNC
	JB FFG2
	JMP GF2
FFG1:   PUSH SI
	MOV AX,DS:ANSCD[SI]
	AND AX,0FFFH
	PUSH AX
	MOV DI,0
FFG4:   MOV DX,DS:ANSCD[DI]
	AND DX,0FFFH
	SUB AX,DX
	JNC FRGN
	NEG AX
FRGN:   CMP AX,02H
	JNC FFG3
FRGN2:  INC FANTC
	MOV CX,DI
	SHR CX,1
	MOV FANTN[BX],CL
	INC BX
	MOV AX,DS:ANSCD[DI+600D]
	MOV SANCT[BP],AX
	MOV AX,DS:ANSCD[DI+800D]
	MOV SACTN[BP],AX
	MOV AX,DS:ANSCD[DI]
	MOV SANCF[BP],AX
	MOV AX,DS:ANSCD[DI+200D]
	MOV SANCP[BP],AX
	MOV AX,DS:ANSCD[DI+400D]
	MOV SANCA[BP],AX
	ADD BP,02H
FFG3:    ADD DI,02H
	MOV CX,DI
	SHR CX,1
	CMP CL,ANPNC
	JZ FRGN3
	POP AX
	PUSH AX
	JMP FFG4
FRGN3:  POP AX
	POP SI
	MOV DI,00H
	MOV CX,64H
GF:     MOV AX,00H
	MOV ANSCD[DI],AX
	MOV ANSCD[DI+200D],AX
	MOV ANSCD[DI+400D],AX
	MOV ANSCD[DI+600D],AX
	MOV ANSCD[DI+800D],AX
	ADD DI,02H
	LOOP GF
	MOV CH,0
	MOV DI,00H
	MOV CL,ANPNC
GF1:    MOV AX,SANCF[DI]
	MOV ANSCD[DI],AX
	MOV AX,SANCP[DI]
	MOV ANSCD[DI+200D],AX
	MOV AX,SANCA[DI]
	MOV ANSCD[DI+400D],AX
	MOV AX,SANCT[DI]
	MOV ANSCD[DI+600D],AX
	MOV AX,SACTN[DI]
	MOV ANSCD[DI+800D],AX
	ADD DI,02H
	LOOP GF1
GF2:    NOP
	RET
FFGN ENDP

DELET PROC
	MOV DX,01H
LV1:    MOV CX,0FFFFH
CLW7:   MOV AL,0
	MUL AL
	LOOP CLW7
	DEC DX
      CMP DX,0
	JNZ LV1
	RET 
DELET ENDP
TST PROC
	CLI
	  MOV AX,3000H
	  MOV DS,AX
	  MOV QQPD,0
	  MOV DX,260H
	  MOV AL,0CH
	  OUT DX,AL
	MOV AL,0A0H          ;0F8H
	  MOV DX,0AA6H
	OUT DX,AL
	MOV AL,3H         ;03H
	OUT DX,AL
	MOV AX,9000H
	MOV ES,AX
	MOV SI,00
	MOV CX,2800H
PL1:    MOV ES:WORD PTR[SI],00H
	ADD SI,02H
	LOOP PL1
	MOV SI,0
	MOV BP,0
	MOV DI,00H
A0A1:   MOV AX,0D000H
	MOV ES,AX
	  MOV QQPD,0
	MOV AX,9000H
	MOV DS,AX
A10:    MOV AX,ES
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	MOV CX,04H
AA10:   MOV AX,ES:WORD PTR[SI]
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	ADD SI,02H
	LOOP AA10
	MOV AX,ES:WORD PTR[10H]
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	MOV AX,ES:WORD PTR[216D]
	MOV DS:WORD PTR[DI],AX
	MOV SI,00H
	ADD DI,02H
	MOV CH,00H
	MOV CL,ES:BYTE PTR[SI]
	CMP CX,01H
	JG A2
	JMP A3
A2:     DEC CX
A02:    MOV AX,ES:WORD PTR[SI+618D]
	SUB AX,ES:WORD PTR[SI+616D]
	MOV DS:WORD PTR[DI],AX
	ADD SI,02H
	ADD DI,02H
	LOOP A02
A3:     INC BP
	CMP BP,126D
	JNZ A5
	JMP A4
A5:     MOV AX,DS
	ADD AX,10H
	MOV DS,AX
	MOV AX,ES
	ADD AX,40H
	CALL PAGER
	MOV SI,0
	MOV DI,0
	JMP A10
A4:     INT 3
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	CLI
	  MOV AX,3000H
	  MOV DS,AX
	  MOV QQPD,0
	  MOV DX,260H
	  MOV AL,0CH
	  OUT DX,AL
	  MOV AL,0A0H                  ;0F8H
	  MOV DX,0AA6H
	OUT DX,AL
	MOV AL,3                 ;03H
	OUT DX,AL
	MOV AX,9000H
	MOV ES,AX
	MOV SI,00
	MOV CX,1280D
PL2:    MOV ES:WORD PTR[SI],00H
	ADD SI,02H
	LOOP PL2
	MOV SI,0
	MOV BP,0
	MOV DI,00H
BA0A1:  MOV AX,0D000H
	MOV ES,AX
	MOV AX,9000H
	MOV DS,AX
BA10:   MOV AX,ES
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	MOV CX,04H
BAA10:  MOV AX,ES:WORD PTR[SI]
	MOV DS:WORD PTR[DI],AX

	ADD DI,02H
	ADD SI,02H
	LOOP BAA10
	MOV AX,ES:WORD PTR[16D]
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	MOV AX,ES:WORD PTR[216D]
	MOV DS:WORD PTR[DI],AX
	INC BP
	CMP BP,126D
	JNZ BA5
	JMP BA4
BA5:    MOV AX,DS
	ADD AX,1H
	MOV DS,AX
	MOV AX,ES
	ADD AX,40H
	CALL PAGER
	MOV SI,0
	MOV DI,0
	JMP BA10
BA4:    INT 3
	NOP
	NOP
	NOP
TST ENDP
DOUQP PROC
      PUSH AX
	POP AX
	MOV CX,00
	MOV AX,0
	MOV SI,00
DQPP2: CMP TOAL[SI],00H
      JNZ DQP12
      CMP TOAL[SI+2],00H
      JZ DQP1
DQP12:  INC AX
	ADD SI,02H
	JMP DQPP2
DQP1:   CMP AX,04H
	JGE DQPP1
	MOV TOAMX,01H
	MOV TOAMN,01H
	PUSH AX
	MOV AL,32H
;       CALL DISPLAY
	POP AX
	RET
DQPP1:MOV SI,AX
	DEC SI
	  PUSH SI
DQP3:   MOV DX,SI
	MOV DI,SI
DQP2:   MOV DX,DI
	SHL DI,01H
	MOV AX,TOAL[DI]
	MOV BX,TOAL[DI-2]
	CMP AX,BX
	JNC DQP4
	XCHG AX,TOAL[DI-2]
	MOV TOAL[DI],BX
DQP4:   MOV DI,DX
	DEC DI
	CMP DI,CX
	JG DQP2
	CMP DX,SI
	JZ DQP5
	INC CX
	JMP DQP3
DQP5:   POP SI
	  MOV AX,SI
	  TEST AX,01H
	  JZ DQP55
	  INC SI
DQP55:   MOV CWI,0
	   MOV DI,0
DQP55S:	   CMP TOAL[DI],180D
	JNC DQP55R
	INC CWI
	ADD DI,2
	CMP DI,10H
	JC DQP55S
	CMP CWI,6
	JC DQP55R
	MOV TOAMX,1
	MOV TOAMN,1
	RET
DQP55R:	    PUSH SI
	MOV AX,TOAL[SI]
      MOV BX,AX
	MOV CX,30D   ;45D
	MUL CX
	MOV CX,100D
      MOV DX,0   ;?
	DIV CX
	MOV TOA05,AX
DQP7:   ADD SI,02H
	CMP TOAL[SI],00
	JZ DQP6
	MOV AX,TOAL[SI]
	SUB AX,BX
	CMP AX,TOA05
	JBE DQP7
DQP6:   MOV AX,TOAL[SI-2]
	MOV TOAMX,AX
	  MOV DI,SI
	POP SI
DQP8:     SUB SI,02H
	CMP SI,00
	JZ DQP9
	MOV DX,TOAL[SI]
	MOV AX,BX
	SUB AX,DX
	CMP AX,TOA05
	JBE DQP8
DQP9:   MOV AX,TOAL[SI]   ;[SI+2]
	MOV TOAMN,AX
	  ADD SI,02H
	  MOV DX,00H
	  MOV CX,00H
	  MOV AX,00H
DQPB:     ADD AX,TOAL[SI]
	  JNC DQPA
	  INC DX
DQPA:     INC CX
	  ADD SI,02H
	  CMP SI,DI
	  JC DQPB
	  DIV CX
	  MOV WORD PTR RUSLT[6],AX
	PUSH AX
	MOV AL,32H
;       CALL DISPLAY
	POP AX 
	RET
DOUQP ENDP

DOAHL PROC
	  PUSH DS
	PUSH ES
	MOV AX,4000H
	MOV ES,AX
DHL8: NOP
D11Z:   CMP ES:BYTE PTR[3],1
	JZ HLX
	CMP ES:BYTE PTR[0EH],6H
	JNC DHLXZ   
	JMP DHLX
HLX:  NOP
;	CMP ES:BYTE PTR[0],0FFH
;	JZ HLXQ
;	JMP DHLX
HLXQ:	MOV AL,ES:BYTE PTR[4]
	AND AL,10H
	CMP AL,10H
	JZ DHLXZ   ;D1DQ
      JMP DHLX
DHLXZ:
	MOV CX,06H
      MOV SI,00H    
COP8D:     MOV ES:BYTE PTR[SI],00H                       ;clear the regist '55'
C88D:      INC SI
	  CMP SI,04H
	  JZ C88D
	CMP SI,5
	JZ C88D
	  LOOP COP8D
Q2D: ;     CMP ES:BYTE PTR [0DH],1
;	  JZ UUY
;	MOV AL,ES:BYTE PTR[4]
;	  OR AL,80H
;	  MOV ES:BYTE PTR[4],AL
UUY:        MOV ES:BYTE PTR[12],00H
	  MOV ES:WORD PTR[14],00H
	  CALL BEFAN
	JMP DHLX
D1DQ:; CMP ES:BYTE PTR[0],0FFH
	;JNZ D1DQD
D1DQD:CMP ES:BYTE PTR[0],64H
	JNC D1DQS
	JMP DHLX 
D1DQS:      MOV DI,00H
	MOV CX,65H
	  MOV AG,0
	MOV AX,00H
DHL1:   MOV WORD PTR DOAPA[DI],AX
	ADD DI,02H
	LOOP DHL1
	MOV DOAMX,AX
	MOV DOAMX1,00
	  MOV DOAMX3,00
	  CMP ES:BYTE PTR[5],01H
	  JNZ BAD
	  MOV DOAMX2,03  ;6H
	  JMP DAHB
BAD:      MOV DOAMX2,2   ;04H          
DAHB:   MOV CX,03H
	MOV SI,00H
DHL2:   MOV WORD PTR TXN[SI],AX
	ADD SI,02H
	LOOP DHL2
	MOV SI,10H    ;546H
	MOV DI,00H
;	CMP ES:WORD PTR[0],00
;	  JZ LD
	CMP ES:BYTE PTR[9],0
	JNZ DP1   ;LD
;	  MOV BX,ES:WORD PTR[SI-2]
;	MOV CX,ES:WORD PTR[SI]
;	  CMP CX,06H
;	  JC LD
;	CMP CX,65H
;	JNC LD
;	CMP BX,00AAH
;	JZ DP1
LD:     JMP DHLL65
DP1:  MOV CL,3
	MOV CH,0
	MOV BP,9
D1B:  PUSH CX 
	PUSH BP 
	CALL DOAHL1
	POP BP
	POP CX 
	INC BP
	LOOP D1B
     	MOV ES:WORD PTR[0],0
     	MOV ES:WORD PTR[2],0
DHLL65: MOV AX,3000H
	  MOV DS,AX
	  CMP DS:DISCM,66H;94H
	  JNZ DHLX
	  MOV DS:DISCM,0
	  CALL THRDOC
DHLX:     MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHNRT
	JNC DHL9
	JMP DHL8           ;D1
DHL9: POP ES
	POP DS
	RET
DOAHL ENDP
DOAHL1 PROC
	MOV SI,10H    ;148H
	MOV CH,0
	MOV CL,ES:BYTE PTR[0]   ;ES:WORD PTR[546H]
	CMP CL,64H
	JC DOIU 
	MOV CL,64H
DOIU:	MOV AL,ES:BYTE PTR[BP]
	MOV AH,0
	CMP AL,0
	JNZ DHLX2
	RET
DHLX2:DEC AX
	MOV DX,34H    ;2CH     ;2AH
	MUL DX
	MOV DI,AX
	MOV AX,3600H
	MOV DS,AX
	CMP DS:BYTE PTR[DI+1],04H
	JC DLX
	MOV BX,DS:WORD PTR[DI+2]
	JMP BIP3
DLX:  NOP
DHL53:  MOV BX,DS:WORD PTR[DI+2]
	MOV DI,00H
DHL51:  MOV AX,ES:WORD PTR[SI]
	AND AH,80H
	CMP AH,00H
	JZ DHL3
	MOV AX,ES:WORD PTR[SI]
	AND AX,1FFFH
	SUB AX,BX
	JNC DHL55
	NEG AX
DHL55:  CMP AX,03H
	JNC DHL3
DHL4:   MOV AX,03000H
	MOV DS,AX
	MOV AX,ES:WORD PTR[SI+400H]
	MOV DOAPA1[DI],AX
	ADD DI,02H
DHL3:   ADD SI,02H
	LOOP DHL51
	CMP DI,4
	JNC BIP4
	RET            ;JMP DHLL65
BIP3:   MOV DI,00H
BIPP3:  MOV AX,ES:WORD PTR[SI]
	AND AH,80H
	CMP AH,00H
	JZ BIP2
BIP6:   MOV AX,3000H
	MOV DS,AX
	MOV AX,ES:WORD PTR[SI+400H]
	MOV DOAPA1[DI],AX
	ADD DI,02H
BIP2:   ADD SI,02H
	LOOP BIPP3
BIP4:   MOV AX,03000H
	MOV DS,AX
	MOV WORD PTR RUSLT[2],BX
	PUSH BP
	CALL DK1K
	POP BP
	  MOV BX,AX
;	CMP BX,200H
;	JNC HFA
;	RET 
HFA:	MOV AX,3600H
	MOV DS,AX
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,00H
	CMP AL,00H
	JNZ ZXQ
      RET        ;JMP DHLL6   ; JNZ ZXQ 
	NOP        ;       JMP DHLL6
ZXQ:    DEC AX
	MOV DX,34H  ;2CH     ;2AH
	MUL DX
	MOV DI,AX
	MOV AX,DS:WORD PTR[DI+4]
	  PUSH BX
	  CMP AX,BX
	  JNC SXZ
	  XCHG AX,BX
SXZ:      SUB AX,BX
	  POP BX
	  CMP AX,20D
	  JC SXZ1
	  CMP AX,340D
	  JNC B7
	  RET        ;JMP DHLL65
B7:       CMP AX,360D
	  JC SXZ1
	  RET    ; JMP DHLL65
SXZ1:   MOV DS:WORD PTR[DI+4],BX
	PUSH DS
	MOV AX,3000H
	MOV DS,AX
	MOV AL,RUSLT[12]
	POP DS
	MOV DS:BYTE PTR[DI+12],AL
;       CMP DOAPA[0],0
;       JNZ BIPX
;       JMP B8
;BIPX: MOV DX,0
;       MOV AX,0
;       MOV CX,0
;       PUSH DI
;       MOV DI,0
;BIPX2:MOV DX,DOAPA[DI]
;       AND DX,3FH
;       ADD AX,DX
;       ADD DI,02H
;       INC CX
;       CMP DOAPA[DI],0
;       JZ BIPX1
;       CMP CX,10H
;       JNZ BIPX2
;BIPX1:MOV DX,0
;       DIV CX
;       POP DI
;       PUSH AX
;       MOV AX,3600H
;       MOV DS,AX
;       POP AX
;       MOV DS:BYTE PTR[DI+12],AL
;B8:     POP DS
	RET
DOAHL1 ENDP

THRDOC PROC
	MOV AX,3000H
	MOV DS,AX
	MOV RUSLT[0],0C7H
	MOV BP,01H
	MOV DI,00H
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI],0
	JNZ TRDD2
	POP ES
	RET
TRDD2:CMP ES:BYTE PTR[DI+43],055H  ;0AAH
	JC TRYZ 
	MOV ES:BYTE PTR[DI+43],0
	MOV AL,ES:BYTE PTR[DI+40]
	MOV AH,00H
	MOV WORD PTR RUSLT [BP],AX
	MOV AX,ES:WORD PTR[DI+2]
	MOV WORD PTR RUSLT[BP+2],AX
	MOV AX,ES:WORD PTR[DI+4]
	MOV WORD PTR RUSLT[BP+4],AX
TRYY:	MOV AL,ES:BYTE PTR[DI+12]
	MOV BYTE PTR RUSLT[BP+6],AL
	ADD BP,07H
TRYZ:	ADD DI,34H    ;02CH     ;2AH
	MOV AL,ES:BYTE PTR[DI]
	CMP AL,00H
	JZ TRD1
	JMP TRDD2
TRD1:   MOV WORD PTR RUSLT [BP],055AAH
	ADD BP,02H
	POP ES
KKJL:	CALL OUTP
	  CALL CLEAR
	MOV DI,00H
	MOV AL,00H
	MOV CX,704D
DHLA:   MOV RUSLT[DI],00H
	INC DI
	LOOP DHLA
	RET
THRDOC ENDP

CLEANSAIL PROC
	MOV AX,3000H
	MOV DS,AX
	MOV AX,4000H
	MOV ES,AX
	MOV DI,0
	MOV BL,2
ISL2:	CMP ES:BYTE PTR[8],0
	JNZ ISL3
	JMP ISL1
ISL3:	MOV AX,ES:WORD PTR[10H]
	AND AX,0FFFH
	CMP AX,820H
	JNC ISLLQ
	JMP ISL1
ISLLQ:	CMP AX,840H
	JC ISLC
	JMP ISL1
ISLC:	CMP SAILN[DI],BL    ;ES:BYTE PTR[2],BL
	JC ISL1
	MOV SI,09H
ISY11:
      MOV RUSLT[0],1DH
	MOV AH,0
	MOV AL,ES:BYTE PTR[SI]
	CMP AL,00H
	JNZ ISY3
	JMP ISY32
ISY3:  MOV RUSLT[40],AL
	MOV RUSLT[41],00H
	MOV CX,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	MOV AX,CX
	DEC AX
	MOV CL,34H    ;2CH
	MUL CL
	MOV BP,AX
	CMP ES:BYTE PTR[BP+42],1DH
	JNZ STT
	POP ES
	JMP ISY32
STT:   MOV ES:BYTE PTR[BP+42],1DH
	MOV AX,ES:WORD PTR[BP+2]
	MOV WORD PTR RUSLT[2],AX
	POP ES
	PUSH BX
	PUSH SI
	  CALL OUTP
	  CALL CLEAR
	POP SI
	POP BX
ISY32: INC SI
	CMP SI,0CH
	JC ISY11
SIT:        MOV SI,00H
	MOV CX,08   ;8H
	MOV AX,00H
ISY33: MOV ES:BYTE PTR[SI],00
      INC SI
	LOOP ISY33
      MOV ES:BYTE PTR[0CH],00H
      MOV ES:BYTE PTR[0DH],01H
      MOV ES:BYTE PTR[0EH],00H
	MOV SAILN[DI],0
ISL1:	INC BL
	INC DI
	MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHNRT
	JNC ISL4
	JMP ISL2
ISL4:	RET
CLEANSAIL ENDP 

DISTROY PROC
	RET
	MOV BC1,0
NP1:        NOP
	MOV AX,4000H
      MOV ES,AX;
DISY22:NOP
;      CMP ES:BYTE PTR[0DH],1H
;       JNZ DISN1
;       JMP DISX
DISN1: CMP ES:BYTE PTR[5],01
	JZ DISY2
;	JC DISY2
NP2:        CMP ES:BYTE PTR[0EH],12D   ;24D   ;078H????????      
	JC DISY4
	JMP DISY1
DISY2:  CMP ES:BYTE PTR[0EH],03H
	JC DISY4
PTRQ1:    JMP DISY1
DISY4:  CMP ES:BYTE PTR[0],0FFH
	  JNZ  DRSA
	  CMP ES:BYTE PTR[3],01H
	  JZ DRSA
	  MOV AL,ES:BYTE PTR[4]
	  AND AL,01H
	  CMP AL,1
	  JNZ DRSA
	  PUSH DS
	  JMP DRSA2
DRSA:   NOP  
;        CMP ES:BYTE PTR[0],00
;         JNZ DRSAX
;         MOV AL,ES:BYTE PTR[4]
;         AND AL,80H
;         CMP AL,80H
;         JNZ DRSAX
;         JMP DISY1   
DRSAX:        CMP ES:BYTE PTR[08H],02H 
	  JNC DPP1S
	  JMP DIS4Y
DPP1S:  MOV AL,ES:BYTE PTR[4]
	AND AL,10H
	CMP AL,10H
	JZ DPS1
	JMP DIS4Y   
DPS1:           CMP ES:WORD PTR[544H],0AAH
	JZ DPP1
	JMP DS4
DPP1:	PUSH DS
	CMP ES:BYTE PTR[3],01H
	JZ DPPAB
	CMP ES:BYTE PTR[0],0
	JNZ DPC1
	JMP DPPAC
DPPAB:  CMP ES:BYTE PTR[8],00H
	JNZ PLPP1
	POP DS
	JMP DS4
DPPAC:
	MOV AL, ES:BYTE PTR[4]
	AND AL,80H
	CMP AL,80H
	JZ DPC1
	CMP ES:BYTE PTR[0CH],00H
	JZ DPC1
DRSA2:  MOV ES:WORD PTR[0],00H
	MOV ES:WORD PTR[2],00H
	MOV ES:BYTE PTR[4],00H
	MOV ES:WORD PTR[6],00H
	MOV ES:WORD PTR[544H],0
	MOV ES:WORD PTR[546H],0
	CALL BEFAN
DPC1:   POP DS
	JMP DS4
PLPP1:  MOV BP,09H
	MOV CL,ES:BYTE PTR[08]
	MOV CH,00H
DISY48: MOV AX,3600H
	MOV DS,AX
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,00H
	CMP AL,00H
	JNZ DISY4A
	JMP DISY4B
DISY4A:PUSH CX  
	DEC AX
	MOV CX,34H     ;2CH    ;2AH
	MOV DX,00H
	MUL CX
	MOV DI,AX
	POP CX
	CMP DS:BYTE PTR[DI+1],04H
	JNZ DISY41
DS4I:   POP DS
	JMP DIS4Y
DISY41: MOV SI,148H
	MOV DX,ES:WORD PTR[546H]
	MOV BX,DS:WORD PTR[DI+2]
	AND BX,1FFFH
	CMP BX,0
	JZ DS4I
	MOV DI,00H
DISY47:MOV AX,ES:WORD PTR[SI]
	AND AX,1FFFH
  ;     OR AX,1000H
	SUB AX,BX
	JNC DISY43
	NEG AX
DISY43: CMP AX,0FH
	JNC DISY45
	INC DI
	CMP DI,05H
	JNC DISY46
DISY45: ADD SI,02H
	DEC DX
	CMP DX,00H
	JNZ DISY47
	CMP DI,03H
	JC DISY49
DISY46: INC BP
	LOOP DISY48
	JMP DISY4B
DISY49: MOV AL,ES:BYTE PTR[8]
	DEC AL
	MOV ES:BYTE PTR[8],AL
	POP DS
	MOV RUSLT[0],1DH
	MOV AL,ES:BYTE PTR[BP]
	MOV RUSLT[40],AL
	MOV RUSLT[41],00H
	MOV ES:BYTE PTR[BP],00H
	MOV ES:BYTE PTR[0DH],02
	CALL FTRN
	CALL OUTP
	CALL CLEAR
	PUSH DS
	JMP DISY46
DISY4B: POP DS
	CMP ES:BYTE PTR[0DH],2
	JZ Q1
      JMP DIS4Y
Q1:     CMP ES:BYTE PTR[8],00H
	JNZ DISY50
	JMP DISY44
DISY50: MOV AL,ES:BYTE PTR[9]
	CMP AL,00H
	JNZ DISY4C
	MOV BL,ES:BYTE PTR[0AH]
	MOV ES:BYTE PTR[09],BL
	MOV BL,ES:BYTE PTR[0BH]
	MOV ES:BYTE PTR[0AH],BL 
	MOV ES:BYTE PTR[0BH],00H
	CMP ES:BYTE PTR[09H],00H
	JZ DLPP2
	JMP DISY44
DLPP2:  MOV BL,ES:BYTE PTR[0AH]
	MOV ES:BYTE PTR[09],BL
	MOV ES:BYTE PTR[0AH],00H
	JMP DISY44      
DISY4C: CMP ES:BYTE PTR[0AH],00H
	JNZ DISY44
	MOV BL,ES:BYTE PTR[0BH]
	MOV ES:BYTE PTR[0AH],BL
DISY44: MOV ES:BYTE PTR[0BH],00H
DS4:    CMP ES:BYTE PTR[8],00H
	JMP DIS4Y
	JNZ DIS4Y
	MOV AL,ES:BYTE PTR[4]
	AND AL,80H
	CMP AL,80H
	JZ DIS4Y
	CMP ES:BYTE PTR[0CH],00H
	JZ DIS4Y
	MOV ES:WORD PTR[0],0
	MOV ES:WORD PTR[2],0
	MOV ES:BYTE PTR[4],0
	MOV ES:WORD PTR[6],0
	MOV ES:WORD PTR[544H],0
	MOV ES:WORD PTR[546H],0
	CALL BEFAN
DIS4Y:  CMP DS:DISCM,66H;94H
	  JNZ DISX
	  MOV DS:DISCM,0
	  CALL THRDOC
DISX:        MOV AX,ES
	ADD AX,0A1H
	  MOV ES,AX
	CMP AX,CHNRT
	JNC DLPP3
	  JMP DISY22
DLPP3:  
;        MOV AL,36H
;         CALL DISPLAY     
	  RET
DISY1:
	MOV CL,ES:BYTE PTR[8]
       CMP CL,00H
       JZ  DSIT
      MOV CH,0
	MOV CL,3
	MOV SI,09H
DISY11:
      MOV RUSLT[0],1DH
	MOV AL,ES:BYTE PTR[SI]
	CMP AL,00H
	JNZ DISY3
	JMP DISY32
DISY3:  MOV RUSLT[40],AL
	MOV RUSLT[41],00H
	MOV CX,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	MOV AX,CX
	DEC AX
	MOV CL,34H     ;2CH
	MUL CL
	MOV BP,AX
	CMP ES:BYTE PTR[BP+42],1DH
	JNZ DSTT
	POP ES
	JMP DISY32
DSTT:   MOV ES:BYTE PTR[BP+42],1DH
	POP ES
      CALL FTRN
	PUSH SI
	  CALL OUTP
	  CALL CLEAR
	POP SI
DISY32: INC SI
	CMP SI,0CH
	JC DISY11
DSIT:        MOV SI,00H
	MOV CX,08   ;8H
	MOV AX,00H
DISY33: MOV ES:BYTE PTR[SI],00
HHH:    INC SI
;       CMP SI,4
;	JZ HHH
;	CMP SI,5
;	JZ HHH
	LOOP DISY33
;         CMP ES:BYTE PTR[0DH],02H
;         JNZ BDS1
;         MOV ES:WORD PTR[8],00
;         MOV ES:WORD PTR[0AH],00
BDS1:        MOV ES:BYTE PTR[0CH],00H
	  MOV ES:BYTE PTR[0DH],01H
LKKJ:      MOV ES:BYTE PTR[0EH],00H
	MOV ES:WORD PTR[544H],0
	MOV ES:WORD PTR[546H],0
	CALL BEFAN
	JMP DIS4Y
DISTROY ENDP
BEFAN:    MOV AX,ES
	  SUB AX,4000H
	  MOV DX,0
	  MOV CX,0A1H
	  DIV CX
	  MOV CX,40H
	  MUL CX
	  ADD AX,0D000H
	  PUSH ES
	  CMP AX,0E000H
	  JNC UUI4
	  MOV ES,AX
	  MOV AL,0CH
	  JMP UUI5
UUI4:     SUB AX,1000H
	  MOV ES,AX
	  MOV AL,0DH
UUI5:     MOV DX,260H
	  OUT DX,AL
	  MOV ES:WORD PTR[4],0
	  MOV ES:WORD PTR[6],0
	  POP ES
	  RET
FTRN:     PUSH ES
	  PUSH CX
	  PUSH AX
	  MOV AX,3600H
	  MOV ES,AX
	  POP AX
	  MOV AH,0
	  DEC AX
	  MOV CX,34H    ;2CH    ;2AH
	  MUL CX
	  MOV DI,AX
	  MOV AX,ES:WORD PTR[DI+2]
	  MOV WORD PTR RUSLT[2],AX
	  POP CX
	  POP ES
	  RET
DTROY PROC
	  CMP ES:BYTE PTR[0DH],01
	  JNZ PISY1
	  MOV ES:BYTE PTR[0DH],0
	  RET
PISY1:  MOV CH,0
	MOV CL,ES:BYTE PTR[8]
	CMP CL,00H
	JNZ PISY4
	  RET
PISY4:  MOV SI,09H
PISY11:   MOV RUSLT[0],1DH
	MOV AL,ES:BYTE PTR[SI]
	CMP AL,00H
	JNZ PISY3
	  MOV RUSLT[0],1BH
	RET
PISY3:  MOV RUSLT[40],AL
	MOV RUSLT[41],00H
	  CALL FTRN
	PUSH SI
	  CALL OUTP
;         CALL CLEAR
	  POP SI
PISY32: INC SI
	LOOP PISY11
	  MOV RUSLT[0],1BH
	  RET
DTROY ENDP
RCOM PROC
;       RET
	MOV AL,37H
;       CALL DISPLAY
	NOP
	PUSH ES
	PUSH DS
	MOV AX,4000H
	MOV ES,AX
BBC1:   CALL COMP
	MOV AX,ACHNR
	CMP AX,CHNRT
	JC RMP
      CMP DS:DISCM,66H;94H
	JNZ RCMA
	MOV DS:DISCM,0
	CALL THRDOC
RCMA:   MOV AX,ACHNR
	CMP AX,CHNRT
	JC RMP
      MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHNRT
	JC BBC1
RMP:    POP DS
	POP ES
;       MOV AL,38H
;       CALL DISPLAY
	RET
RCOM ENDP
CLEANP PROC
	MOV AX,4000H
	MOV ES,AX
DCLE7:CMP ES:BYTE PTR[0],0FFH
	JZ DCLEB
	JMP DCLE
DCLEB:	MOV CWI,0
	CMP ES:BYTE PTR[8],0
	JNZ DCLEC
	JMP DCLE
DCLEC:	MOV BP,9
DCLE5:MOV AH,0
	MOV AL,ES:BYTE PTR[BP]
	MOV SI,10H
	CMP AX,0
	JZ DCLE
	DEC AX
	MOV CL,34H     ;2CH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	MOV BX,ES:WORD PTR[DI+2]
	MOV AL,ES:BYTE PTR[DI+1]
	POP ES
	CMP AL,4
	JNC DLECA
	MOV AGP1,4
	JMP DCLE3
DLECA:MOV AGP1,167D
DCLE3:MOV AX,BX
	MOV CX,ES:WORD PTR[SI]
	AND CX,1FFFH
	SUB AX,CX
	JNC DCLE1
	NEG AX
DCLE1:CMP AX,AGP1
	JNC DCLE2
	INC CWI
DCLE2:ADD SI,2
	CMP SI,64D
	JC DCLE3
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP CWI,16D
	JNC DCLE8
	CMP ES:BYTE PTR[DI+41],0AAH
	JNC DCLE8
;	INC ES:BYTE PTR[DI+41]
	POP ES
	JMP DCLE4
DCLE8:;MOV ES:BYTE PTR[DI+41],0
	POP ES
DCLE4:	MOV CWI,0
	INC BP
	CMP BP,0CH
	JNC DCLE
	JMP DCLE5
DCLE:	MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHNRT
	JNC DCLE6
	JMP DCLE7
DCLE6:	MOV AX,4000H
CEA3:   MOV ES,AX
;	CMP ES:BYTE PTR[6],66H
;	JNZ CDFS
;	JMP CEA1	;JZ CEA1
CDFS:	CMP ES:BYTE PTR[0],0FFH
	JZ CSDD
	JMP CEA1   ;	JNZ CEA1
CSDD:	CMP ES:BYTE PTR[0CH],01H
	JZ CEA1N
;       CMP ES:BYTE PTR[3],01H
;       JNZ CEA1
;       CMP ES:BYTE PTR[8],0
;       JNZ CEA1
CEA1N: 
      INC ES:BYTE PTR[0FH]
	CMP ES:BYTE PTR[0FH],02   ;4H  ;3
	JNC CEA4
	CMP ES:BYTE PTR[1],0AAH
	JNZ CEA1J
	JMP CEA1
CEA1J:	MOV CWI,0
	MOV SI,12H
LKJ2:	MOV AX,ES:WORD PTR[SI+2]
	MOV BX,ES:WORD PTR[SI]
	AND AX,1FFFH
	AND BX,1FFFH
	SUB AX,BX
	JNC LKJ
	NEG AX
LKJ:	CMP AX,4
	JNC LKJ1
	INC CWI
LKJ1:	ADD SI,2
	CMP SI,200D
	JC LKJ2
	CMP CWI,90D
	JC CEA1
	MOV AL,41H
	CALL DISPLAY
	CALL REPEATP
	MOV AL,42H
	CALL DISPLAY
	CALL SCPAA
;       MOV ES:BYTE PTR[0FH],00H
;       MOV ES:BYTE PTR[0CH],0
;       JMP CEA1
CEA4:   MOV SI,00H
	MOV CX,06   ;7H      ;8H
CEA2:   MOV ES:BYTE PTR[SI],00H
CAEE:   INC SI
	  CMP SI,04H
	  JZ CAEE
	CMP SI,5
	JZ CAEE
	  LOOP CEA2
;       CMP ES:BYTE PTR[0DH],1
;       JZ U88
	  MOV AL,ES:BYTE PTR[04]
	  OR AL,80H
      MOV ES:BYTE PTR[4],AL
U88:    MOV ES:BYTE PTR[0CH],00H
	MOV ES:WORD PTR[0EH],00H
;       MOV ES:BYTE PTR[0DH],1
	  MOV AX,ES
	  SUB AX,4000H
	  MOV DX,0
	  MOV CX,0A1H
	  DIV CX
	  MOV CX,040H
	  MUL CX
	  ADD AX,0D000H
	  PUSH ES
	  CALL PAGER
	  MOV ES:WORD PTR[4],0000H
	  POP ES
CEA1:   PUSH DS
	  MOV AX,3000H
	  MOV DS,AX
	  MOV AX,ACHNR
	  CMP AX,CHNRT
	  POP DS
	  JNC XPJ3
	  RET
XPJ3:   MOV AX,ES
	  ADD AX,0A1H
UI2:    CMP AX,CHNRT
	JNC CEA3X
	  JMP CEA3
CEA3X:  MOV AL,30H
;         CALL DISPLAY
	RET
CLEANP ENDP

REPEATP PROC
	RET
PETP:   MOV TOAPN,00H
	  MOV CX,500D
	MOV AX,0
	MOV SI,0
REP1:    MOV ANSCD[SI],AX
	ADD SI,02H
	LOOP REP1
      MOV SI,00H
      MOV CX,65H
REP7:   MOV CTOA[SI],00H
	MOV CFR[SI],00H
	MOV FANTF[SI],00H
	MOV FANTW[SI],0
	MOV FANTP[SI],00H
	MOV CPA[SI],00H
	MOV CPW[SI],00H
	MOV CTON[SI],00H
	ADD SI,02H
	LOOP REP7
	  MOV CHRAN,0
	  MOV DI,0
	  MOV CX,101D   ;33D
REP7Q:  MOV SAPN[DI],0
	  INC DI
	  LOOP REP7Q
	  MOV SI,0H
	MOV DI,00
	  MOV BX,00
	  MOV CL,ES:BYTE PTR[00]
	  MOV CH,00H
	  CMP CL,00H
	JNZ REP2
REP3R:
	RET
	
REP2: 
	CMP CL,64H
	JC REP3R
	MOV CL,64H
REP3:	  MOV CH,0
RPEG2:    MOV AX,ES:WORD PTR[SI+210H]  ;
	AND AX,8000H;
	CMP AX,8000H;
;	JNZ REP4;
	INC TOAPN
	MOV AX,ES:WORD PTR[SI+210H]
	AND AX,0FFFH
	MOV ES:WORD PTR[SI+210H],AX
	MOV ANSCD[DI+200D],AX
	MOV AX,ES:WORD PTR[SI+10H]
	MOV FANTF[DI],AX
	MOV ANSCD[DI],AX
	MOV AX,ES:WORD PTR[SI+410H]
      MOV ANSCD[DI+400D],AX
	MOV AX,ES:WORD PTR[SI+610H]
	MOV ANSCD[DI+600D],AX
	MOV CTOA[DI],AX
      MOV AX,ES:WORD PTR[SI+810H]
	MOV ANSCD[DI+800D],AX
	MOV CTON[DI],AX
      ADD DI,02H
	SHR SI,1
	MOV DX,SI
	MOV FANTN[BX],DL
	INC BX
	SHL SI,1
REP4:   ADD SI,02H
	LOOP RPEG2
	MOV AL,TOAPN
	  CMP AL,80D   ;32D
	  JNC PRE1
PR11:
	 RET
PRE1: MOV ECOUT,0
	MOV ECOUT1,0
      MOV SI,0
	MOV CX,100D     ;20H
USS:  MOV DS:TOAIT[SI],0AAH
	INC SI
	LOOP USS
	CALL USSIP
	CMP SI,30D
	JC BVX
	MOV CWI,0
	MOV CX,0FFH
	CALL CWAR1
	CMP CWI,4
	JC BVX    ;USS12
	CALL DIVF
BVX:
	RET
USSIP:MOV SBTI,55H	
	MOV DI,0
	MOV SI,0
	MOV AH,0
	MOV AL,TOAPN
USSIR:	MOV AX,0
	MOV CX,5
USS1: MOV TOAL[SI],AX
	MOV NL[DI],AL
	ADD SI,2
	INC DI
	LOOP USS1
	MOV CX,3200D
	MOV SI,0
USS2:   MOV PADDT[SI],AL
	INC SI
	LOOP USS2
	MOV DI,0
USSIQ:	MOV AX,CTOA[DI+2]
	MOV BX,CTOA[DI]
	SUB AX,BX
SUP:    CMP AX,2710H
	JC SUP1
SUP1A:  MOV TOAL[0],0
	JMP SUP2
SUP1: CMP AX,32D
	JC SUP1A
	MOV TOAL[0],AX
SUP2:   MOV AX,CTOA[DI+4]
	MOV BX,CTOA[DI]
	SUB AX,BX
SUP3:   CMP AX,2710H
	JC SUP4
	MOV TOAL[2],0
	JMP SUP5
SUP4:   MOV TOAL[2],AX
SUP5:   MOV AX,CTOA[DI+6]
	MOV BX,CTOA[DI]
	SUB AX,BX
SUP6:   CMP AX,2710H
	JC SUP7
	MOV TOAL[4],0
	JMP SUP8
SUP7:   MOV TOAL[4],AX
SUP8:   MOV BX,0
USS7:   MOV SI,0
	MOV AX,TOAL[BX]
	CMP AX,0
	JZ US7S
	SHR AX,1
	MOV TEMP,AX
	MOV TOA05,3
USS9:   CALL USS6
	CMP AX,0FFFFH
	JNZ VVGA
	ADD SI,2
VVGA:	CMP SI,16D
	JC USS9
	MOV SBTI,0
	MOV AX,CTOA[SI]
	MOV DTOA,AX
	MOV AX,CTON[SI]
	MOV DTON,AX
	MOV AX,CTOA[SI]
	SUB AX,CTOA[0]
	MOV CX,WORD PTR TOAL[BX]
	MOV DX,0
	DIV CX
	MOV CX,60D
	MUL CL
	MOV CL,100D
	DIV CL
	SHR BX,1
	CMP NL[BX],AL
	JNC USS8
USS12:  SHL BX,1
US7S:   INC BX
	INC BX
	MOV AX,TOAL[BX]
	MOV TOAL[0],AX
	CMP BX,6
	JC USS7
	INC ECOUT
	MOV AH,0
	MOV AL,ECOUT
	MOV DI,AX
	SHL DI,1
	CMP ECOUT,2
	JC USPI
      RET	   ;JMP PREE1
USPI:	JMP USSIQ
USS8:   SHL BX,1
USS10:CALL USS6
	CMP AX,0FFFFH
	JZ VVGFF 
VVGF:	CMP CTOA[SI],0
	JZ VVGFF
VGCS:	CMP SI,198D   ;64D
	JC USS10
VVGFF:	SHR BX,1
	CMP NL[BX],15D ;25D   ;AL
	JC USS12
	RET
USS6:   MOV II,2
USS5: PUSH DI
	MOV AX,SI
	ADD AL,II
	MOV DI,AX
	MOV AX,CTOA[DI]
	POP DI
	PUSH AX
	SUB AX,CTOA[SI]
US55:   SUB AX,TOAL[BX]
	JNC USS31
	NEG AX
USS31:CMP AX,TOA05
	POP AX
	JC USS33
	MOV CX,DTOA
	SUB AX,CX
	MOV DX,0
	DIV TOAL[BX]
	CMP DX,TOA05
	JC USS33
	SUB DX,TOAL[BX]
	JNC US4D1
	NEG DX
US4D1:CMP DX,TOA05
	JNC USS4
USS33:  SHR BX,1
	MOV AX,BX
	MOV CL,0FFH  ;3EH
	MUL CL
	MOV BP,AX
	MOV AH,0
	MOV AL,NL[BX]
	MOV CL,2
	MUL CL
	ADD BP,AX
	SHR SI,1
	MOV AX,SI
	MOV PADDT[BP],AL
	MOV AL,II
	SHR AX,1
	ADD AX,SI
	MOV PADDT[BP+1],AL
	INC NL[BX]
	MOV SI,AX
	SHL SI,1
	MOV AX,CTOA[SI]
	MOV DTOA,AX
	MOV AX,CTON[SI]
	MOV DTON,AX
	SHL BX,1
	RET
USS4: ADD II,2
	CMP SBTI,55H
	JZ USAN
	PUSH BP
	MOV CH,0
	MOV CL,II
	MOV BP,CX
	CMP CTOA[BP],0
	POP BP
	JZ USS5C
	CMP II,96
	JNC USS5C
	JMP USS5
USAN:	CMP II,8
	JNC USS5C
	JMP USS5
USS5C:	MOV AX,0FFFFH
	RET
DIVF:	
      CALL DIVFP
      CALL CLEZ
	CALL ZPQP
	MOV CWI,0     ;SECOND ANALYSIS START
	MOV AH,0
	MOV DI,0
	MOV SI,0
	MOV CX,98D    ;100D   ;32D
DIVF9: CMP TOAIT[DI],0AAH
	JNZ DIVF8
	MOV AX,DI
	MOV SAPN[SI],AL
	INC SI
DIVF8:  INC DI
	LOOP DIVF9
	CMP SI,10D
	JNC DIVFB1
	RET    ;	JMP PREE1
DIVFB1:
	MOV AX,SI
	MOV TOAPN,AL
	INC ECOUT1
	CMP ECOUT1,2
	JC DIVFB2
	RET    ;   JMP PREE1
DIVFB2:	MOV BH,0
	MOV SI,0
	MOV DI,0
	MOV CWI,0
DIVFB:MOV BL,SAPN[SI+1]
	SHL BX,1
	MOV AX,ANSCD[BX+600D]
	MOV CTOA[DI],AX
	MOV AX,ANSCD[BX+800D]
	MOV CTON[DI],AX
	MOV AX,ANSCD[BX]
	MOV FANTF[DI],AX
	MOV AX,ANSCD[BX+200D]
	MOV FANTW[DI],AX
	MOV AX,ANSCD[BX+400]
	MOV FANTP[DI],AX
	ADD DI,2
	INC SI
	CMP SAPN[SI],0
	JNZ DIVFB
DIVB2:CMP DI,200D
	JNC DIVB1
	MOV CTOA[DI],0
	MOV CTON[DI],0
	MOV FANTF[DI],0
	MOV FANTP[DI],0
	ADD DI,2
	JMP DIVB2
DIVB1:MOV DI,0
DIVB3:MOV DS:TOAIT[DI],0AAH
	INC DI
	CMP DI,SI
	JC DIVB3
DIVB4:MOV TOAIT[DI],0
	INC DI
	CMP DI,102D
	JC DIVB4
	MOV DI,0
DIVB5:MOV SAPN[DI],0
	INC DI
	CMP DI,100D
	JC DIVB5
	MOV CX,101D
	MOV DI,0
ERRT:	MOV CFR[DI],0
	MOV CPW[DI],0
	MOV CPA[DI],0
	MOV DOAPA[DI],0
	ADD DI,2
	LOOP ERRT
	CALL USSIP
	CMP SI,40D
	JNC BVX1
	RET
BVX1:	MOV CWI,0
	MOV CX,0FFH
	CALL CWAR1
	CMP CWI,4
	JNC CCCC
	JMP BVX
CCCC:	
	CALL DIVFP
      MOV DI,0
	MOV BX,0
ZPQ31:   MOV AH,0
	MOV AL,SAPN[DI]
	CMP DI,0
	JZ ZPQ3Q1
	CMP AL,SAPN[DI-1]
	JC IIZW1
ZPQ3Q1:	MOV CL,2
	MUL CL
	MOV SI,AX
	MOV AX,FANTF[SI]    ;ANSCD[SI]
	TEST AX,8000H
	JZ IIZW1
	MOV CFR[BX],AX
	MOV AX,FANTW[SI]    ;ANSCD[SI+200D]
	MOV CPW[BX],AX
	MOV AX,FANTP[SI]     ;ANSCD[SI+400D]
	MOV CPA[BX],AX
	MOV DOAPA[BX],AX
	ADD BX,2
IIZW1:	INC DI
	CMP SAPN[DI],0
	JZ ZPQ21
	CMP DI,100D  ;32D
	JC ZPQ31   
ZPQ21:CALL ZPQ2
	CMP ES:BYTE PTR[0],0FFH
	JNZ VVV
	CALL VVVS
VVV:	RET
DIVFP:      MOV AX,BX
	MOV NL[BX],0
	INC CHRAN
	MOV CL,0FFH    ;3EH
	MUL CL
	MOV BP,AX
	PUSH BP
DIVF2:MOV AH,0
	MOV AL,DS:PADDT[BP]
	MOV BX,AX
	MOV AL,CHRAN
	CMP TOAIT[BX],AL
	JZ DIVF1
	CMP TOAIT[BX],0AAH
	JNZ DIVF1
	MOV TOAIT[BX],AL
	INC TOAPN
DIVF1:INC BP
	MOV AX,DS:WORD PTR PADDT[BP+1]
	CMP AX,0
	JNZ DIVF2
	MOV DI,0
	POP BP
DIVF21:MOV AH,0
	MOV AL,DS:PADDT[BP]
	PUSH DI
	MOV CX,DI
	CMP CX,0
	JZ DIVF3
	MOV DI,0
DIVF5:  CMP AL,SAPN[DI]
	JZ DIVF4
	INC DI
	LOOP DIVF5
DIVF3:  POP DI
	MOV SAPN[DI],AL
	INC DI
DIVF6:INC BP
	MOV AH,0
	MOV AL,PADDT[BP+1]
	CMP AX,0
	JNZ DIVF21
	JMP DIVF7
DIVF4:  POP DI
	JMP DIVF6
DIVF7:RET
VVVS:	MOV ES:WORD PTR[0],0
	MOV ES:WORD PTR[2],0
	MOV ES:BYTE PTR[6],0
	MOV ES:BYTE PTR[7],0
	MOV ES:WORD PTR[12],0
	MOV ES:BYTE PTR[15],0
	MOV AL,ES:BYTE PTR[4]
	OR AL,80H
	MOV ES:BYTE PTR[4],AL
;      MOV ES:BYTE PTR[6],88H
	RET
CLEZ: MOV AX,00H
	MOV SI,00H
	MOV CX,101D
DIVF10: MOV CFR[SI],AX
	MOV CPA[SI],AX
	MOV CPW[SI],AX
	MOV CTOA[SI],AX
	MOV DOAPA[SI],0
	MOV DOAPA1[SI],0
	ADD SI,2
	LOOP DIVF10
	RET 
PREE1:MOV ES:BYTE PTR[0CH],1
;      MOV AH,00H
;	MOV BP,00
;	MOV SI,02H
;	MOV CL,10D
;	MUL CL
;	MOV CL,100D
;	  MOV CH,00
;	  MOV DX,00
;	DIV CX
;	MOV TOA05,AX
;	MOV SI,2
RDOU4:;	MOV BX,CFR[SI]
;	MOV AX,BX
;	SUB AX,CFR[SI-2]
;	JNC RDOU1
;	NEG AX
;RDOU1:CMP AX,03H
;	JC RDOU2
;	INC BP
;	CMP BP,TOA05
;	JC RDOU2
;	  MOV ES:WORD PTR[0],00H
;	  MOV ES:WORD PTR[2],00H
;	  MOV AL,ES:BYTE PTR[4]
;	  OR AL,080H
;	  MOV ES:BYTE PTR[4],AL
;	  MOV ES:BYTE PTR[6],00H
;	  MOV ES:BYTE PTR[7],00H
;	  MOV ES:WORD PTR[0CH],00H
;	  MOV ES:BYTE PTR[0FH],00H
;	POP CX
	RET
RDOU2:ADD SI,02H
	CMP CFR[SI],00H
	JZ ROU3
	CMP SI,0C8H
	JC RDOU4
ROU3: MOV BP,00
	MOV SI,02
	MOV BX,CPW[0]
RDO4:MOV AX,BX
	SUB AX,CPW[SI]
	JNC RDO1
	NEG AX
RDO1: CMP AX,05H
	JC RDO2
	INC BP
	CMP BP,TOA05
	JC RDO2
RDDEL:    MOV ES:WORD PTR[0],00H
	  MOV ES:WORD PTR[2],00H
	  MOV AL,ES:BYTE PTR[4]
	  OR AL,080H
	  MOV ES:BYTE PTR[4],AL
	  MOV ES:BYTE PTR[6],00H
	  MOV ES:BYTE PTR[7],00H
	  MOV ES:WORD PTR[0CH],00H
	  MOV ES:BYTE PTR[0FH],00H    ;MOV ES:WORD PTR[0EH],0
	POP CX
	RET
RDO2:   ADD SI,02H
	CMP CPW[SI],00H
	JZ ROOU3
	JMP RDO4
ROOU3:    MOV CX,65H
	  MOV SI,00H
REP5:     MOV TOAL[SI],00H
	ADD SI,02H
	LOOP REP5
	POP CX
	DEC CX
	MOV SI,00H
	MOV DI,00H
REP6:   MOV AX,CTOA[DI+2]
	SUB AX,CTOA[DI]
	MOV TOAL[SI],AX
	ADD SI,02H
	ADD DI,02H
	LOOP REP6

	MOV SI,00H
RPT4:   MOV AX,TOAL[SI]
	CMP AX,64H
	JNC RPT3
RPT5:   ADD SI,02H
	CMP TOAL[SI],00H
	JNZ RPT4
	RET
RPT3: CMP AX,10000D
	JNC RPT5
	MOV SI,00H
REPT2:CMP TOAL[SI],64H
	JC REPT1
	CMP AX,TOAL[SI]
	JC REPT1
	MOV AX,TOAL[SI]
REPT1:ADD SI,02H
	CMP TOAL[SI],00H
	JNZ REPT2
	MOV BX,AX
;	SUB AX,02   ;9H
;	MOV TOA05,AX
	MOV TOA05,1
	MOV AX,BX
	MOV SI,00H
	MOV CX,AX
	MOV BP,00H
REPT5:  MOV DX,00H
	MOV AX,TOAL[SI]
	DIV CX
	CMP DX,9H
	JBE REPT3
	CMP DX,TOA05
	JGE REPT3
	INC BP
	CMP BP,08H                    ;0AH
	JC REPT3
REPC1:        CALL COMP8
	  JMP PETP                       ;  JMP RDOU
REPT3:  ADD SI,02H
	CMP TOAL[SI],00H
	JZ REPT4
	JMP REPT5
REPT4:  CMP BP,06H
	  JNC REPC1 
	PUSH BX
	MOV BX,01H
	CALL DATVA
	POP BX
	MOV WORD PTR RUSLT[SI+6],BX
	MOV SI,00H
	MOV AL,01H
	MOV RUSLT[SI+1],AL
	MOV RUSLT[0],1BH
	CALL DOACL
	CMP AX,170H   ;200H
	JNC SH6
	MOV WORD PTR RUSLT[4],AX
	    MOV AL,ES:BYTE PTR[4]
	AND AL,080H
	CMP AL,080H
	JNZ DJAA1
DKA1I2: CALL RTRAN  ;RTRA1
	CMP AX,0AAH
	JZ PBAD1
	JMP SH6
DJAA1:  CMP ES:BYTE PTR[0DH],01H
	JNZ PBAD1
	JMP DKA1I2
PBAD1: CMP ES:BYTE PTR[8],3
	JNC DKA1I2
	CALL RTRAN    ;RTRA1    ;COMQ
	CMP AX,0AAH
	JNZ SH6
	CALL SCPR
	CALL STRUM
	CALL OUTP
	CALL CNSN
SH6:        CALL CLEAR
	MOV CX,1F4H
	MOV SI,00H
REPP1:MOV ANSCD[SI],00H
	ADD SI,02H
	LOOP REPP1
	MOV SI,00H
	MOV CX,65H
REPP:   MOV CTOA[SI],00H
	MOV CFR[SI],00H
	MOV CPA[SI],00H
	MOV CPW[SI],00H
	MOV FANTF[SI],00H
	MOV FANTP[SI],00H
	MOV CTON[SI],00H
	ADD SI,02H
	LOOP REPP
	MOV ES:BYTE PTR[3],01H
	MOV ES:BYTE PTR[0DH],00H
	  MOV ES:BYTE PTR[12],00H
REPI1:
	RET
RDOU:   MOV AL,TOAPN
	MOV FANTC,AL
	CALL DATVA
	MOV SI,00H
	MOV AL,03H
	MOV RUSLT[SI+1],AL
	MOV RUSLT[0],1BH
	CALL DOACL
	CMP AX,170H  ;200H
	JNC SH7
	MOV WORD PTR RUSLT[4],AX
	  CALL DOUQP                    ;JIT CALCULT CHANG
	  MOV DX,TOAMN
	  MOV AX,TOAMX
	  CMP AX,DX
	  JZ DAM1
	  SUB AX,DX
	  MOV DX,0
	  MOV CX,64H
	  MUL CX
	  CMP WORD PTR RUSLT[6],00H
	  JZ DAM1
	  DIV WORD PTR RUSLT[6]
	  SHR AX,1
	MOV RUSLT[32],AL
	  JMP DAM3
DAM1:        MOV RUSLT[32],0AH
DAM3:            MOV AL,ES:BYTE PTR[4]
	AND AL,080H
	CMP AL,080H
	JNZ DJAZ1
DJA1M2: CALL RTRAN   ;RTRA1
	CMP AX,0AAH
	JZ  PAPD1
	JMP SH7
DJAZ1:  CMP ES:BYTE PTR[0DH],01H
	JNZ PAPD1
	JMP DJA1M2
PAPD1: CMP ES:BYTE PTR[8],3
	JNC DJA1M2
	CALL RTRAN  ;RTRA1    ;COMQ
	CMP AX,0AAH
	JNZ SH7
	CALL SCPR
	CALL STRUM
	CALL OUTP
	     CALL CNSN
SH7:    CALL CLEAR
	  MOV ES:BYTE PTR[0DH],00H  
	MOV ES:BYTE PTR[03],01H
	MOV ES:BYTE PTR[12],00H
	MOV CX,1F4H
	MOV SI,00H
REPP2:MOV ANSCD[SI],00H
	ADD SI,02H
	LOOP REPP2
	MOV SI,00H
	MOV CX,65H
REPA:   MOV CTOA[SI],00H
	MOV CFR[SI],00H
	MOV CPA[SI],00H
	MOV CPW[SI],00H
	MOV CTON[SI],00H
	MOV FANTF[SI],00H
	MOV FANTP[SI],00H
	ADD SI,02H
	LOOP REPA
	MOV ES:BYTE PTR[3],01H
	  MOV ES:BYTE PTR[0DH],00H
	MOV ES:BYTE PTR[12],00H
REPI2: 
	  RET
REPEATP ENDP
ZPQP:   MOV DI,0
	MOV BX,0
ZPQ3:   MOV AH,0
	MOV AL,SAPN[DI]
	CMP DI,0
	JZ ZPQ3Q
	CMP AL,SAPN[DI-1]
	JC IIZW
ZPQ3Q:	MOV CL,2
	MUL CL
	MOV SI,AX
	MOV AX,ANSCD[SI]
	TEST AX,8000H
	JZ IIZW
	MOV CFR[BX],AX
	MOV AX,ANSCD[SI+200D]
	MOV CPW[BX],AX
	MOV AX,ANSCD[SI+400D]
	MOV CPA[BX],AX
	MOV DOAPA[BX],AX
	ADD BX,2
IIZW:	INC DI
	CMP SAPN[DI],0
	JZ ZPQ2
	CMP DI,100D  ;32D
	JC ZPQ3   
ZPQ2: SHR BX,1
	MOV TOAPN,BL
      CALL DATVA
	CMP AX,0FFFFH
	JNZ ZPQT
	JMP SH73
ZPQT:	MOV AX,TOAL[0]
	MOV WORD PTR RUSLT[6],AX
	MOV TXN[0],0
	MOV TXN[2],0
	MOV TXN[4],0
	MOV BL,TOAPN
	MOV BH,0
	MOV DI,BX
	SHL DI,1    
	CALL DK1    ;ZPQ0
	MOV BX,AX   ;
	CMP AX,170H
	JC GDV1
	JMP SH73     ;JNC SH73   
GDV1:
;	MOV BX,WORD PTR RUSLT[2]
;	SUB BX,18F1H
;	JNC GDV
;	NEG BX
;GDV: CMP BX,10H
;	JNC VVVF3
;	CMP AX,120D
;	JNC VVVF3
;	MOV BX,AX
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3                       
VVVF3:	MOV WORD PTR RUSLT[4],BX 
	MOV BYTE PTR RUSLT[0],1BH
	MOV BYTE PTR RUSLT[1],01H
	MOV DI,2
	MOV AX,DOAPA[0]
	AND AX,3FH
FK3:    MOV BX,DOAPA[DI]
	CMP BX,0
	JZ FK1
	AND BX,3FH
	CMP AX,BX
	JNC FK2
	XCHG AX,BX
FK2:    ADD DI,2
	CMP DI,64D
	JC FK3
FK1:    MOV RUSLT[12],AL
DAM33:            MOV AL,ES:BYTE PTR[4]
	AND AL,080H
	CMP AL,080H
	JNZ DJAZ13
DJA1M23:        CALL RTRAN    ;RTRA1
	CMP AX,0AAH
	JZ  PAPD13
	JMP SH73
DJAZ13: CMP ES:BYTE PTR[0DH],01H
	JNZ PAPD13
	JMP DJA1M23
PAPD13: CMP ES:BYTE PTR[8],3
	  JNC DJA1M23
	CALL RTRAN     ;RTRA1    ;COMQ
	CMP AX,0AAH
	JNZ SH73
	CALL SCPR
	CALL STRUM
	CALL OUTP
      CALL CNSN
SH73:    CALL CLEAR
	CALL DAV
	MOV DI,0
	MOV SI,0
;       INC CHRAN
	MOV CX,101D  ;33D
ZPQQ:   MOV SAPN[SI],0
	INC SI
	LOOP ZPQQ
	RET
ZPQ0:   MOV SI,0
	MOV CX,0
	MOV AX,CFR[SI]
	TEST AX,8000H
	JZ ZPQ4
	MOV AX,CPA[SI]
	AND AX,0E000H
ZPQQW:	MOV DOAMX1,AX
	INC CX
ZPQ4:   ADD SI,2
	CMP CFR[SI],0
	JZ ZPQ5
	CMP SI,200D
	JNC ZPQ5
	MOV AX,CFR[SI]
	TEST AX,8000H
	JZ ZPQ4
	MOV AX,CPA[SI]
	AND AX,0E000H
	CMP CX,0
	JZ ZPQQW
	CMP AX,DOAMX1
	JZ ZPQ4
	INC CX
	MOV DOAMX2,AX
ZPQ6:   ADD SI,2
	CMP CFR[SI],0
	JZ ZPQ5
	MOV AX,CFR[SI]
	TEST AX,8000H
	JZ ZPQ6
	MOV AX,CPA[SI]
	AND AX,0E000H
	CMP AX,DOAMX1
	JZ ZPQ6
	CMP AX,DOAMX2
	JZ ZPQ6
	MOV DOAMX,AX
	INC CX
ZPQ5:   PUSH CX
	MOV DI,0
	MOV CX,65H
	MOV AX,0
ZPQ7:   MOV WORD PTR DOAPA[DI],AX
	ADD DI,2
	LOOP ZPQ7
	MOV CX,3
	MOV SI,0
ZPQ8:   MOV WORD PTR TXN[SI],AX
	ADD SI,2
	LOOP ZPQ8
	MOV SI,0
	MOV DI,0
ZPQ9: MOV AX,FANTF[SI]
	AND AH,80H
	CMP AH,0
	JZ ZPQ10
	MOV AX,FANTP[SI]
	AND AX,0E000H
	POP CX
	PUSH CX
	CMP AX,DOAMX1
	JZ ZPQ11
	DEC CX
	CMP CX,0
	JZ ZPQ10
	CMP AX,DOAMX2
	JZ ZPQ11
	DEC CX
	CMP CX,0
	JZ ZPQ10
	CMP AX,DOAMX
	JNZ ZPQ10
ZPQ11:MOV AX,FANTP[SI]
	MOV DOAPA[DI],AX
	ADD DI,2
ZPQ10:ADD SI,2
	CMP SI,200D
	JNC ZPQ12
	CMP FANTF[SI],0
	JNZ ZPQ9
ZPQ12:POP CX
	MOV DOAMX,0
	CALL DK1
VVVF1:
	RET     
CLEAR PROC
	MOV SI,00H
DV1:    MOV WORD PTR RUSLT[SI],00H
	ADD SI,02H
	CMP SI,2AH
	JNZ DV1
	RET
CLEAR ENDP
DISPLAY PROC
;        RET
;       PUSH AX
;DISPY1:IN AL,0DAH
;       AND AL,01H
;       JZ DISPY1
;       POP AX
;       OUT 0D8H,AL
	PUSH BX
	MOV AH,0EH
	MOV BX,0
	INT 10H
	POP BX
	RET
DISPLAY ENDP
COPARE PROC
       RET
	PUSH ES
	MOV AX,03600H
	MOV ES,AX
	MOV SI,00H
COM2:   CMP ES:BYTE PTR[SI+01H],04H
	JZ COM1
COM22:ADD SI,34H    ;2CH    ;2AH
	CMP ES:BYTE PTR[SI],00H
	JNZ COM2
	POP ES
	RET
COM1: MOV AX,DS:WORD PTR RUSLT[2]
	SUB AX,ES:WORD PTR[SI+2]
	JNC COM3
	NEG AX
COM3:   CMP AX,167D
	JC COM4
	JMP COM22
COM4:   MOV AX,DS:WORD PTR RUSLT[8]
	CMP AX,ES:WORD PTR[SI+8]
	JNC COM5
	MOV DS:BYTE PTR RUSLT[0],00H
	POP ES 
	RET
COM5:   MOV AL,ES:BYTE PTR[SI+40]
	MOV BL,DS:BYTE PTR RUSLT[40]
	MOV BH,DS:BYTE PTR RUSLT[41]
	MOV DS:BYTE PTR RUSLT[0],1DH
	MOV DS:BYTE PTR RUSLT[40],AL
	MOV DS:BYTE PTR RUSLT[41],00H
	CALL OUTP
	MOV DS:BYTE PTR RUSLT[0],1BH
	MOV DS:BYTE PTR RUSLT[40],BL
	MOV DS:BYTE PTR RUSLT[41],BH
	POP ES
	RET
COPARE ENDP     
COMP PROC
        RET
	CMP SBTI,94H   ;66H
	JNZ COPE
	JMP COMP8
COPE: CMP F3J,55H
	JZ COE
	RET
COE:    MOV COMN,0
	MOV AL,ES:BYTE PTR[4]
	AND AX,10H
	CMP AX,10H
	JZ EPN1
	RET
EPN1: CMP ES:WORD PTR[544H],0AAH
	JZ EPN1P
	RET
EPN1P:  MOV PRFP[0],00H
	MOV PRFP[2],00H
	MOV PRFP[4],00H
	MOV SI,09H
EOMP2:MOV AL,ES:BYTE PTR[SI]
	MOV AH,00H
	CMP AL,00H
	JNZ EOMP1
	CMP SI,09H
	JZ FOMP1
	JMP COMP1
FOMP1:  RET
EOMP1:  DEC AX
	MOV CX,34H     ;2CH    ;2AH
	MOV DX,00
	MUL CX
	MOV DI,AX
	PUSH ES
	MOV AX,03600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+1],04H
	JC ECPM11
	POP ES
	MOV CX,ES:WORD PTR[546H]
	CMP CX,0
	JNZ CPL1
	RET
CPL1: CMP CX,10H
	JC CPL22
	MOV CX,10H
CPL22:  MOV COMN,CX
	MOV BP,0
	MOV SI,148H
	MOV BX,ES:WORD PTR [SI]
	AND BX,1FFFH
CPL2: MOV AX,ES:WORD PTR[SI]
	AND AX,1FFFH
	SUB AX,BX
	JNC CPL3
	NEG AX
CPL3:   CMP AX,05H
	JNC CPL4
	INC BP
CPL4: ADD SI,2
	LOOP CPL2
	MOV AX,COMN
	SUB AX,BP
	CMP AX,06H
	JNC CPL5
	JMP COMP8
CPL5:   RET
ECPM11:POP ES
ECPM1:INC SI
	CMP SI,0CH
	JZ COMP1
	JMP EOMP2 
COMP1:MOV SI,09H
	MOV BP,ES:WORD PTR[546H]
	CMP BP,0
	JNZ CPA1
	RET
CPA1:   CMP BP,10H
	JC CPL5       ; DOMP2
	MOV BP,10H
	MOV COMN,BP
DOMP2:MOV AL,ES:BYTE PTR[SI]
	MOV AH,00H
	DEC AX
	MOV CX,34H   ;2CH      ;2AH
	MOV DX,00
	MUL CX
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
RCPM1:MOV BX,ES:WORD PTR[DI+2]
	POP ES
	CMP BX,0
	JNZ P9P1
	RET
P9P1:   PUSH SI
	SUB SI,09H
	SHL SI,01H
	MOV PRFP[SI],BX
	POP SI
	MOV DI,148H
	MOV CX,COMN
COP4:   MOV AX,ES:WORD PTR[DI]
	AND AX,1FFFH
    ;  OR AX,1000H
	SUB AX,BX
	JNC RCOMP5
	NEG AX
RCOMP5:CMP AX,05H
	JNC COMP6
	DEC BP
	CMP BP,00H
	JNZ COMP6
FP11:   JMP CCP11
COMP6:  ADD DI,02H
	LOOP COP4
	CMP BP,0
	JZ FP11
	INC SI
	CMP SI,0CH
	JZ CCP10
	CMP ES:BYTE PTR[SI],00H
	JZ CCP10
	JMP DOMP2
CCP10: MOV AX,COMN
C0POP:  MOV DX,00H
	MOV CX,40D
	MUL CX
	MOV CX,64H
	DIV CX
	CMP AX,BP
	JC U3              
	JMP CCP11           
U3:     CMP BP,64H
	JC COMP8
	JMP CCP11
COMP8:MOV CX,07H
	  MOV SI,00H    
COP8:     MOV ES:BYTE PTR[SI],00H                       ;clear the regist '55'
C88:      INC SI
	  CMP SI,04H
	  JZ C88
	  LOOP COP8
	CMP SBTI,94H
	JZ Q2
	  CALL DTROY
Q2:       MOV ES:WORD PTR[12],00H
	  MOV ES:WORD PTR[14],00H
	  MOV AL,ES:BYTE PTR[4]
	  OR AL,80H
	  MOV ES:BYTE PTR[4],AL
	  MOV ES:WORD PTR[544H],0
	  MOV ES:WORD PTR[546H],0
	  CMP ES:BYTE PTR[8],0
	  JNZ C8A9
;	  MOV ES:BYTE PTR[4],0
C8A9:     MOV AX,ES
	  SUB AX,4000H
	  MOV DX,0
	  MOV CX,0A1H
	  DIV CX
	  MOV CX,040H
	  MUL CX
	  ADD AX,0D000H
	  PUSH ES
	  CMP AX,0E000H
	  JNC U4
	  MOV ES,AX
	  MOV AL,0CH
	  JMP U5
U4:       SUB AX,1000H
	  MOV ES,AX
	  MOV AL,0DH
U5:       MOV DX,260H
	  OUT DX,AL
	  MOV ES:WORD PTR[4],0000H
	  MOV ES:WORD PTR[6],0000H
	  POP ES
	  MOV AX,0AAAAH
	  RET
CCP11:CMP PRFP[4],00H
	JZ CCP12
	MOV AL,ES:BYTE PTR[11]
	MOV PRFP[4],00
	JMP CCP14
CCP12:  CMP PRFP[2],00H
	JZ CCP13
	MOV AL,ES:BYTE PTR[10]
	MOV PRFP[2],00H
	JMP CCP14
CCP13:  CMP PRFP[0],00H
	JNZ CCP15
	RET
CCP15:MOV PRFP[0],00H   
	MOV AL,ES:BYTE PTR[9]
CCP14:MOV AH,00
	DEC AX
	MOV CX,34H    ;2CH   ;2AH
	MOV DX,00
	MUL CX
	MOV DI,AX
	PUSH ES
	MOV AX,03600H
	MOV ES,AX
	MOV BX,ES:WORD PTR[DI+10]
	MOV CX,ES:WORD PTR[DI+6]
	MOV PWC,BX
	MOV PRIP,CX
	MOV BX,ES:WORD PTR[DI+2]
	POP ES
	MOV SI,148H
	MOV DI,00H
	MOV CX,COMN
COPP4:  MOV AX,ES:WORD PTR[SI]
	AND AX,1FFFH
    ;   OR AX,1000H
	SUB AX,BX
	JNC COMP5
	NEG AX
COMP5:CMP AX,06H
	JNC RCOMP6
	MOV AX,ES:WORD PTR[SI+200H]
	AND AX,0FFFH
	MOV CPA[DI],AX
	MOV AX,ES:WORD PTR[SI+600H]
	MOV CTOA[DI],AX
	ADD DI,02H
RCOMP6:ADD SI,02H
	LOOP COPP4
	MOV CPA[DI],00H
	MOV CTOA[DI],00H
COMP9:  MOV AX,PWC
	CMP AX,28H
	JGE COMP10
	MOV PWCC,03H
	JMP COMP11
COMP10: MOV DX,00H
	MOV CX,15D
	MUL CX
	MOV CX,64H
	DIV CX
	MOV PWCC,AX
COMP11:MOV CX,00H
	MOV DI,00H
	MOV DX,00H
	MOV AX,00H
COP11:ADD AX,CPA[DI]
	JNC COMP12
	INC DX
COMP12: ADD DI,02H
	CMP CPA[DI],00H
	JNZ COP11
	SHR DI,01H
	MOV CX,DI
	CMP CX,00H
	JZ CP12
	DIV CX
CP12:   MOV BX,AX
	MOV AX,PWC
	SUB AX,BX
	JNC COMP13
	NEG AX
COMP13:CMP AX,PWCC
	JNC COP14       ;COMP8A
	JMP CCP11            
;       CMP SBTI,94H;66H
;       JZ COP14
;       JMP CCP11
;COMP8A:        CMP SBTI,94H;66H
;       JNZ COP14
;       JMP COMP8
COP14:MOV AX,PRIP
	MOV DX,00H
	MOV CX,5D
	MUL CX
	MOV CX,64H
	DIV CX
	MOV PRIBC,AX
      MOV BX,PRIP
	SUB BX,AX
	MOV TOA05,BX
	MOV SI,00H
COOP15:MOV BX,CTOA[SI+2]
	SUB BX,CTOA[SI]
	MOV CTOA[SI],BX
	ADD SI,02H
	CMP CTOA[SI],00H
	JNZ COOP15
      SUB SI,02H
	MOV CTOA[SI],00H
	MOV SI,00H
	MOV CX,PRIP
	MOV BP,00H
COPT5:  MOV DX,00H
	  CMP CX,0
	  JNZ COPXA
	  RET
COPXA:        MOV AX,CTOA[SI]
	DIV CX
	CMP DX,PRIBC
	JC COPT3
	CMP DX,TOA05
	JNC COPT3
	INC BP
COPT3:  ADD SI,02H
	CMP CTOA[SI],00H
	JZ COPT4
	JMP COPT5
COPT4:  SHR SI,01H
	MOV AX,SI
	MOV DX,00H
	MOV CX,70D
	MUL CX
	MOV CX,64H
	DIV CX
	CMP BP,AX
	JNC RCOMP17
	JMP CCP11       
RCOMP17:        JMP COMP8
COMP ENDP
RTRAN PROC
	MOV AX,3000H
	MOV DS,AX
	CMP WORD PTR RUSLT[6],10005D
	JNC RTVQ
	CMP WORD PTR RUSLT[6],32D
	JNC RTV 
	CMP WORD PTR RUSLT[6],0
	JZ RTV
RTVQ:	RET
RTV:    MOV RUSLT[0],1BH
	MOV AL,ES:BYTE PTR[4]
	AND AL,80H
	CMP AL,80H
	JNZ PDTI
	MOV RUSLT[0],0C9H
PDTI:   CMP ES:BYTE PTR[8],00H
	JNZ RTPA
	MOV AX,0AAH
	MOV RUSLT[0],1BH
	RET
RTPA:   MOV BP,09H
RTRAN5:MOV AGB,0
	MOV AGF,0
	MOV API,0
	MOV AGW,0
	MOV EDOA,0
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,00H
	CMP AX,0
	JNZ RTAD
	JMP R8NA
RTAD:   DEC AX
      MOV CX,34H     ;2CH     ;2AH
	MOV DX,00
	MUL CX
	MOV DI,AX
	PUSH ES
	MOV AX,03600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+1],04H
	JC R1
	MOV AGP1,167D
	CMP RUSLT[1],4
	JC R1
	POP ES
	JMP R8N2   ;R2
R1:   MOV AX,ES:WORD PTR[DI+4]
	MOV PDOA,AX
	MOV AL,ES:BYTE PTR[DI+41]
	MOV BC2,AL
	MOV AL,ES:BYTE PTR[DI+43]
	MOV BC3,AL
      MOV AGP1,04H   ;08D
R2:   MOV AX,ES:WORD PTR[DI+6]
	MOV PRIP,AX
	MOV AX,ES:WORD PTR[DI+10]
	MOV PWC,AX
	MOV AL,ES:BYTE PTR[DI+1]
	MOV TY,AL      
	CMP AL,03H
	JC RA1Q
	MOV PRIBC,250D
	JMP RA2
RA1Q:   MOV PRIBC,15D
RA2:    MOV AX,ES:WORD PTR[DI+2]
IIUY:	POP ES
	MOV BX,DS:WORD PTR RUSLT[2]
PP09:   SUB AX,BX
	JNC RTRAN1
	NEG AX
RTRAN1: CMP AX,AGP1
	JC RTRAN2
RTAR: JMP RTRAN3
RTRAN2:
	MOV AGF,1
	MOV AGB,1
	JMP RTRAN3
TRS09:
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,0
	DEC AX
	MOV CL,34H      ;2CH   ;2AH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+42],1DH
	JZ KOI
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ KOI
	MOV ES:BYTE PTR[DI+41],0
	POP ES
	RET
KOI:    MOV ES:WORD PTR[DI+41],0
	POP ES
TRS0:
;	 CALL SCPR
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,00H
	MOV WORD PTR RUSLT[40],AX
U76: ; CALL SRUM1
;       MOV AL,ES:BYTE PTR[BP]
;       MOV AH,0
	CALL STRUM1
	CALL OUTP
	CALL CNSN1
	CALL CLEAR
	MOV ES:BYTE PTR[0DH],0
R8N4:   MOV AGB,0
	MOV API,0
	INC BP
	CMP BP,0CH
	JZ R8N3
	CMP ES:BYTE PTR[BP],0
	JZ R8N3
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,0
	DEC AX
	MOV CL,34H     ;2CH   ;2AH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ R8N5
;	INC ES:BYTE PTR[DI+41]
R8N5: POP ES
	JMP R8N4
R8N3:	
	RET
RTRAN3:MOV BX,DS:WORD PTR RUSLT[4]
	MOV AX,PDOA
	  CMP AX,BX
	  JNC SZZ
	  XCHG AX,BX
SZZ:      SUB AX,BX
	  CMP AX,20D ;10D   ;30D
	  JC SZZ1
	  CMP AX,340D   ;330D
	  JC SZZ2
SZZ1:	MOV EDOA,1
SZZ2:      MOV AX,PWC
	CMP AX,28H
	JGE RTAN2
	MOV PWCC,04H
	JMP RTAN1
RTAN2:MOV DX,00H
	MOV CX,10D
	MUL CX
	MOV CX,64H
	DIV CX
	MOV PWCC,AX     
RTAN1:  MOV AX,PWC
	MOV BX,DS:WORD PTR RUSLT[10]
	SUB AX,BX
	JNC RAN6
	NEG AX
RAN6:   CMP AX,PWCC
	JNC RTRAN77   ;8
RTRAN7:INC AGB
	MOV AGW,1
RTRAN77:MOV API,1  
	MOV AX,DS:WORD PTR RUSLT[6]
	CMP AX,PRIP
	JC NJH2 
      MOV AX,PRIP
NJH2:  
	MOV DX,00H
	MOV CX,PRIBC     ;15D
	MUL CX
	MOV CX,3E8H    ;64H
	DIV CX
	MOV PRIBC,AX
	CMP PRIBC,0
	JNZ OPO0
	INC PRIBC
	INC PRIBC
OPO0:   MOV AX,PRIP
	MOV BX,DS:WORD PTR RUSLT[6]
       MOV DX,0
       CMP AX,BX
       JNC R18
       XCHG AX,BX
R18: 
;      SUB AX,BX	   ;
;	CMP AX,PRIBC   ;
;	JNC R8N1       ;
	PUSH AX
	CMP BX,0
	JZ RTRAN6
      DIV BX
	CMP AX,2
	JC RTRAN6
	INC API
	MOV CX,PRIBC
	MUL CL
	MOV PRIBC,AX
RTRAN6:POP AX
	 CMP DX,PRIBC
	JBE R8N1Q        ;RTRAN8
	SUB BX,DX
	CMP BX,PRIBC
	JG R8N1
	INC API
R8N1Q:	INC AGB
	INC API
R8N1: CMP EDOA,1
      JZ NJLD	   ;JNZ NJL
	CMP BC2,0AAH
	JZ NJLDK
	CMP BC3,1DH
	JNZ NJL
	JMP NJLDK
NJLD:	CMP AGB,3
	JC GGB1 
NJLDK:	JMP R8N2
GGB1:	NOP
GGB11:      CMP AGB,2
	JC PLK
	JMP MJIR   ;R8N2        ??????????
PLK:  NOP
	CMP AGF,1 
	JNZ PJN    ;PLL2 
	JMP MJIR   ;RET
PLL2: NOP
	CMP AGB,2
	JC PJN
;	CMP AGW,1
;	JZ PJN
	JMP R8N2
PJN:	MOV AL,ES:BYTE PTR[BP]
	MOV AH,0
	DEC AX
	MOV CL,34H      ;2CH   ;2AH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ R8N5Y
;	INC ES:BYTE PTR[DI+41]
R8N5Y:  POP ES
	INC BP
	CMP BP,0CH;
	JC MMMJ
	JMP RTOUT2;
MMMJ:   JMP  RTRAN5   ;R8N4    ;RTRAN5 
;MJI:  CMP AGF,1
;	JNZ MJIR  ;NJL
;	CMP API,3
;	JC MJIR
;;	CMP API,2
;;	JNZ NJL
;	RET 
NJL:	CMP AGB,3
	JNC NJLV2
	JMP NJLV
NJLV2:PUSH ES
	MOV AX,3600H
	MOV ES,AX
	MOV AX,WORD PTR RUSLT[4]
	CMP ES:WORD PTR[DI+46],0
	JNZ NJLV3
	MOV ES:WORD PTR[DI+46],AX
	JMP NJLV5
NJLV3:	CMP ES:WORD PTR[DI+48],0
	JNZ NJLV4
	MOV ES:WORD PTR[DI+48],AX
	MOV CX,ES:WORD PTR[DI+46]
	  CMP AX,CX
	  JNC NSXZZ
	  XCHG AX,CX
NSXZZ:      SUB AX,CX
	  CMP AX,20D   ;30D
	  JC NX55     ;Z1Z
	  CMP AX,340D   ;330D
	  JC NJLV5
NX55:MOV AX,ES:WORD PTR[DI+48]
NJLV6:	MOV ES:WORD PTR[DI+4],AX
	MOV ES:WORD PTR[DI+46],0
	MOV ES:WORD PTR[DI+48],0
	MOV ES:WORD PTR[DI+41],0
	MOV ES:BYTE PTR[DI+43],0AAH
	MOV ES:WORD PTR[DI+50],0
NJLV5:	POP ES
	RET	
NJLV4:MOV ES:WORD PTR[DI+50],AX    
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3

	MOV CX,ES:WORD PTR[DI+48]
	  CMP AX,CX
	  JNC NSXZY
	  XCHG AX,CX
NSXZY:      SUB AX,CX
	  CMP AX,20D   ;30D
	  JC NSX5Y     ;Z1Z
	  CMP AX,340D   ;330D
	  JC NJLVY
NSX5Y:	MOV AX,ES:WORD PTR[DI+50]
	JMP NJLV6
NJLVY:	MOV AX,ES:WORD PTR[DI+50]
	MOV CX,ES:WORD PTR[DI+46]
	  CMP AX,CX
	  JNC NSXZX
	  XCHG AX,CX
NSXZX:  SUB AX,CX
	  CMP AX,20D   ;30D
	  JC NS5X     ;Z1Z
	  CMP AX,340D   ;330D
	  JC NJLV66
NS5X:	JMP NSX5Y
NJLV66:	NOP        ;;??????????????
	JMP NJLV5
NJLV: CMP AGB,2
	JC NJLV1
	CMP AGW,1
	JZ NJLV1
	JMP NJLV2
NJLV1:
	JMP RTRAN8
MJIR:	  MOV RUSLT[0],0C9H    ;1BH
	CMP RUSLT[1],02H
	JZ R8N2Q
	CMP RUSLT[1],3
	JZ R8N2Q
	JMP R8N2P
;	CMP TY,3
;	JNZ R8N2P
R8N2Q:JMP R8N2
R8N2P:PUSH ES
	MOV AX,3600H
	MOV ES,AX
      MOV ES:WORD PTR[DI+46],0
	MOV ES:WORD PTR[DI+48],0
	MOV ES:WORD PTR[DI+50],0
	JMP NSX55
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ P9P8
	MOV ES:BYTE PTR[DI+41],0
P9P8: NOP
	;MOV BX,ES:WORD PTR[DI+4]
;NOOO9:	PUSH BX
;	MOV AX,WORD PTR RUSLT[4]
;	  CMP AX,BX
;	  JNC NSXZZ
;	  XCHG AX,BX
;NSXZZ:      SUB AX,BX
;	  POP BX
;	  CMP AX,20D   ;30D
;	  JC NSX55     ;Z1Z
;	  CMP AX,340D   ;330D
;	  JNC NB7Z
;	JMP NSX55
NSXZ1T:POP ES
	RET
;NB7Z:       CMP AX,361D
;	  JNC NXS551            ;Z1Z
NSX55:MOV AL,RUSLT[1]
	CMP AL,ES:BYTE PTR[DI+1]
	JNZ NSXZ1T
NSXZ1Z:	CMP ES:BYTE PTR[DI+41],0AAH
	JZ P9P9
	CMP ES:BYTE PTR [DI+42],1DH
	JNZ NSX5X   ;P9P8
P9P9:	MOV ES:WORD PTR[41],0
	MOV RUSLT[0],1BH
NXS551:NOP
NSX5X:MOV ES:WORD PTR[DI+41],0
	MOV ES:BYTE PTR[DI+43],0AAH
	POP ES
	JMP TRS0
R8N2:  
      PUSH ES
	MOV AX,3600H
	MOV ES,AX      
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ TER
	MOV ES:BYTE PTR[DI+41],0
TER:  MOV ES:WORD PTR[DI+46],0
	MOV ES:WORD PTR[DI+48],0
	MOV ES:WORD PTR[DI+50],0 
      MOV BX,WORD PTR RUSLT[4]
;	MOV AX,BX
;	SUB AX,328D
;	JNC KKK
;	NEG AX
;KKK:	CMP AX,10
;	JNC KKK1
;	MOV AX,0FDH
;	OUT 21H,AL
;	INT 3
KKK1:	JMP SXZ1Z
;	CMP BX,10D
;	JC SXZ1Z     ;OOO9
;	CMP BX,350D
;	JNC SXZ1Z  ;OOO9
;OOO9:	PUSH BX
;	MOV AX,ES:WORD PTR[DI+4]
;	  CMP AX,BX
;	  JNC SXZZ
;	  XCHG AX,BX
;SXZZ:      SUB AX,BX
;	  POP BX
;	  CMP AX,20D ;10D   ;30D
;	  JC SXZ1Z
;	  CMP AX,340D   ;330D
;	  JNC B7Z
;	  INC ES:BYTE PTR[DI+43]
;	  CMP ES:BYTE PTR[DI+43],2    ;40D
;	  JNC SXZ1Z 
;	  JMP SX55
;B7Z:       CMP AX,361D
;	  JC SXZ1Z
;	  JMP SX55
SXZ1Z:  MOV ES:WORD PTR[DI+4],BX
	MOV ES:BYTE PTR[DI+43],0AAH
SX55:   MOV AL,RUSLT[12]
	MOV ES:BYTE PTR[DI+12],AL
	CMP API,3
	JC SX55Q
	INC ES:BYTE PTR[DI+44] 
	JMP SX55QQ
;	MOV AX,WORD PTR RUSLT[6]
;	CMP AX,ES:WORD PTR[DI+6]
;	JNC SX55Q  
;	MOV CX,ES:WORD PTR[DI+6]
;	SUB CX,AX
;	CMP CX,15D
;	JC SX55Q
;	 MOV CL,RUSLT[1]
;	  CMP CL,ES:BYTE PTR[DI+1]
;	  JNZ SX55Q   ;TER1M     ;TR1M
; 	MOV ES:WORD PTR[DI+6],AX
;	MOV API,2
SX55Q:MOV ES:BYTE PTR[DI+44],0
SX55QQ:	CMP ES:BYTE PTR[DI+41],0AAH
	JZ TER2
	CMP ES:BYTE PTR[DI+42],1DH
	JNZ TER1
TER2:   MOV ES:BYTE PTR[DI+44],0
	  MOV ES:BYTE PTR[DI+42],0
	MOV ES:BYTE PTR[DI+41],0
	MOV RUSLT[0],1BH
TR1M:;	MOV AX,ES:WORD PTR[DI+4]
;	MOV WORD PTR RUSLT[4],AX
	MOV ES:WORD PTR[DI+41],0
	MOV ES:BYTE PTR[DI+43],0AAH
	POP ES
	JMP TRS0
TER1:   MOV ES:BYTE PTR[DI+41],0
TER1M: ;     POP ES
;	CMP API,2
;	JNZ TTTR
	CMP ES:BYTE PTR[DI+44],4
	JC TTTR
	MOV ES:BYTE PTR[DI+44],0
	MOV RUSLT[0],0C9H
	POP ES
	JMP TRS0
TTTR: POP ES
      RET    ;R8N4   
RTRAN8:
;	CMP RUSLT[1],02H
;	JNZ PTRL1
;	RET
;PTRL1:	CMP RUSLT[1],3
;	JNZ PTRL2
;	RET
PTRL2:      PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ R8N
;	INC ES:BYTE PTR[DI+41]
R8N:    POP ES
      INC BP
;	CMP BP,0BH
;	JNZ R8NA
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
R8NA:   CMP BP,0CH
	JNC RTOUT2   ;JZ
	CMP ES:BYTE PTR[BP],00H
	JZ RTOUT1
	JMP RTRAN5
RTOUT1:
;	 CALL SCPR
	INC NUMB
	INC ES:BYTE PTR[8]
I99:    MOV AL,NUMB
	MOV ES:BYTE PTR[BP],AL
;	MOV AX,WORD PTR RUSLT[2]
;	CMP AX,19B0H
;	JC RTRANP
;RTRATY:	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
;RTRANP:CMP AX,1270H
;	JC RTRATY
	MOV RUSLT[0],1BH
	CALL STRUM1
;	CALL OUTP       ;Set out the result to ES:BYTE PTR[10]
	CALL CNSN1
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,0
	DEC AX
	MOV CL,34H      ;2CH   ;2AH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	MOV ES:BYTE PTR[DI+41],0AAH
	POP ES

;	CMP RUSLT[35],1
;	JZ REEW
;	MOV RUSLT[33],10H
;	MOV RUSLT[35],04H
;	MOV RUSLT[0],1CH
;	CALL OUTP
REEW:	CALL CLEAR
	MOV ES:BYTE PTR[0DH],0
	RET
RTOUT2:;MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
      CMP ES:BYTE PTR[11],0
	JNZ UU6T
      MOV RUSLT[0],1BH
UU6T: MOV AL,ES:BYTE PTR[11]
	MOV AH,0
	DEC AX
      MOV CL,34H     ;2CH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ ER2
	CMP ES:BYTE PTR[DI+42],1DH
	JZ ER2
	MOV AX,WORD PTR RUSLT[4]
	MOV ES:WORD PTR[DI+4],AX
	MOV ES:BYTE PTR[DI+43],0AAH
	MOV ES:BYTE PTR[DI+41],0
	POP ES
	JMP RREEW
ER2:  MOV RUSLT[0],1BH
	MOV ES:BYTE PTR[DI+44],0
      MOV ES:BYTE PTR[DI+42],0
	MOV ES:BYTE PTR[DI+41],0
	MOV ES:BYTE PTR[DI+43],0
	POP ES
;      CALL SCPR
	MOV AL,ES:BYTE PTR[11]
	MOV AH,00H
	CALL STRUM1
	CALL OUTP       ;Set out the result to ES:BYTE PTR[11]
	CALL CNSN1
	CMP RUSLT[35],1
	JZ RREEW
	MOV RUSLT[33],13H
	MOV RUSLT[35],04H
	MOV RUSLT[0],1CH
	CALL OUTP
RREEW:	CALL CLEAR
	MOV ES:BYTE PTR[0DH],0
	RET
RTRAN ENDP
RTRA1 PROC
	MOV AX,3000H
	MOV DS,AX
	CMP WORD PTR RUSLT[6],10005D
	JNC QRTVQ
	CMP WORD PTR RUSLT[6],32D
	JNC QRTV 
	CMP WORD PTR RUSLT[6],0
	JZ QRTV
	CMP RUSLT[1],2
	JZ QRTVQ
	CMP RUSLT[1],3
	JNZ QRTV
QRTVQ:	RET
QRTV:    MOV RUSLT[0],1BH
	MOV AL,ES:BYTE PTR[4]
	AND AL,80H
	CMP AL,80H
	JNZ QPDTI
	MOV RUSLT[0],0C9H
QPDTI:   CMP ES:BYTE PTR[8],00H
	JNZ QRTPA
	MOV AX,0AAH
	MOV RUSLT[0],1BH
	RET
QRTPA:   MOV BP,09H
QRTRAN5:	MOV AGB,0
	MOV AGF,0
	MOV API,0
QLT:	 MOV AL,ES:BYTE PTR[BP]
	MOV AH,00H
	CMP AX,0
	JNZ QRTAD
	JMP QR8NA
QRTAD:   DEC AX
      MOV CX,34H     ;2CH     ;2AH
	MOV DX,00
	MUL CX
	MOV DI,AX
	PUSH ES
	MOV AX,03600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+1],04H
	JC QR1
	MOV AGP1,167D
	CMP RUSLT[1],4
	JC QR2
	POP ES
	JMP QR8N2   ;R2
QR1:   
     MOV AGP1,03H   ;08D
QR2:     MOV AX,ES:WORD PTR[DI+6]
	MOV PRIP,AX
	MOV AX,ES:WORD PTR[DI+10]
	MOV PWC,AX
	MOV AL,ES:BYTE PTR[DI+1]
	MOV TY,AL      
	CMP AL,03H
	JC QRA1Q
	MOV PRIBC,250D
	JMP QRA2
QRA1Q:   MOV PRIBC,15D
QRA2:    MOV AX,ES:WORD PTR[DI+2]
QIIUY:	POP ES
	MOV BX,DS:WORD PTR RUSLT[2]
QPP09:   SUB AX,BX
	JNC QRTRAN1
	NEG AX
QRTRAN1: CMP AX,AGP1
	JC QRTRAN2
QRTAR:   JMP QRTRAN3
QRTRAN2:
	MOV AGF,1
	MOV AGB,1
	JMP QRTRAN3
QTRS09:
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,0
	DEC AX
	MOV CL,34H     ;2CH   ;2AH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+42],1DH
	JZ QKOI
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ QKOI
	MOV ES:BYTE PTR[DI+41],0
	POP ES
	RET
QKOI:    MOV ES:WORD PTR[DI+41],0
	POP ES
QTRS0:
	 CALL SCPR
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,00H
	MOV WORD PTR RUSLT[40],AX
QU76: ; CALL SRUM1
;       MOV AL,ES:BYTE PTR[BP]
;       MOV AH,0
	CALL STRUM1
	CALL OUTP
	CALL CNSN1
	CALL CLEAR
	MOV ES:BYTE PTR[0DH],0
QR8N4:   MOV AGB,0
	MOV API,0
	INC BP
	CMP BP,0CH
	JZ QR8N3
	CMP ES:BYTE PTR[BP],0
	JZ QR8N3
	MOV AL,ES:BYTE PTR[BP]
	MOV AH,0
	DEC AX
	MOV CL,34H    ;2CH   ;2AH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ QR8N5
;	INC ES:BYTE PTR[DI+41]
QR8N5: POP ES
	JMP QR8N4
QR8N3:
	RET
QRTRAN3:
      MOV AX,PWC
	CMP AX,28H
	JGE QRTAN2
	MOV PWCC,04H
	JMP QRTAN1
QRTAN2:MOV DX,00H
	MOV CX,10D
	MUL CX
	MOV CX,64H
	DIV CX
	MOV PWCC,AX     
QRTAN1:  MOV AX,PWC
	MOV BX,DS:WORD PTR RUSLT[10]
	SUB AX,BX
	JNC QRAN6
	NEG AX
QRAN6:   CMP AX,PWCC
	JC QRTRAN7
	JMP QRTRAN77   ;8
QRTRAN7:INC AGB
QRTRAN77:MOV AL,TY
	CMP BYTE PTR RUSLT[1],AL	
	JNZ QR8N1 
	MOV AX,DS:WORD PTR RUSLT[6]
	CMP AX,PRIP
	JC NJH1 
      MOV AX,PRIP
NJH1:	MOV DX,00H
	MOV CX,PRIBC     ;15D
	MUL CX
	MOV CX,3E8H    ;64H
	DIV CX
	MOV PRIBC,AX
	CMP PRIBC,0
	JNZ QOPO0
	INC PRIBC
QOPO0:   MOV AX,PRIP
	MOV BX,DS:WORD PTR RUSLT[6]
       MOV DX,0
       CMP AX,BX
       JNC QR18
       XCHG AX,BX
QR18:	PUSH AX
	CMP BX,0
	JZ QRTRAN6
      DIV BX
	CMP AX,2
	JC QRTRAN6
;	MOV API,1
	MOV CX,PRIBC
	MUL CL
	MOV PRIBC,AX
QRTRAN6:POP AX
	 CMP DX,PRIBC
	JBE QR8N1Q        ;RTRAN8
	SUB BX,DX
	CMP BX,PRIBC
	JG QR8N1
QR8N1Q:	INC AGB
	INC API
QR8N1: CMP AGB,3
	JC QGGB1 
	JMP QR8N2
QGGB1:	CMP AGB,2
	JZ QMJI
QPLK:  CMP RUSLT[1],3
	JNZ QPLL1
	RET 
QPLL1:	CMP RUSLT[1],2
	JNZ QPLL2
	RET
QPLL2:	MOV AL,ES:BYTE PTR[BP]
	MOV AH,0
	DEC AX
	MOV CL,34H   ;2CH   ;2AH
	MUL CL
	MOV DI,AX
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ QR8N5Y
;	INC ES:BYTE PTR[DI+41]
QR8N5Y:  POP ES
	INC BP
	CMP BP,0CH;
	JC QMMMJ
	JMP QRTOUT2;
QMMMJ:   JMP  QRTRAN5   ;R8N4    ;RTRAN5 
QMJI:  CMP API,1
	JZ QMJIR
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+41],0AAH
	POP ES
	JZ QR8N2P
QNJL:	JMP QRTRAN8
QMJIR:	  MOV RUSLT[0],0C9H    ;1BH
	CMP RUSLT[1],02H
	JZ QR8N2Q
	CMP RUSLT[1],3
	JZ QR8N2Q
	CMP TY,3
	JNZ QR8N2P
QR8N2Q:JMP QR8N2
;CMP ES:BYTE PTR[6],88H
;	JNZ R8N2
;	RET
QR8N2P:		PUSH ES
	MOV AX,3600H
	MOV ES,AX
QP9P8: MOV BX,ES:WORD PTR[DI+4]
QNOOO9:	PUSH BX
	MOV AX,WORD PTR RUSLT[4]
	  CMP AX,BX
	  JNC QNSXZZ
	  XCHG AX,BX
QNSXZZ:      SUB AX,BX
	  POP BX
	  CMP AX,20D   ;30D
	  JC QNSX55     ;Z1Z
	  CMP AX,340D   ;330D
	  JNC QNB7Z
	JMP QNSX55
QNSXZ1T:	  POP ES
	RET
QNB7Z:       CMP AX,361D
	  JNC QNXS551            ;Z1Z
QNSX55:MOV AL,RUSLT[1]
	CMP AL,ES:BYTE PTR[DI+1]
	JNZ QNSXZ1T
QNSXZ1Z:	CMP ES:BYTE PTR[DI+41],0AAH
	JZ QP9P9
	CMP ES:BYTE PTR [DI+42],1DH
	JNZ QNSX5X   ;P9P8
QP9P9:	MOV ES:WORD PTR[41],0
	MOV RUSLT[0],1BH
QNXS551:	MOV AX,ES:WORD PTR[DI+4]
	MOV WORD PTR RUSLT[4],AX
QNSX5X:MOV ES:WORD PTR[DI+41],0
	POP ES
	JMP QTRS0
QR8N2:  MOV API,0  
	 PUSH ES
	MOV AX,3600H
	MOV ES,AX      
QTER:    MOV BX,WORD PTR RUSLT[4]
;	CMP BX,10D
;	JC QSXZ1Z     ;OOO9
;	CMP BX,350D
;	JNC QSXZ1Z  ;OOO9
;QOOO9:	PUSH BX
;	MOV AX,ES:WORD PTR[DI+4]
;	  CMP AX,BX
;	  JNC QSXZZ
;	  XCHG AX,BX
;QSXZZ:      SUB AX,BX
;	  POP BX
;	  CMP AX,20D ;10D   ;30D
;	  JC QSXZ1Z
;	  CMP AX,340D   ;330D
;	  JNC QB7Z
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
;	  JMP QSX55
;QB7Z:       CMP AX,361D
;	  JC QSXZ1Z
;	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
;	  JMP QSX55
QSXZ1Z:  MOV AL,RUSLT[1]
	  CMP AL,ES:BYTE PTR[DI+1]
	  JNZ QSX55Q   ;TER1M     ;TR1M
	  MOV ES:WORD PTR[DI+4],BX
QSX55:   MOV AL,RUSLT[12]
	MOV ES:BYTE PTR[DI+12],AL
;	MOV AX,WORD PTR RUSLT[6]
;	CMP AX,ES:WORD PTR[DI+6]
;	JNC QSX55Q  
;	MOV CX,ES:WORD PTR[DI+6]
;	SUB CX,AX
;	CMP CX,32D
;	JC QSX55Q
;	MOV ES:WORD PTR[DI+6],AX
;	MOV API,2
QSX55Q:	CMP ES:BYTE PTR[DI+41],0AAH
	JZ QTER2
	CMP ES:BYTE PTR[DI+42],1DH
	JNZ QTER1
QTER2:
	  MOV ES:BYTE PTR[DI+42],0
	MOV ES:BYTE PTR[DI+41],0
	MOV RUSLT[0],1BH
QTR1M:	MOV AX,ES:WORD PTR[DI+4]
	MOV WORD PTR RUSLT[4],AX
	MOV ES:WORD PTR[DI+41],0
	POP ES
	JMP QTRS0
QTER1:   MOV ES:BYTE PTR[DI+41],0
QTER1M:      POP ES
	CMP API,2
	JNZ QTTTR
	MOV RUSLT[0],0C9H
	JMP QTRS0
QTTTR:	JMP QR8N4   ;RET
QRTRAN8:CMP RUSLT[1],02H
	JNZ QPTRL1
	RET
QPTRL1:	CMP RUSLT[1],3
	JNZ QPTRL2
	RET
QPTRL2:      PUSH ES
	MOV AX,3600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ QR8N
;	INC ES:BYTE PTR[DI+41]
QR8N:    POP ES
      INC BP
QR8NA:   CMP BP,0CH
	JNC QRTOUT2   ;JZ
	CMP ES:BYTE PTR[BP],00H
	JZ QRTOUT1
	JMP QRTRAN5
QRTOUT1:
	 CALL SCPR
	INC NUMB
	NOP
	NOP
	INC ES:BYTE PTR[8]
QI99:    MOV AL,NUMB
	MOV ES:BYTE PTR[BP],AL
;	MOV AX,WORD PTR RUSLT[2]
;	CMP AX,19B0H
;	JC RTRANP
;RTRATY:	MOV AL,0FDH
;	OUT 21H,AL
;	INT 3
;RTRANP:CMP AX,1270H
;	JC RTRATY
	MOV RUSLT[0],1BH
	CALL STRUM1
	CALL OUTP       ;Set out the result to ES:BYTE PTR[10]
	CALL CNSN1
	CALL CLEAR
	MOV ES:BYTE PTR[0DH],0
	RET
QRTOUT2:
      CMP ES:BYTE PTR[11],0
	JNZ QUU6T
      MOV RUSLT[0],1BH
QUU6T:      CALL SCPR
	MOV AL,ES:BYTE PTR[11]
	MOV AH,00H
	CALL STRUM1
	CALL OUTP       ;Set out the result to ES:BYTE PTR[11]
	CALL CNSN1
	CALL CLEAR
	MOV ES:BYTE PTR[0DH],0
	RET
RTRA1 ENDP
COMQ PROC
      CMP ES:BYTE PTR[8],00H
	JNZ RTPA5
	MOV AX,0AAH
	RET
RTPA5:  
      MOV BP,09H
HH4:      MOV AL,ES:BYTE PTR[BP]
	MOV AH,00H
	DEC AX
	MOV CX,34H    ;2CH     ;2AH
	MOV DX,00
	MUL CX
	MOV DI,AX
	PUSH ES
	MOV AX,03600H
	MOV ES,AX
	CMP ES:BYTE PTR[DI+1],04H
	JNZ R11
	MOV AGP1,167D
	JMP R22
R11:     MOV AGP1,08H     ;4D
R22:  MOV AX,ES:WORD PTR[DI+6]
	MOV PRIP,AX
	CMP ES:BYTE PTR[DI+1],03H
	JNZ R3W
	MOV PRIBC,200D
	JMP R2W
R3W:    MOV PRIBC,15D
R2W:    MOV AX,ES:WORD PTR[DI+2]
      POP ES
	MOV BX,DS:WORD PTR RUSLT[2]
	SUB AX,BX
	JNC TRAN1
	NEG AX
TRAN1: CMP AX,AGP1
	JC TIRN2
	MOV AX,0AAH
TIRN2:  RET
      JNC HH1;  JC TRAN2
      MOV AX,PRIP ;MOV AX,0AAH
	MOV DX,0    ;MOV BX,AX
	MOV CX,PRIBC
	MUL CX
	MOV CX,3E8H
	DIV CX
	MOV PRIBC,AX
	CMP PRIBC,0
	JZ HH2
	INC PRIBC
HH2:    MOV AX,PRIP
	MOV BX,DS:WORD PTR RUSLT[6]
	SUB AX,BX
	JNC HH3
	NEG AX
HH3:    CMP AX,PRIBC
	JNC HH1
	RET
HH1:    INC BP
	CMP BP,0CH
	JNC TRAN2
	CMP ES:BYTE PTR[BP],0
	JZ HH5
	JMP HH4
HH5:    MOV AX,0AAH
TRAN2:
	RET
COMQ ENDP
DISNUM PROC
	PUSH ES
	MOV AX,3600H
	MOV ES,AX
	MOV DI,0
DSNU:   CMP ES:BYTE PTR[DI],0
	JZ DSNU1
	CMP ES:BYTE PTR[DI+41],0AAH
	JZ DSNU3
	CMP ES:BYTE PTR[DI+35],1
	JZ L1U1
	CMP ES:BYTE PTR[DI+41],12D  ;4D    ;80D??????????
	JNC DSNU2
	JMP DSNU3 
L1U1:	CMP ES:BYTE PTR[DI+41],3   ;14D
	JNC DSNU2
DSNU3:ADD DI,34H   ;2CH    ;2AH
      CMP DI,13620D  ;8800D
	JC DSNU
DSNU1: POP ES
	RET
DSNU2:MOV AH,0
	MOV AL,ES:BYTE PTR[DI+40]
	MOV WORD PTR RUSLT[40],AX
	MOV ES:BYTE PTR[DI+41],0AAH
	MOV RUSLT[0],1DH
	CALL OUTP
	JMP DSNU3
DISNUM ENDP

CACULATE PROC
       RET
	PUSH ES
	PUSH BX 
	MOV BX,03600H
	MOV ES,BX
	POP BX
	MOV AH,00
	DEC AX
	MOV CX,34H    ;2CH    ;2AH
	MOV DX,00H
	MUL CX
	MOV DI,AX
	CMP ES:BYTE PTR[DI+1],04H
	JC CACUL1    ;JNZ CACUL1
	MOV AX,0AAH
	POP ES 
	RET
CACUL1:MOV AX,00H
	POP ES
	RET
CACULATE ENDP
SCPEA PROC
;       RET
	MOV AX,4000H
	MOV ES,AX
EAP2:   CMP ES: BYTE PTR[0],0FFH
	JNZ EAP
	CMP ES:BYTE PTR[8],0
	JZ EAP
	MOV AL,ES:[4]
	AND AL,10H
	CMP AL,10H
	JZ EAP
	CALL SCPAA
EAP:  PUSH DS
	MOV AX,3000H
	MOV DS,AX
	MOV AX,ACHNR
	CMP AX,CHNRT
	POP DS
	JNC XPJ5
	RET
XPJ5:   MOV AX,ES
	ADD AX,0A1H
	MOV ES,AX
	CMP AX,CHNRT
	JNC EAP1
	JMP EAP2
EAP1:   RET
SCPEA ENDP

SCPAA PROC
	  MOV AL,ES:[4]
	  AND AL,10H
	  CMP AL,10H
	  JNZ RA1 
	  RET
RA1:	MOV T1,0
	MOV T2,0
	MOV AL,1CH
	MOV RUSLT[0],AL
	MOV AX,00H
	MOV CX,42D
	  MOV SI,01H
SCPA0:  MOV RUSLT[SI],AL
	INC SI
	LOOP SCPA0
	  MOV SI,0
	MOV PASL[0],00
	MOV PASL[2],00
	MOV PASL[4],00
	MOV PASR[0],0
	MOV PASR[2],0
	MOV PASR[4],0
	MOV CX,61
SCAD:   MOV PASI[SI],00
	ADD SI,02
	LOOP SCAD
	MOV CWI,0
	MOV SI,00H
	MOV DI,00H
	MOV EPA,00H
	MOV CX,100H
SCPA1:  MOV SCPA[DI],AX
	ADD DI,02H
	LOOP SCPA1
	MOV CX,100H
SCPA2:  MOV SCTON[SI],AX
	ADD SI,02H
	LOOP SCPA2
	MOV AL,01H
	MOV DI,00H
	MOV CX,100H
SCPA3:  MOV SCTI[DI],AL
	INC DI
	LOOP SCPA3
	MOV AL,ES:[9]
	  CMP AL,0
	  JNZ SCAE
	MOV AL,ES:BYTE PTR[4]
	AND AL,10H
	MOV ES:BYTE PTR[4],AL
	  RET
SCAE:     MOV AH,0
	  MOV RUSLT[40],AL
	  MOV RUSLT[41],AH
	  DEC AX
	MOV CL,34H    ;2CH   ;2AH
	MUL CL
	MOV SI,AX
	PUSH ES
	MOV SCPC,00H
	MOV AX,3600H
	MOV ES,AX
	MOV DX,ES:[SI+2]
	CMP ES:BYTE PTR[SI+1],4
	JC SEP5
	POP ES
	MOV AX,ES:[410H]
	MOV SCPA[0],AX
	JMP SAC6
SEP5:   POP ES
	MOV SI,10H
	MOV DI,0
	MOV CX,255D
SCPA6:  MOV AX,ES:[SI]
	AND AX,1FFFH
	SUB AX,DX
	JNC SCPA4
	NEG AX
SCPA4:  CMP AX,03H
	JNC SCPA5
	MOV AX,ES:[SI+400H]
	MOV SCPA[DI],AX
	MOV AX,ES:[SI+800H]
	MOV SCTON[DI],AX
	INC SCPC
	ADD DI,2
SCPA5:  ADD SI,2
	LOOP SCPA6
	MOV SI,0
	MOV CH,0
	MOV CL,SCPC
	DEC CX
	CMP CX,0
	JNZ SCPA8
SCPA7:NOP
	MOV AL,ES:[4]
	OR AL,10H
	MOV ES:[4],AL
	RET

SCPA8:	MOV SI,0
	MOV CWI,0
	MOV CL,SCPC
	MOV CH,0
	SUB CL,3
L3:	MOV AX,SCTON[SI+2]
	MOV BX,SCTON[SI]
	SUB AX,BX
	JNC L1
	NEG AX
L1:	CMP AX,25D
	JC SAC4D
	INC CWI
	CMP CWI,3
	JC SAC4D
;	MOV CWI,0
	JMP SAC4
SAC4D:	ADD SI,2
	LOOP L3
;	JMP SAC6
	MOV EPA,0
	MOV CWI,0
	MOV CL,SCPC
	MOV CH,0
	DEC CL
	DEC CL
	MOV DI,0
	MOV SI,2
	MOV AX,SCPA[SI]
	AND AX,3FH
	ADD SI,02H
SCPA9:  MOV BX,SCPA[SI]
	AND BX,3FH
	PUSH AX
	SUB AX,BX
	JNC SCPAX
	NEG AX
SCPAX:  CMP AX,4   ;01H   ;3
	JNC SCPAB
	INC EPA
	JMP SCPAC
SCPAB:  MOV PASI[DI],SI
	ADD DI,02H
	CMP DI,120D
	JC SCPAC
	POP AX
	JMP SCPAD
SCPAC:  ADD SI,02H
	POP AX
	LOOP SCPA9
SCPAD:  MOV AL,SCPC
	MOV AH,0
	MOV CL,60D
	MUL CL
	MOV CL,100D
	MOV CH,0
	MOV DX,0
	DIV CX
	CMP EPA,AL
	JC SAC4
	MOV DI,0
SAC5:   MOV AX,PASI[DI+2]
	CMP AX,0
	JZ SAC1
	SUB AX,PASI[DI]
	CMP AX,02H
	JNZ SAC2
	INC CWI
	CMP CWI,05H
	JNC SAC4
	JMP SAC3
SAC2:   MOV CWI,0
SAC3:   ADD DI,2
	JMP SAC5
SAC1:   CMP CWI,05H
	JNC SAC4
SAC6:   MOV AL,01H
	MOV RUSLT[35],AL
	MOV AX,SCPA[0]
	AND AX,3FH
	MOV RUSLT[12],AL
SACR4:  CALL OUTP
	CALL CLEAR
;       MOV AL,34H
;       CALL DISPLAY
	MOV AL,ES:[4]
	OR AL,10H
	MOV ES:[4],AL
	RET
SAC4:   MOV DI,0
	MOV SI,0
	MOV DX,0
	MOV EPA,0
	MOV CL,SCPC
	MOV CH,0
SAC8:   MOV AX,SCTON[SI] ;;GAH
	MOV BX,SCTON[SI+2]
	SUB AX,BX
	JNC SXX
	NEG AX
SXX:    CMP AX,20D    ; 150D    ;500D
	JC SXX1
	MOV PASI[DI],SI
	ADD DI,02H
	CMP DI,06H
	JNC SXX2
SXX1:   ADD SI,2
	LOOP SAC8
	CMP DI,06H
	JNC SXX2
	CMP DI,04H
	JNC BBBV
	JMP SACX8
BBBV:	MOV SI,PASI[0]
	MOV DI,PASI[2]
SXX3:   MOV AX,SCTON[SI]
	MOV BX,SCTON[DI]
	SUB AX,BX
	JNC SXX6
	NEG AX
	CMP AX,600D
	JNC SXX6
	MOV WORD PTR RUSLT[36],1180D    ;600D
	MOV WORD PTR RUSLT[33],28D      ;100D
	MOV RUSLT[35],4
	MOV ES:BYTE PTR[5],4
	JMP AG5A
SXX6:   MOV WORD PTR RUSLT[36],AX
	MOV RUSLT[35],04H
	JMP SXX5
SXX2:
   MOV SI,PASI[0]                      ;   MOV SI,PASI[2]
	MOV DI,PASI[2]                      ;MOV DI,PASI[4]
	MOV AX,SCTON[SI]                    ;JMP SXX3
	  MOV BX,SCTON[DI]
	  SUB AX,BX
	  JNC SX6X
	  NEG AX
SX6X:     MOV T1,AX
	  MOV SI,PASI[2]
	  MOV DI,PASI[4]
	  MOV AX,SCTON[SI]
	  MOV BX,SCTON[DI]
	  SUB AX,BX
	  JNC SX7X
	  NEG AX
SX7X:     MOV T2,AX
	  SUB AX,T1
	  JNC SX8X
	  NEG AX
SX8X:     CMP AX,20H
	  JNC SX9X
	  MOV AX,T2
	  JMP SXX6
SX9X:     MOV AX,T1
	  ADD AX,T2
	  CMP AX,1000D
	  JNC SXX69
	  MOV WORD PTR RUSLT[36],1000D
	  MOV WORD PTR RUSLT[33],27D
	  MOV RUSLT[35],2
	  MOV ES:BYTE PTR[5],2
	  JMP AG5A
SXX69:	  MOV WORD PTR RUSLT[36],AX
	  MOV RUSLT[35],02H
	  JMP SXX5
SACX8:  MOV SI,2
	  MOV DI,0
	  MOV DX,0
	  MOV CX,100D
;         MOV CL,SCPC
;         DEC CL
;         SUB CL,155D
	  MOV AX,SCPA[0]
	  AND AX,3FH
	  MOV PASI[0],0
PP2:      MOV BX,SCPA[SI]
	  AND BX,3FH
	  CMP AX,BX
	  JNC PP1
	  MOV AX,BX
	  MOV PASI[0],SI
PP1:      ADD SI,2
	  LOOP PP2
	  MOV DX,AX
	  MOV SI,PASI[0]
	MOV CX,SI
	SHR CX,1
	MOV AX,254D
	SUB AX,CX
	MOV CX,AX
	MOV BX,SCTON[SI]
HG4:    MOV AX,SCPA[SI+2]
	AND AX,3FH
	SUB AX,DX
	JNC HG
	NEG AX
HG:     CMP AX,1    ;2
	JNC HG1
	MOV AX,SCTON[SI]
	SUB AX,BX
	JNC HG2
	NEG AX
HG2:    CMP AX,30D
	JNC PXP7
HG1:    ADD SI,2
	LOOP HG4
;PXP4:     MOV AX,SCPA[SI]
;         AND AX,3FH
;         MOV BX,SCPA[SI+2]
;         AND BX,3FH
;         CMP AX,BX
;         JC PXP2
;         JZ PXP2
;         SUB AX,DX
;         JNC PXP1
;         NEG AX
;PXP1:     CMP AX,03H
;         JNC PXP3
;         MOV PASR[DI],SI
;         ADD DI,2
;         CMP DI,6
;         JNC PXP6
;PXP3:     ADD SI,2
;         CMP SI,510D
;         JNC PXP5
;         MOV AX,SCPA[SI]
;         AND AX,3FH
;         MOV BX,SCPA[SI+2]
;         AND BX,3FH
;         CMP AX,BX
;         JNC PXP3
;PXP2:     ADD SI,2
;         CMP SI,510D
;         JC PXP4
;PXP5:     CMP DI,06H
;         JNC PXP6
;         MOV RUSLT[35],0FFH
;         JMP AG5A
;PXP6:  MOV AL,0FDH
;       OUT 21H,AL
;       INT 3
;     MOV DX,0
;         MOV SI,PASR[0]
;         MOV DI,PASR[2]
;         MOV AX,SCTON[DI]
;         MOV BX,SCTON[SI]
;         SUB AX,BX
;         JNC PXP7
;         NEG AX
PXP7:;   CMP AX,20D
;	JNC PXP7G
	MOV WORD PTR RUSLT[36],0
	MOV WORD PTR RUSLT[33],0
	MOV RUSLT[35],1
	MOV ES:BYTE PTR[5],1
	JMP AG5A	 
PXP7G:	  MOV WORD PTR RUSLT[36],AX   ;0
	  MOV RUSLT[35],6 ;1  
	  JMP SXX5
;        MOV AX,SCPA[SI]
	AND AX,3FH
	MOV BX,SCPA[SI+2]
	AND BX,3FH
	DEC CX
	DEC CX
	CMP AX,BX
	JG SAC7R
	ADD SI,02H
	JMP SACR1
SAC7R:CMP SI,0
	JNZ SEXX
	JMP SAC7R1
SEXX:   MOV BX,SCPA[SI-2]
	AND BX,3FH
	CMP AX,BX
	JC SAC7R1
	CMP AX,06H
	JC SAC7R1
	JMP SACX
	PUSH SI
SACX3:  SUB SI,2
	CMP SI,0
	JZ SACX1
	MOV BX,SCPA[SI-2]
	AND BX,3FH
	CMP AX,BX
	JC SACX2
	JG SACX1
	JMP SACX3
SACX1:  POP SI
	CMP AX,6
	JC SAC7R1
	JMP SACX
SACX2:  POP SI
	JMP SAC7R1
SACX:   PUSH SI
	PUSH DI
	MOV AL,EPA
	MOV AH,0
	MOV DI,AX
	SHL DI,1
	MOV BX,SI
	CMP AL,0
	JZ SEP8
	DEC AL 
	SHL AL,1
	MOV SI,AX
	MOV AX,SCTON[BX]
	MOV DX,SCTON[SI]
	SUB AX,DX
	JNC SEP9
	NEG AX
SEP9:   CMP AX,10D
	JC SEPA
SEP8:   MOV PASI[DI],BX
	INC EPA
SEPA:   POP DI
	POP SI  
SAC7R1: ADD SI,02H
	MOV AX,SCPA[SI]
	AND AX,3FH
	MOV BX,SCPA[SI+2]
	AND BX,3FH
	DEC CX
	CMP CX,0
	JNZ SR2
	JMP SACR2
SR2:    CMP AX,BX
	JBE SAXC
      JMP SAC7R
SAXC:   MOV AX,SCTON[SI+2]
	MOV BX,SCTON[SI]
	SUB AX,BX
	JNC SAE1
	NEG AX
SAE1:   CMP AX,500D
	JC SAC7R1
	MOV AX,BX
	MOV BX,SCTON[SI-2]
	SUB AX,BX
	JNC SEPB
	NEG AX
SEPB:   CMP AX,20D
	JC  SEPC
	DEC SI
	DEC SI
	MOV PASR[DI],SI
	ADD SI,2
	JMP SEPD
SEPC:   MOV PASR[DI],SI
SEPD:   ADD SI,02H
	MOV AX,SCTON[SI+2]
	MOV BX,SCTON[SI]
	SUB AX,BX
	JNC SEPE
	NEG AX
SEPE:   CMP AX,20D
	JC SEPF
	ADD SI,2
	MOV PASL[DI],SI
	SUB SI,2
	JMP SEP10
SEPF:   MOV PASL[DI],SI
SEP10:  ADD DI,02H
	CMP DI,06H
	JNC SACR2
SACR1:  MOV AX,SCPA[SI]
	AND AX,3FH
	MOV BX,SCPA[SI+2]
	AND BX,3FH
	DEC CX
	CMP CX,0
	JZ SACR2
	JMP SR2
SC7:    ADD SI,2
	JMP SACR1
SACR2:  CMP DI,6
	JNC SACR3
	CMP DI,0
	JNZ SCRA1
	JMP TB4B
SCRA1:  MOV AL,0
	MOV RUSLT[35],AL
	JMP SACR4
SACR3:  MOV BX,0
	MOV SI,PASR[BX]
	MOV DI,PASR[BX+2]
	MOV DX,SCTON[SI]
	MOV AX,SCTON[DI]
	SUB AX,DX
	JNC SEA2
	NEG AX
SEA2:   MOV T1,AX
	MOV DX,SCTON[DI]
	MOV SI,PASR[BX+4]
	MOV AX,SCTON[SI]
	SUB AX,DX
	JNC SEA3
	NEG AX
SEA3:   MOV T2,AX
	SUB AX,T1
	JNC TB66
	NEG AX
TB66:   CMP AX,20D
	JC TB4A
	JMP TB4
TB4A:   MOV AL,04H
	MOV RUSLT[35],AL
TB4A1:      MOV AX,T1
	MOV WORD PTR RUSLT[36],AX
SXX5:        MOV CX,AX
	MOV AX,0EA60H
	MOV DX,0
	CMP CX,0
	JZ AG4AX
	DIV CX
	JMP AG4
AG4AX: MOV AX,20H
AG4:    MOV WORD PTR RUSLT[33],AX
	JMP AG5A
TB5B1:  MOV SI,PASR[2]
	MOV DI,PASL[0]
	MOV AX,SCTON[SI]
	MOV DX,SCTON[DI]
	SUB AX,DX
	MOV WORD PTR RUSLT[38],AX
	JMP TB5B
TB4B:   MOV AL,06H
	MOV RUSLT[35],AL
	CMP EPA,3
	JC TB5B
	MOV SI,PASI[2]
	MOV DI,PASI[0]
	MOV AX,SCTON[SI]
	MOV BX,SCTON[DI]
	SUB AX,BX
      JNC SEP77
	NEG AX
SEP77:CMP AX,10D
	JNC SE7
	MOV AX,19H
SE7:    MOV WORD PTR RUSLT[36],AX
	MOV CX,AX
	MOV AX,0EA60H
	MOV DX,0
	CMP CX,0
	JZ AG4A
	DIV CX
AG4A:   MOV WORD PTR RUSLT[33],AX
TB5B:   MOV DX,0
	MOV SI,PASL[0]
	MOV DI,PASR[2]
	MOV CX,1
	MOV AX,SCPA[SI]
	AND AX,3FH
SLAC2:  ADD SI,02H
	CMP SI,DI
	JNC TB4C
	MOV BX,SCPA[SI]
	AND BX,3FH
	ADD AX,BX
	JNC SLAC1
	INC DX
SLAC1:  INC CX
	JMP SLAC2
TB4C:   CMP CX,0
	JZ AG5
	DIV CX
AG5:    MOV RUSLT[12],AL
AG5A:   CALL OUTP
YYYT:	CALL CLEAR
	MOV AL,ES:[4]
	OR AL,10H
	MOV ES:[4],AL
	RET
TB4:    MOV AX,T1
	ADD AX,T2
	MOV WORD PTR RUSLT[36],AX
	MOV T1,AX
	CMP AX,1000D
	JC TB5
	MOV AL,02H
	MOV RUSLT[35],AL
	JMP TB4A1
TB5:    MOV AL,07H
	MOV RUSLT[35],AL
	JMP TB4A1
SCPAA ENDP

PAGER PROC
;       RET
	PUSH DX
	PUSH DS
	PUSH AX
	MOV AX,3000H
	MOV DS,AX
	MOV DX,260H
	POP AX
	CMP AX,0E000H
	JC DADR
	SUB AX,1000H
	MOV QQPD,01H
DADR:   MOV ES,AX
	CMP QQPD,00H
	JNZ DADR2
	MOV AL,0CH
	OUT DX,AL
	POP DS 
	POP DX
	RET
DADR2: MOV AL,0DH     ;0DH 
	OUT DX,AL
	POP DS
	POP DX
	RET
PAGER ENDP

PAGED PROC
;       RET
	PUSH DX
	MOV DX,260H
	CMP AX,0E000H
	JC DADR3
	SUB AX,1000H
	PUSH AX
	MOV AX,3000H
	MOV DS,AX
	MOV QQPD,01H
	POP AX
DADR3:  MOV DS,AX
	PUSH DS
	MOV AX,3000H
	MOV DS,AX
	CMP QQPD,00H
	JNZ DADR4
	MOV AL,0CH
	OUT DX,AL
	POP DS
	POP DX
	RET
DADR4: MOV AL,0DH     ;0DH
	OUT DX,AL
	POP DS
	POP DX
	RET
PAGED ENDP
TSTC PROC
	CLI
	  MOV DX,260H
	  MOV AL,0CH
	  OUT DX,AL
	MOV AL,07H          ;0F8H
	  MOV DX,0AA6H
	OUT DX,AL
	MOV AL,03H
	OUT DX,AL
	MOV AX,9000H
	MOV ES,AX
	MOV SI,00
	MOV CX,2800H
PL1C:    MOV ES:WORD PTR[SI],00H
	ADD SI,02H
	LOOP PL1C
	MOV SI,0
	MOV BP,0
	MOV DI,00H
A0A1C:   MOV AX,04000H
	MOV ES,AX
	  MOV QQPD,0
	MOV AX,9000H
	MOV DS,AX
A10C:    MOV AX,ES
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	MOV CX,04H
AA10C:   MOV AX,ES:WORD PTR[SI]
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	ADD SI,02H
	LOOP AA10C
	MOV AX,ES:WORD PTR[10H]
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	MOV AX,ES:WORD PTR[210H]
	MOV DS:WORD PTR[DI],AX
	MOV SI,00H
	ADD DI,02H
	MOV CH,00H
	MOV CL,ES:BYTE PTR[SI]
	CMP CX,01H
	JG A2C
	JMP A3C
A2C:     DEC CX
A02C:    MOV AX,ES:WORD PTR[SI+612H]
	SUB AX,ES:WORD PTR[SI+610H]
	MOV DS:WORD PTR[DI],AX
	ADD SI,02H
	ADD DI,02H
	LOOP A02C
A3C:     INC BP
	CMP BP,126D
	JNZ A5C
	JMP A4C
A5C:     MOV AX,DS
	ADD AX,10H
	MOV DS,AX
	MOV AX,ES
	ADD AX,0A1H
	CALL PAGER
	MOV SI,0
	MOV DI,0
	JMP A10C
A4C:     INT 3
	CLI
	  MOV DX,260H
	  MOV AL,0CH
	  OUT DX,AL
	  MOV AL,07H                  ;0F8H
	  MOV DX,0AA6H
	OUT DX,AL
	MOV AL,0FCH                 ;03H
	OUT DX,AL
	MOV AX,9000H
	MOV ES,AX
	MOV SI,00
	MOV CX,1280D
PL2C:    MOV ES:WORD PTR[SI],00H
	ADD SI,02H
	LOOP PL2C
	MOV SI,0
	MOV BP,0
	MOV DI,00H
BA0A1C:  MOV AX,04000H
	MOV ES,AX
	MOV AX,9000H
	MOV DS,AX
BA10C:   MOV AX,ES
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	MOV CX,04H
      MOV SI,8
BAA10C:      MOV AX,ES:WORD PTR[SI]
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	ADD SI,02H
	LOOP BAA10C
	MOV AX,ES:WORD PTR[16D]
	MOV DS:WORD PTR[DI],AX
	ADD DI,02H
	MOV AX,ES:WORD PTR[210H]
	MOV DS:WORD PTR[DI],AX
	ADD DI,4;
	INC BP
	CMP BP,126D
	JNZ BA5C
	JMP BA4C
BA5C:    MOV AX,DS
	ADD AX,1H
	MOV DS,AX
	MOV AX,ES
	ADD AX,0A1H
	CALL PAGER
	MOV SI,0
	MOV DI,0
	JMP BA10C
BA4C:    INT 3
	NOP
	NOP
	NOP
TSTC ENDP
TE PROC
;       RET
	MOV AX,ES
	CMP AX,91C2H
	JC RTE
	MOV AL,0FDH
	OUT 21H,AL
	INT 3
RTE:    RET
TE ENDP
CODE ENDS
END  START

